#######################################################################
          Fichier README de Gnucash 1.5.x .

NOTE: C'EST UNE VERSION DE DEVELOPPEMENT!!! CETTE VERSION N'A PAS
ETE TESTEE CORRECTEMENT ET PEUT FAIRE ABSOLUMENT N'IMPORTE QUOI!  

UTILISEZ LA A VOS PROPRES RISQUES (ET FAITES *BEAUCOUP* DE SAUVEGARDES)

Si vous voulez quelque chose de plus testé, s'il vous plaît utilisez
les series stables 1.4.
-----------------------------------------------------------------------

#########
Sommaire:
---------

  - Vue d'ensemble
  - Mise à jour depuis la version 1.2.x
  - Dépendences
  - Mise en route
  - Internationalisation
  - Compilation et installation
  - OS supportés
  - Sites additionnels de téléchargement
  - Récupérer les sources avec CVS
  - Développement de GnuCash

###############
Vue d'ensemble
---------------

GnuCash est un gestionnaire de finances personnelles.Une interface
graphique d'enregistrement ressemblant au talon de votre chéquier
vous permet d'entrer et de suivre vos comptes bancaires,actions,
revenus et même les marchés des changes.  L'interface est conçu pour
être simple et facile à utiliser, mais elle est adossée à
des principes de comptabilité de la partie double pour
s'assurer que les livres sont équilibrés.

Quelques une de ces caractéristiques sont:

  - Une interface facile à utiliser.  Si vous savez utiliser
    le talon de votre chéquier, vous savez utiliser GnuCash.
    Tapez directement dans le registre,
    déplacez vous entre les champs, et utilisez quick-fill
    (saisie rapide) pour compléter automatiquement la transaction.
    L'interface est personalisable depuis l'application elle-même
    (pas de fichiers de config à modifier :) ).
  - Importation de fichiers Quicken: Importation de fichiers au format
    QIF de Quicken.
    Les fichiers QIF sont automatiquement fusionnés pour éliminer
    les transactions dupliquées
  - La fenêtre de rapprochement avec soldes actuels rapprochés et
    pointés rend le rapprochement facile.
  - Potefeuille d'actions/fonds de placements (SICAV et FCP en France):
    Suivi d'actions individuellement (une par compte) ou dans un
    portefeuille de comptes (un groupe de comptes qui peuvent
    être affiché ensemble).
  - Récupère les cours des actions et fonds communs (FCP et SICAV) depuis
    différents sites web, met à jour automatiquement le porte-feuille
    (plus de fonds étant ajouter régulièrement).
  - Rapports: Affichent la feuille bilan , pertes et profits, évaluation du
    portefeuille, rapports de transactions, ou suivi du solde du compte,
    ou exportation de ceux-ci en HTML. Vous pouvez écrire votre propre
    rapport personalisé si vous connaissez un peu Scheme. Les rapports
    peuvent maintenant être réalisés sur une période comptable!
  - Monnaies/devises multiples et Marché des changes:
    De multiple monnaies sont supportées et peuvent être achetées
    et vendus(faire du commerce avec elles). Les mouvements monétaires
    entre comptes sont totallement équilibrés quand la partie double
    est activée.
    (Quelques aspects du support de multiples monnaies ne sont pas 
    totallement implémentés.
  - Tableau de comptes: Un compte maitre/principal peut avoir une arborescence
    de comptes détaillés en desssous de lui. Celà permet d'avoir des types de
    comptes similaires (par exemple Liquidités, Banque, Actions)
    groupés dans un compte maitre (par exemple Avoirs).
  - Transactions réparties: Une simple transaction peut être répartie
    en plusieurs morceaux pour enregistrer les impôts, paiements, et
    autres entrées composées.
  - Partie double: Quand elle est activé, chaque transaction
    doit débiter un compte et créditer un autre d'un montant équivalent.
    Celà permet de s'assurer que les "livres sont équilibrés":
    c'est à dire que la différence entre les revenus et les sorties est
    exactement égale à la somme de tous les avoirs, qu'ils soit bancaire, 
    liquidités, actions ou autre.
  - Types de comptes Revenus/Dépenses (Catégories):  
    Ils ne servent pas uniquement à catégoriser votre flux
    de liquidités/argent, mais quand ils sont utilisés avec la fonction de
    la partie double, ceux-ci peuvent fournir un état exact des pertes et
    profits et donc du résultat de la période.
  - Extrait de compte/grand livre: De multiples comptes peuvent être affichés
     dans une fenêtre registre/d'enregistrement au même moment. Celà peut
    faciliter l'ennui de la recherche/vérification des erreurs de
    frappe/d'entrée.
    Il fournit aussi une manière agréable de visualiser un porte-feuille de
    beaucoup d'actions, en montrant toutes les transactions dans ce
    portefeuille.
  - Ecrit en C avec un support étendu de scheme via Guile.
  - Le support de Perl est disponible en option pour les scripts fonctionnant
    via SWIG.
  - L'accès au fichier est verrouillé par un drapeau de sécurité réseau,
    prévenant des dommages accidentels si plusieurs utilisateurs essaient
    d'accéder au même fichier, même si le fichier est monté par NFS.
  - Fournit un format de flux de données(byte-stream format), qui permet aux
    comptes et groupes de comptes d'être transmi par d'autres processus
    via pipes ou sockets.
  - Chargement de la date au format européen, traductions française,
    anglaise, allemande et suédoise.


Home Page:

http://gnucash.org/ (site officiel - version anglaise)
http://www.multimania.com/yleny/gnucash (version française)

Binaires précompilés / exécutables:
http://www.gnucash.org/pub/gnucash/

Versions de développement:
http://www.gnucash.org/source_code.php3


###################################
Mise à jour depuis la version 1.2.x
-----------------------------------

Il y a beaucoup, beaucoup de changements depuis la serie 1.2 - 
donnez un coup d'oeil au fichier NEWS si vous voulez plus de détails.
Toutefois, le plus important pour l'installation est que GnuCash
maintenant requiert les librairies Gnome à la place de Motif, et guile
est requis.  Regardez la section "dépendances" de ce fichier pour plus
de détails. Le format de fichier n'a pas changé
(mais faites une sauvegarde de vos données de toute façon . . . )

Nous espérons que vous vous amuserez avec toutes les nouvelles fonctionnalités!

############
Dépendences
------------

Les packages suivants sont requis et doivent être installé pour faire
fonctionner gnucash: 

guile   -- Fournit l'infrastructure du langage d'extension principal.
           Il est utilisé intensivement par gnucash pour l'initialisation
           et le démarrage.
           Requiert la version 1.3 ou ultérieure/plus récente.
           Le rpm guile-1.3-7 fonctionne.

slib    -- librairies scheme pour guile. A besoin de slib2c4 ou ultérieure.

libpng  -- librairie PNG(portable network graphics). N'importe quelle version.

libjpeg -- librairie de chargement d'image JPEG. N'importe quelle version.

libz    -- librairie de compression. N'importe quelle version.

xpm     -- extension Pixmap pour X. N'importe quelle version.

gnome-libs: la version 1.0.40 ou ultérieure/plus récente devrait fonctionner.
            Ces librairies requièrent des librairies supportant de nombreuses
	      autres, tel que gtk et glib.

gnome-print: N'importe quelle version récente devrait fonctionner.

gdk-pixbuf: N'importe quelle version devrait fonctionner.

gtkhtml:   La version 0.4 ou ultérieure/plus récente devrait fonctionner.
             Vous pouvez obtenir la dernière version de gtkhtml depuis
	 Helix Code. (voir site ftp Gnome: ftp.gnome.org)
	 Noter que celà à changé depuis la 1.4, qui utilisait la vieille
	librairie gtkxmhtml.
            Pour compiler les sources de GtkHTML-0.4, il faut gdk-pixbuf 0.7.0
	(ou ultérieure), Bonobo 0.15 (ou ultérieure) et gnome-print 0.16
	(ou ultérieure).

Pour avoir la possibilité d'utiliser certaines fonctionnalitées de GnuCash,
tel que les rapports et les téléchargements de cours d'actions par le réseau,
vous devez avoir les packages suivant ci-dessous installés
(en plus de ceux listés ci-dessus).

Les RPM pour la plupart de ceux-ci peuvent être trouvés à
  http://rufus.w3.org/linux/

perl    -- A peu près n'importe quelle version de perl5 devrait fonctionner.
           J'utilise perl-5.004 

En plus, quelques modules perl ont besoin d'être installés:

perl-LWP/libwww-perl-5.36
perl-HTML/HTML-0.6
perl-HTML/HTML-Parser-2.20
        -- ces modules perl sont utilisés pour récupérer les cours des
           actions et fonds de placements à partir d'internet. Vous pouvez
	     récupérer ces RPMS à:
           ftp://ftp.gnucash.org/pub/gnucash/binaries/RPMS
           http://rufus.w3.org/linux/RPM/PByName.html
           http://linas.org/linux/gnucash (en dernier recours)
           ou les sources à
           http://www.cpan.org/CPAN.html

 Si vous souhaitez utiliser le rapport de suivi du solde et avoir de superbes
 graphiques,
 vous aurez besoin d'installer:

   gnuplot:  Un programme de dessin.
	       Les RPM et debs sont disponible depuis les distributeurs
	       Vous pouvez récupérer les sources depuis:
             http://www.gnuplot.vt.edu/ 

#############
Mise en route
-------------

Pour les détails d'invocation/de lancement de GnuCash, regardez les pages de
man dans doc/gnucash.1.
Bientôt, nous aurons aussi la possibilité de lancer gnucash --help, mais ce
n'est pas encore fini ...

Vous pouvez démarrer GnuCash en ligne de commande, avec "gnucash" ou "gnucash
<nom du fichier>", où <nom du fichier> est un fichier de compte de GnuCash.
Des exemples de comptes peuvent être trouvé dans le sous-répertoire "data".
les fichiers *.dat sont les comptes de GnuCash qui peuvent être ouvert avec
l'entrée du menu "Ouvrir fichier". Les fichiers *.qif sont des fichiers 
au format d'importation Quicken qui peuvent être ouvert avec l'entrée du menu
"Importer QIF".

GnuCash répond aux variables d'environnement suivantes:

  GNC_RUN_AS_SHELL - si activé, permet à GnuCash de s'ouvrir dans un shell
  guile avec toutes les fonctions de gnucash chargées. Depuis là, vous pouvez
  récupérer comportement du démarrage normal comme ceci:

    GNC_RUN_AS_SHELL=t ./gnucash
    guile> (primitive-load (getenv "GNC_BOOTSTRAP_SCM"))
    guile> (gnc:load "startup.scm")
    guile> (gnc:main)

  C'est la même chose qui se passe si vous n'utilisez pas cette variable
  d'environnement. Celà peut être utile quand vous essayez d'écrire et tester
  de nouveaux fichiers .scm.

  GNC_BOOTSTRAP_SCM - l'emplacement du code scheme initial de bootstrapping.

  GNC_SCM_LOAD_PATH - une contrainte pour le chemin de chargement de scheme
  pour GnuCash.Il devrait être une chaine représentant une liste scheme
  appropriée. Chaque élément peut soit être une chaine représentant un
  répertoire, soit le symbole par défaut qui s'étendra au chemin par défaut,
  ou l'actuel qui s'étendra au chemin de chargement par défaut au moment où
  il rencontre le symbole.

  GNC_DEBUG - active la sortie de débogage. Celà vous permet d'activer
  le débogage précédent dans le processus de démarrage que vous pouvez faire
  avec --debug.

Comme exemple, voici un script d'encapsulation (wrapper script) que nous
utilisons pour vous permettre d'utiliser de lancer gnucash depuis le répertoire
local:

  #! /bin/sh

  export G
  
  NC_BOOTSTRAP_SCM=./share/scm/bootstrap.scm
  export GNC_SCM_LOAD_PATH='("./share/scm")'
  export GNC_DEBUG=t

  # Run whichever one was built last.
  exec ./src/gnucash \
    --debug \
    --share-dir ./share \
    --config-dir ./etc \
    --doc-path '("./doc/html/C")' \
    "$@"


###########################
Internationalisation (i18n)
---------------------------

Des catalogues de messages existent pour le français et l'allemand. Ceux-ci
sont activés avec les variables d'environnement. Par example, 

En français, avec bash:
    export LANG=fr_FR
    
En français, avec tcsh:
    setenv LANG fr_FR
    
Pour la version allemande:
    export LANG=de_DE
    

Les autres locales qui devrait pour la plupart fonctionner, mais sont
toujours en développement:

en_US
en_GB
fr_CH
de_CH

(Gnucash utilise gettext maintenant, alors il faut utiliser
les fichiers *.po , le traduire et le compiler par msgfmt.
exemple: msgfmt fr.po --output=./gnucash.mo en ligne de commande
dans /gnucash/po pour le fichier pour la france et copier gnucash.mo sur une
redhat 6.1 GPL dans /usr/share/locale/fr/LC_MESSAGES et vous aurez vos menus
et messages en français.)


############################
Compilation et installation:
----------------------------

Ces étapes ne s'applique pas aux distributions de binaires; uniquement aux
distributions de sources.

Pour plus de détails sur le système de compilation, regardez
doc/README.build-system.)

GnuCash utilise GNU Automake pour traiter le processus de compilation, donc
pour plus de détails, regardez les instructions générales dans INSTALL.
(Notez que, pour avoir un ./configure fonctionnant, vous devrez lancer 
./autogen.sh.)
Ci-dessous nous détaillons les parties spécifiques de Gnucash.
  

Avant de compiler GnuCash, vous devrez obtenir et installer les packages
suivants:

libtool :  Utiliser pour compiler nos versions internes de g-wrap qui charge
           nos encapsuleurs C avec guile.
           Disponible à ftp://ftp.gnu.org/gnu.
           Les RPMs et debs sont largement disponible avec la plupart des
	     distributions.

SWIG    : Utilisé pour autogénérer les encapsuleurs perl.
           Disponible à www.swig.org
           nécessite 1.1p5 ou ultérieure ...

système de développement gnome: en-têtes (headers), librairies, etc.
ibxml: disponible sur ftp.gnome.org

g-wrap  : Les RPM's, debs, et sources sont disponibles à
	ftp://ftp.gnucash.org/pub/g-wrap.
	Si vous utilisez guile version 1.4 ou ultérieure, vous avez besoin de
	g-wrap 0.9.5 ou ultérieure. Si vous utilisez une précédente version
	de guile, vous devrez utilisez g-wrap 0.9.4.

  texinfo: Si vous compilez le CVS, vous avez besoin du package GNU texinfo,
	version 4.0 ou ultérieure.

  docbook: Pour compiler le manuel en ligne, vous aurez besoin des outils
	docbook,  incluant jade et les feuillles de style (stylesheets) de docbook .

	
Ce que vous aurez besoin de récupérer et d'installer dans l'ordre pour être
sûr que vous ayez tous ces éléments corectement installés pour votre
système d'exploitation favorit en particulier variera, mais ici se trouve au
moins une liste partielle de ce que vous aurez besoin pour les systèmes
que nous connaissons:

  Debian/GNU/Linux:
    actuel:
      libgnome-dev
      libgtkhtml-dev (vous pouvez le récupérer depuis Helixcode, il n'est pas  
      dans la Debian)
      guile1.3
      libguile6-dev
      libguile6-slib

  RedHat:
    ???

GnuCash comprend quelques options de ./configure non-standard. Vous
devriez lancer ./configure --help pour le résumé le plus à jour des options
supportées, mais ici se trouvent quelques descriptions sétaillées de
quelques-unes d'entre elles:

  --enable-opt-style-install

    Gnucash supporte deux types d'installation, la première est le style normal
    /usr ou /usr/local/ , où les fichiers sont installés dans
    /usr/bin /usr/lib, etc.  Celà se fait par défaut.

    Le second style est le FSSTND, l'installation de style opt. Dans ce style,
    tous les fichiers sont installés sous un sous-répertoire commun,souvent
    dans /usr/local/opt, avec les exécutables allant dans
    /usr/local/opt/foo/bin, les librairies allant dans /usr/local/opt/foo/lib,
    etc.  Pour demander ce style d'installation, utilisez uniquement l'option 
    --enable-opt-style-install de ./configure.

Si seulement vous voulez q'une langue en particulier soit installée, vous
pouvez mettre la variable d'environnement LINGUAS avant de lancer configure.
Par exemple, pour installer seulement les traductions française, lancez

  $ export LINGUAS=fr
  $ ./configure

Si vous voulez être sûr que toutes les langues soit installées, lancez

  $ unset LINGUAS
  $ ./configure

La dernière version 1.2 stable de GnuCash avait une interface utilisateur basée
sur Motif, et il y avait aussi un expérimental, mais jamais terminé interface
en QT.
L'ensemble de ceux-ci ont été enlevé de l'arborescence des sources durant le
processus de migration vers automake, mais quelqu'un qui est intéressé par la
resurrection de ces parties peut facilement les retrouver dans le CVS.
Notez que  tandis que vous avez besoin des librairies Gnome installées, vous 
n'avez pas besoin d'avoir le bureau/interface Gnome.  

Les destinations de lancement et d'installations sont séparées.  Le --prefix
que vous spécifiez à configure détermine où les exécutables résultant seront
regardé pour des choses au lancement.  Normallement celà détermine où un 
"make install" mettra tous les fichiers.  Toutefois, automake aussi supporte la
variable.  DESTDIR est utilisé durant l'étape `make install' pour relocaliser
les objets d'installation dans un endroit prédisposé.  Chaque objet et chemin
est préfixé avec la valeur de `DESTDIR' avant d'être copié dans l'endroit
d'installation.
Voici un exemple d'usage typique de DESTDIR:

     make DESTDIR=/tmp/staging install

   Celà place les objets d'installation dans une arborescence de répertoire
  construit  sous `/tmp/staging'.  Si `/gnu/bin/foo' et
   `/gnu/share/aclocal/foo.m4' sont à être installés,
   la commande ci-dessous devrait installer 
`/tmp/staging/gnu/bin/foo' et `/tmp/staging/gnu/share/aclocal/foo.m4'.

DESTDIR peut être utile quand on essaie de construire des images d'installation
et des packages.


###############
Os supportés  :
---------------
La version 1.5.X de GnuCash est connu pour fonctionner sur les systèmes
d'exploitation suivants:

GNU/Linux             -- x86, Sparc, Alpha
Solaris		      -- Sparc
FreeBSD               -- x86
OpenBSD               -- x86

Les précédente versions sont  connu pour fonctionner sur les
plateformes suivantes, mais leurs états actuels sont inconnus:

SGI IRIX              -- MIPS 
IBM AIX 4.1.5         -- RS/6000   http://www-frec.bull.com/
Unixware 7            -- Intel
SCO OpenServer 5.0.4  -- Intel

regardez à ftp://ftp.gnucash.org/pub/xacc (grande-bande passante)
ou  http://linas.org/linux/gnucash (slow-www ) 
pour les binaires précompilés ( mais *très vieilles*) pour ces plateformes.

Gnucash peut probablement être fait pour fonctionner avec la plupart des
plateformes POSIX, si les les librairies fournies et les outils sont 
disponibles.

#####################################
Sites additionnels de téléchargement:
-------------------------------------

Vous pouvez aussi télécharger gnucash à partir de:

  - http://download.sourceforge.net/gnucash
  - ftp://ftp.krondo.com

Vous pouvez télécharger les packages Solaris de GnuCash à partir de:

  - http://www.unixrealm.com/downloads/

Vous pouvez récupérer les packages Mandrake de GnuCash sur les sites Cooker de 
Mandrake.

Les binaires précompilés et les packages pré-requis peuvent être trouvé sur
les sites suivants.Les versions de Gnucash ici sont toutes *extrêmement*
vieilles, et sont en fait de l'ancêtre de gnucash : "x-accountant ou xacc".

IBM AIX 4.1.5 
      -- SMIT-installable images
      -- warning, this is from the 1.0 series of xacc
      http://www.bull.de/pub/
      see also http://www-frec.bull.com/

SCO OpenServer 5.0.4 
      http://www.sco.com/skunkware/osr5/x11/apps/xacc/VOLS.tar
      -- warning, this is from the 1.0 series of xacc


Unixware 7
      -- use pkgadd to install
      http://www.sco.com/skunkware/uw7/x11/apps/xacc/xacc.pkg.gz

SGI Irix
      -- in SGI install format
      -- warning, this is a very down-level version
      http://linas.org/linux/xacc/xacc-1.0b7-sgi-irix.inst.tar

###############################
Récupérer les sources avec CVS
-------------------------------

Une version en lecture-seule de l'arborescence de cvs tree est disponible
sur le net.
Pour y accéder, premièrement, loggger vous, comme ceci:

 cvs -d :pserver:cvs@cvs.gnucash.org:/home/cvs/cvsroot login

Le mot de passe (password)est "guest"

Pour récupérer une copie des sources dans l'arborescence de développpement
expérimental faites un

cvs -z3 -d :pserver:cvs@cvs.gnucash.org:/home/cvs/cvsroot checkout -r HEAD 
gnucash

Pour récupérer une copie des sources de l'arborescence de la version de
production stable gnucash-1.4, faites un

cvs -z3 -d :pserver:cvs@cvs.gnucash.org:/home/cvs/cvsroot checkout -r
gnucash-1-4-branch gnucash

########################
Développement de GnuCash
------------------------
Avant de démarrer à développer sur GnuCash, vous devriez faire les choses
suivantes:

1. lisez le fichier src/coding-style.txt pour apprendre les styles
   de codage utilisés dans le code source de GnuCash.

2. Plusieurs des répertoires sous src contiennent des fichiers appellés
   design.txt qui expliquent beaucoup des aspects de la conception de GnuCash.
   Lisez les.

3. Allez sur le site web de gnucash et survoler les archives de la liste de
   courriers de développement de gnucash(development mailing list).

4. Rejoignez la liste de courriers de développement de gnucash(development
   mailing list).
   Regardez le site web de gnucash pour des détails sur comment faire celà.


Soumettre un patch

Dès que vous avez fait un certain travail que vous aimeriez soumettre, vous
avez besoin d'envoyer un patch. Il y a un script perl appelé make-gnucash-patch
fourni avec la distribution que vous pouvez utiliser pour créer le patch.
Ici, se trouve comment utiliser ce script perl.

Premièrement, configurer vos répertoires de développement comme ce qui suit:

< Répertoire de développement maison (home) de GnuCash >
    |
    |---- < répertoire contenant les sources originales de GnuCash >
    |
    |---- < répertoire contenant vos sources modifiées de GnuCash >

Un exemple concret de ces répertoires devrait être:

/home/me/gnucash
    |
    |---- /home/me/gnucash/gnucash.pristine (sources originales)
    |
    |---- /home/me/gnucash/gnucash.mywork (sources originales + mes modifs)

Copier le script make-gnucash-patch vers le répertoire de développement maison
(/home/me/gnucash au-dessus). Maintenant metter les trois variables en haut
de ce fichier pour refléter les noms de vos répertoires. Les noms donnés
ci-dessous, vous devriez les utiliser

  export GNC_MAKEPATCH_OLD_DIR=gnucash.pristine
  export GNC_MAKEPATCH_NEW_DIR=gnucash.mywork
  export GNC_MAKEPATCH_HOME_DIR=/home/me/gnucash

Bien sûr avant de faire votre, soyez sûr *qu'ensemble* votre répertoire de
travail et votre répertoire pristine sont synchroniser avec le cvs.
Lancez 'cvs -z3 update -dP' dans l'ensemble des répertoires pour vous assurer
que c'est le cas.
La mise à jour depuis le cvs dans votre répertoire de travail
peut causer les conflits dans un fichier.
Vous devez résoudre ces conflits avant de faire un patch.


Maintenant lancer le script. Notez que le script requiert les programmes
'makepatch', 'gzip', 'diff', et 'uuencode' (et, bien sûr , 'perl')
pour fonctionner. 

Quand vous lancez le script, trois fichiers seront générés:

  gnc.diff - Ce fichier est un fichier texte ascii contenant les différences
             entre les sources originales et vos modifications. En bas de ce
             fichier se trouve une liste de fichiers qui sont ajoutés,
             changés, ou supprimés.

             S'il vous plait examinez ce fichier (spéciallement la liste en 
bas)
             pour être sûr que tous vos changements (et pas d'autres 
changements)
             sont présent dans le fichier.

             Ne pas soumettre ce fichier!

  gnucash.diff.gz - C'est une version gzippé du fichier au-dessus.

                    Ne pas soumettre ce fichier!

  gnucash.diff.gz.uue - C'est une version uuencodée (ascii-encodé) 
                        du fichier au-dessus.

                        C'est le fichier à soumettre.

Envoyez gnucash.diff.gz.uue à gnucash-patches@gnucash.org

Merci par avance pour votre contribution!


Traduction faite le 12/11/00 par Yannick LE NY
Cette traduction n'est peut-etre plus à jour,
donc référez vous au fichier README en anglais.
Pour toutes remarques ou suggestions:
y-le-ny@ifrance.com

Local Variables:
mode: text
End:
