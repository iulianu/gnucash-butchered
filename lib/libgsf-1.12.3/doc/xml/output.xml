<refentry id="gsf-Output-to-unstructured-files">
<refmeta>
<refentrytitle>Output to unstructured files</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GSF Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>Output to unstructured files</refname><refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>
<anchor id="GsfOutput"/>
<synopsis>



            <link linkend="GsfOutput-struct">GsfOutput</link>;
<link linkend="GsfOutfile">GsfOutfile</link>* <link linkend="gsf-output-container">gsf_output_container</link>            (<link linkend="GsfOutput">GsfOutput</link> const *output);
<link linkend="gsf-off-t">gsf_off_t</link>   <link linkend="gsf-output-size">gsf_output_size</link>                 (<link linkend="GsfOutput">GsfOutput</link> *output);
<link linkend="gboolean">gboolean</link>    <link linkend="gsf-output-close">gsf_output_close</link>                (<link linkend="GsfOutput">GsfOutput</link> *output);
<link linkend="gsf-off-t">gsf_off_t</link>   <link linkend="gsf-output-tell">gsf_output_tell</link>                 (<link linkend="GsfOutput">GsfOutput</link> *output);
<link linkend="gboolean">gboolean</link>    <link linkend="gsf-output-seek">gsf_output_seek</link>                 (<link linkend="GsfOutput">GsfOutput</link> *output,
                                             <link linkend="gsf-off-t">gsf_off_t</link> offset,
                                             <link linkend="GSeekType">GSeekType</link> whence);
<link linkend="gboolean">gboolean</link>    <link linkend="gsf-output-write">gsf_output_write</link>                (<link linkend="GsfOutput">GsfOutput</link> *output,
                                             <link linkend="size-t">size_t</link> num_bytes,
                                             <link linkend="guint8">guint8</link> const *data);
<link linkend="gboolean">gboolean</link>    <link linkend="gsf-output-puts">gsf_output_puts</link>                 (<link linkend="GsfOutput">GsfOutput</link> *output,
                                             <link linkend="char">char</link> const *line);
<link linkend="gboolean">gboolean</link>    <link linkend="gsf-output-printf">gsf_output_printf</link>               (<link linkend="GsfOutput">GsfOutput</link> *output,
                                             <link linkend="char">char</link> const *format,
                                             ...);
<link linkend="gsf-off-t">gsf_off_t</link>   <link linkend="gsf-output-vprintf">gsf_output_vprintf</link>              (<link linkend="GsfOutput">GsfOutput</link> *output,
                                             <link linkend="char">char</link> const *format,
                                             <link linkend="va-list">va_list</link> args);
<link linkend="char">char</link>const   * <link linkend="gsf-output-name">gsf_output_name</link>               (<link linkend="GsfOutput">GsfOutput</link> const *output);
<link linkend="gboolean">gboolean</link>    <link linkend="gsf-output-set-name-from-filename">gsf_output_set_name_from_filename</link>
                                            (<link linkend="GsfOutput">GsfOutput</link> *output,
                                             <link linkend="char">char</link> const *filename);
<link linkend="GQuark">GQuark</link>      <link linkend="gsf-output-error-id">gsf_output_error_id</link>             (void);
<link linkend="gboolean">gboolean</link>    <link linkend="gsf-output-set-error">gsf_output_set_error</link>            (<link linkend="GsfOutput">GsfOutput</link> *output,
                                             <link linkend="gint">gint</link> code,
                                             <link linkend="char">char</link> const *format,
                                             ...);
<link linkend="GError">GError</link>const * <link linkend="gsf-output-error">gsf_output_error</link>              (<link linkend="GsfOutput">GsfOutput</link> const *output);
<link linkend="gboolean">gboolean</link>    <link linkend="gsf-output-is-closed">gsf_output_is_closed</link>            (<link linkend="GsfOutput">GsfOutput</link> const *output);
<link linkend="gboolean">gboolean</link>    <link linkend="gsf-output-wrap">gsf_output_wrap</link>                 (<link linkend="GObject">GObject</link> *wrapper,
                                             <link linkend="GsfOutput">GsfOutput</link> *wrapee);
<link linkend="gboolean">gboolean</link>    <link linkend="gsf-output-unwrap">gsf_output_unwrap</link>               (<link linkend="GObject">GObject</link> *wrapper,
                                             <link linkend="GsfOutput">GsfOutput</link> *wrapee);

<link linkend="gboolean">gboolean</link>    <link linkend="gsf-output-set-name">gsf_output_set_name</link>             (<link linkend="GsfOutput">GsfOutput</link> *output,
                                             <link linkend="char">char</link> const *name);
<link linkend="gboolean">gboolean</link>    <link linkend="gsf-output-set-container">gsf_output_set_container</link>        (<link linkend="GsfOutput">GsfOutput</link> *output,
                                             <link linkend="GsfOutfile">GsfOutfile</link> *container);

</synopsis>
</refsynopsisdiv>

<refsect1>
<title>Object Hierarchy</title>
<synopsis>

  <link linkend="GObject">GObject</link>
   +----GsfOutput
         +----<link linkend="GsfOutfile">GsfOutfile</link>
         +----<link linkend="GsfOutputBzip">GsfOutputBzip</link>
         +----<link linkend="GsfOutputIOChannel">GsfOutputIOChannel</link>
         +----<link linkend="GsfOutputMemory">GsfOutputMemory</link>
         +----<link linkend="GsfOutputStdio">GsfOutputStdio</link>
</synopsis>

</refsect1>





<refsect1>
<title>Properties</title>
<synopsis>

  &quot;<link linkend="GsfOutput--is-closed">is-closed</link>&quot;            <link linkend="gboolean">gboolean</link>              : Read
  &quot;<link linkend="GsfOutput--name">name</link>&quot;                 <link linkend="gchararray">gchararray</link>            : Read
  &quot;<link linkend="GsfOutput--position">position</link>&quot;             <link linkend="gint64">gint64</link>                : Read
  &quot;<link linkend="GsfOutput--size">size</link>&quot;                 <link linkend="gint64">gint64</link>                : Read
</synopsis>
</refsect1>



<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="GsfOutput-struct"/>GsfOutput</title>
<indexterm><primary>GsfOutput</primary></indexterm><programlisting>typedef struct _GsfOutput GsfOutput;</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="gsf-output-container"/>gsf_output_container ()</title>
<indexterm><primary>gsf_output_container</primary></indexterm><programlisting><link linkend="GsfOutfile">GsfOutfile</link>* gsf_output_container            (<link linkend="GsfOutput">GsfOutput</link> const *output);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>output</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>, but does not add a reference to <parameter>output</parameter>'s container.
Potentially NULL
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gsf-output-size"/>gsf_output_size ()</title>
<indexterm><primary>gsf_output_size</primary></indexterm><programlisting><link linkend="gsf-off-t">gsf_off_t</link>   gsf_output_size                 (<link linkend="GsfOutput">GsfOutput</link> *output);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>output</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>the size of the output, or -1 if it does not have a size.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gsf-output-close"/>gsf_output_close ()</title>
<indexterm><primary>gsf_output_close</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    gsf_output_close                (<link linkend="GsfOutput">GsfOutput</link> *output);</programlisting>
<para>
Close a stream.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>output</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>FALSE on error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gsf-output-tell"/>gsf_output_tell ()</title>
<indexterm><primary>gsf_output_tell</primary></indexterm><programlisting><link linkend="gsf-off-t">gsf_off_t</link>   gsf_output_tell                 (<link linkend="GsfOutput">GsfOutput</link> *output);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>output</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>the current position in the file
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gsf-output-seek"/>gsf_output_seek ()</title>
<indexterm><primary>gsf_output_seek</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    gsf_output_seek                 (<link linkend="GsfOutput">GsfOutput</link> *output,
                                             <link linkend="gsf-off-t">gsf_off_t</link> offset,
                                             <link linkend="GSeekType">GSeekType</link> whence);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>output</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>offset</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>whence</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>FALSE on error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gsf-output-write"/>gsf_output_write ()</title>
<indexterm><primary>gsf_output_write</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    gsf_output_write                (<link linkend="GsfOutput">GsfOutput</link> *output,
                                             <link linkend="size-t">size_t</link> num_bytes,
                                             <link linkend="guint8">guint8</link> const *data);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>output</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>num_bytes</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>FALSE on error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gsf-output-puts"/>gsf_output_puts ()</title>
<indexterm><primary>gsf_output_puts</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    gsf_output_puts                 (<link linkend="GsfOutput">GsfOutput</link> *output,
                                             <link linkend="char">char</link> const *line);</programlisting>
<para>
Like fputs, this assumes that the line already ends with a newline</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>output</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GsfOutput"><type>GsfOutput</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>line</parameter>&nbsp;:</term>
<listitem><simpara> <literal>null</literal> terminated string to write
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> TRUE if successful, FALSE if not
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gsf-output-printf"/>gsf_output_printf ()</title>
<indexterm><primary>gsf_output_printf</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    gsf_output_printf               (<link linkend="GsfOutput">GsfOutput</link> *output,
                                             <link linkend="char">char</link> const *format,
                                             ...);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>output</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GsfOutput"><type>GsfOutput</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>format</parameter>&nbsp;:</term>
<listitem><simpara> The printf-style format string
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>...</parameter>&nbsp;:</term>
<listitem><simpara> the arguments for <parameter>format</parameter>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> TRUE if successful, FALSE if not
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gsf-output-vprintf"/>gsf_output_vprintf ()</title>
<indexterm><primary>gsf_output_vprintf</primary></indexterm><programlisting><link linkend="gsf-off-t">gsf_off_t</link>   gsf_output_vprintf              (<link linkend="GsfOutput">GsfOutput</link> *output,
                                             <link linkend="char">char</link> const *format,
                                             <link linkend="va-list">va_list</link> args);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>output</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GsfOutput"><type>GsfOutput</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>format</parameter>&nbsp;:</term>
<listitem><simpara> The printf-style format string
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>args</parameter>&nbsp;:</term>
<listitem><simpara> the arguments for <parameter>format</parameter>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> number of bytes printed, a negative value if not successful
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gsf-output-name"/>gsf_output_name ()</title>
<indexterm><primary>gsf_output_name</primary></indexterm><programlisting><link linkend="char">char</link>const   * gsf_output_name               (<link linkend="GsfOutput">GsfOutput</link> const *output);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>output</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara><parameter>output</parameter>'s name in utf8 form, DO NOT FREE THIS STRING
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gsf-output-set-name-from-filename"/>gsf_output_set_name_from_filename ()</title>
<indexterm><primary>gsf_output_set_name_from_filename</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    gsf_output_set_name_from_filename
                                            (<link linkend="GsfOutput">GsfOutput</link> *output,
                                             <link linkend="char">char</link> const *filename);</programlisting>
<para>
<note>This is a utility routine that should only be used by derived
outputs.</note></para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>output</parameter>&nbsp;:</term>
<listitem><simpara> the output stream
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filename</parameter>&nbsp;:</term>
<listitem><simpara> the (fs-sys encoded) filename
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>: TRUE if the assignment was ok.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gsf-output-error-id"/>gsf_output_error_id ()</title>
<indexterm><primary>gsf_output_error_id</primary></indexterm><programlisting><link linkend="GQuark">GQuark</link>      gsf_output_error_id             (void);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gsf-output-set-error"/>gsf_output_set_error ()</title>
<indexterm><primary>gsf_output_set_error</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    gsf_output_set_error            (<link linkend="GsfOutput">GsfOutput</link> *output,
                                             <link linkend="gint">gint</link> code,
                                             <link linkend="char">char</link> const *format,
                                             ...);</programlisting>
<para>
<note>This is a utility routine that should only be used by derived
outputs.</note></para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>output</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>code</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>format</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>...</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>Always returns FALSE to facilitate its use.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gsf-output-error"/>gsf_output_error ()</title>
<indexterm><primary>gsf_output_error</primary></indexterm><programlisting><link linkend="GError">GError</link>const * gsf_output_error              (<link linkend="GsfOutput">GsfOutput</link> const *output);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>output</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>the last error logged on the output, or NULL.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gsf-output-is-closed"/>gsf_output_is_closed ()</title>
<indexterm><primary>gsf_output_is_closed</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    gsf_output_is_closed            (<link linkend="GsfOutput">GsfOutput</link> const *output);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>output</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>TRUE if <parameter>output</parameter> has already been closed.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gsf-output-wrap"/>gsf_output_wrap ()</title>
<indexterm><primary>gsf_output_wrap</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    gsf_output_wrap                 (<link linkend="GObject">GObject</link> *wrapper,
                                             <link linkend="GsfOutput">GsfOutput</link> *wrapee);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>wrapper</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>wrapee</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>TRUE if the wrapping succeeded.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gsf-output-unwrap"/>gsf_output_unwrap ()</title>
<indexterm><primary>gsf_output_unwrap</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    gsf_output_unwrap               (<link linkend="GObject">GObject</link> *wrapper,
                                             <link linkend="GsfOutput">GsfOutput</link> *wrapee);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>wrapper</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>wrapee</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>TRUE if the unwrapping succeeded.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gsf-output-set-name"/>gsf_output_set_name ()</title>
<indexterm><primary>gsf_output_set_name</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    gsf_output_set_name             (<link linkend="GsfOutput">GsfOutput</link> *output,
                                             <link linkend="char">char</link> const *name);</programlisting>
<para>
<note>This is a utility routine that should only be used by derived
outputs.</note></para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>output</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>name</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>: TRUE if the assignment was ok.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gsf-output-set-container"/>gsf_output_set_container ()</title>
<indexterm><primary>gsf_output_set_container</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    gsf_output_set_container        (<link linkend="GsfOutput">GsfOutput</link> *output,
                                             <link linkend="GsfOutfile">GsfOutfile</link> *container);</programlisting>
<para>
<note>This is a utility routine that should only be used by derived
outputs.</note></para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>output</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>container</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>: TRUE if the assignment was ok.
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>
<refsect1>
<title>Properties</title>
<refsect2><title><anchor id="GsfOutput--is-closed"/>The &quot;<literal>is-closed</literal>&quot; property</title>
<programlisting>  &quot;is-closed&quot;            <link linkend="gboolean">gboolean</link>              : Read</programlisting>
<para>Whether the Output is Closed.</para><para>Default value: FALSE</para>
</refsect2>
<refsect2><title><anchor id="GsfOutput--name"/>The &quot;<literal>name</literal>&quot; property</title>
<programlisting>  &quot;name&quot;                 <link linkend="gchararray">gchararray</link>            : Read</programlisting>
<para>The Output's Name.</para><para>Default value: NULL</para>
</refsect2>
<refsect2><title><anchor id="GsfOutput--position"/>The &quot;<literal>position</literal>&quot; property</title>
<programlisting>  &quot;position&quot;             <link linkend="gint64">gint64</link>                : Read</programlisting>
<para>The Output's Current Position.</para><para>Allowed values: &gt;= 0</para>
<para>Default value: 0</para>
</refsect2>
<refsect2><title><anchor id="GsfOutput--size"/>The &quot;<literal>size</literal>&quot; property</title>
<programlisting>  &quot;size&quot;                 <link linkend="gint64">gint64</link>                : Read</programlisting>
<para>The Output's Size.</para><para>Allowed values: &gt;= 0</para>
<para>Default value: 0</para>
</refsect2>

</refsect1>




</refentry>
