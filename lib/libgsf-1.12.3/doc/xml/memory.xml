<refentry id="gsf-memory">
<refmeta>
<refentrytitle>memory</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GSF Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>memory</refname><refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>
<anchor id="GsfInputMemory"/><anchor id="GsfOutputMemory"/><anchor id="GsfSharedMemory"/>
<synopsis>



            <link linkend="GsfInputMemory-struct">GsfInputMemory</link>;
<link linkend="GsfInput">GsfInput</link>*   <link linkend="gsf-input-mmap-new">gsf_input_mmap_new</link>              (<link linkend="char">char</link> const *filename,
                                             <link linkend="GError">GError</link> **err);
<link linkend="GsfInput">GsfInput</link>*   <link linkend="gsf-input-memory-new">gsf_input_memory_new</link>            (<link linkend="guint8">guint8</link> const *buf,
                                             <link linkend="gsf-off-t">gsf_off_t</link> length,
                                             <link linkend="gboolean">gboolean</link> needs_free);
<link linkend="GsfInput">GsfInput</link>*   <link linkend="gsf-input-memory-new-clone">gsf_input_memory_new_clone</link>      (<link linkend="guint8">guint8</link> const *buf,
                                             <link linkend="gsf-off-t">gsf_off_t</link> length);
<link linkend="GsfInput">GsfInput</link>*   <link linkend="gsf-input-memory-new-from-iochannel">gsf_input_memory_new_from_iochannel</link>
                                            (<link linkend="GIOChannel">GIOChannel</link> *channel,
                                             <link linkend="GError">GError</link> **error);
            <link linkend="GsfOutputMemory-struct">GsfOutputMemory</link>;
const <link linkend="guint8">guint8</link>* <link linkend="gsf-output-memory-get-bytes">gsf_output_memory_get_bytes</link>   (<link linkend="GsfOutputMemory">GsfOutputMemory</link> *mem);
<link linkend="GType">GType</link>       <link linkend="gsf-output-memory-get-type">gsf_output_memory_get_type</link>      (void);
<link linkend="GsfOutput">GsfOutput</link>*  <link linkend="gsf-output-memory-new">gsf_output_memory_new</link>           (void);
            <link linkend="GsfSharedMemory-struct">GsfSharedMemory</link>;
<link linkend="GsfSharedMemory">GsfSharedMemory</link>* <link linkend="gsf-shared-memory-new">gsf_shared_memory_new</link>      (<link linkend="void">void</link> *buf,
                                             <link linkend="gsf-off-t">gsf_off_t</link> size,
                                             <link linkend="gboolean">gboolean</link> needs_free);
<link linkend="GsfSharedMemory">GsfSharedMemory</link>* <link linkend="gsf-shared-memory-mmapped-new">gsf_shared_memory_mmapped_new</link>
                                            (<link linkend="void">void</link> *buf,
                                             <link linkend="gsf-off-t">gsf_off_t</link> size);

</synopsis>
</refsynopsisdiv>

<refsect1>
<title>Object Hierarchy</title>
<synopsis>

  <link linkend="GObject">GObject</link>
   +----<link linkend="GsfInput">GsfInput</link>
         +----GsfInputMemory
</synopsis>
<synopsis>

  <link linkend="GObject">GObject</link>
   +----<link linkend="GsfOutput">GsfOutput</link>
         +----GsfOutputMemory
</synopsis>
<synopsis>

  <link linkend="GObject">GObject</link>
   +----GsfSharedMemory
</synopsis>

</refsect1>








<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="GsfInputMemory-struct"/>GsfInputMemory</title>
<indexterm><primary>GsfInputMemory</primary></indexterm><programlisting>typedef struct _GsfInputMemory GsfInputMemory;</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="gsf-input-mmap-new"/>gsf_input_mmap_new ()</title>
<indexterm><primary>gsf_input_mmap_new</primary></indexterm><programlisting><link linkend="GsfInput">GsfInput</link>*   gsf_input_mmap_new              (<link linkend="char">char</link> const *filename,
                                             <link linkend="GError">GError</link> **err);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>filename</parameter>&nbsp;:</term>
<listitem><simpara> The file on disk that you want to mmap
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>err</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GError"><type>GError</type></link>, or optionally <literal>null</literal>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> A new <link linkend="GsfInputMemory"><type>GsfInputMemory</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gsf-input-memory-new"/>gsf_input_memory_new ()</title>
<indexterm><primary>gsf_input_memory_new</primary></indexterm><programlisting><link linkend="GsfInput">GsfInput</link>*   gsf_input_memory_new            (<link linkend="guint8">guint8</link> const *buf,
                                             <link linkend="gsf-off-t">gsf_off_t</link> length,
                                             <link linkend="gboolean">gboolean</link> needs_free);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>buf</parameter>&nbsp;:</term>
<listitem><simpara> The input bytes
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>length</parameter>&nbsp;:</term>
<listitem><simpara> The length of <parameter>buf</parameter>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>needs_free</parameter>&nbsp;:</term>
<listitem><simpara> Whether you want this memory to be free'd at object destruction
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> A new <link linkend="GsfInputMemory"><type>GsfInputMemory</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gsf-input-memory-new-clone"/>gsf_input_memory_new_clone ()</title>
<indexterm><primary>gsf_input_memory_new_clone</primary></indexterm><programlisting><link linkend="GsfInput">GsfInput</link>*   gsf_input_memory_new_clone      (<link linkend="guint8">guint8</link> const *buf,
                                             <link linkend="gsf-off-t">gsf_off_t</link> length);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>buf</parameter>&nbsp;:</term>
<listitem><simpara> The input bytes
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>length</parameter>&nbsp;:</term>
<listitem><simpara> The length of <parameter>buf</parameter>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> A new <link linkend="GsfInputMemory"><type>GsfInputMemory</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gsf-input-memory-new-from-iochannel"/>gsf_input_memory_new_from_iochannel ()</title>
<indexterm><primary>gsf_input_memory_new_from_iochannel</primary></indexterm><programlisting><link linkend="GsfInput">GsfInput</link>*   gsf_input_memory_new_from_iochannel
                                            (<link linkend="GIOChannel">GIOChannel</link> *channel,
                                             <link linkend="GError">GError</link> **error);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>channel</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GIOChannel"><type>GIOChannel</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GError"><type>GError</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>a new <link linkend="GsfInputMemory"><type>GsfInputMemory</type></link> or NULL.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="GsfOutputMemory-struct"/>GsfOutputMemory</title>
<indexterm><primary>GsfOutputMemory</primary></indexterm><programlisting>typedef struct _GsfOutputMemory GsfOutputMemory;</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="gsf-output-memory-get-bytes"/>gsf_output_memory_get_bytes ()</title>
<indexterm><primary>gsf_output_memory_get_bytes</primary></indexterm><programlisting>const <link linkend="guint8">guint8</link>* gsf_output_memory_get_bytes   (<link linkend="GsfOutputMemory">GsfOutputMemory</link> *mem);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>mem</parameter>&nbsp;:</term>
<listitem><simpara> the output device.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> The data that has been written to <parameter>mem</parameter>, or <literal>null</literal>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gsf-output-memory-get-type"/>gsf_output_memory_get_type ()</title>
<indexterm><primary>gsf_output_memory_get_type</primary></indexterm><programlisting><link linkend="GType">GType</link>       gsf_output_memory_get_type      (void);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gsf-output-memory-new"/>gsf_output_memory_new ()</title>
<indexterm><primary>gsf_output_memory_new</primary></indexterm><programlisting><link linkend="GsfOutput">GsfOutput</link>*  gsf_output_memory_new           (void);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>a new file or NULL.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="GsfSharedMemory-struct"/>GsfSharedMemory</title>
<indexterm><primary>GsfSharedMemory</primary></indexterm><programlisting>typedef struct _GsfSharedMemory GsfSharedMemory;</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="gsf-shared-memory-new"/>gsf_shared_memory_new ()</title>
<indexterm><primary>gsf_shared_memory_new</primary></indexterm><programlisting><link linkend="GsfSharedMemory">GsfSharedMemory</link>* gsf_shared_memory_new      (<link linkend="void">void</link> *buf,
                                             <link linkend="gsf-off-t">gsf_off_t</link> size,
                                             <link linkend="gboolean">gboolean</link> needs_free);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>buf</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>size</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>needs_free</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gsf-shared-memory-mmapped-new"/>gsf_shared_memory_mmapped_new ()</title>
<indexterm><primary>gsf_shared_memory_mmapped_new</primary></indexterm><programlisting><link linkend="GsfSharedMemory">GsfSharedMemory</link>* gsf_shared_memory_mmapped_new
                                            (<link linkend="void">void</link> *buf,
                                             <link linkend="gsf-off-t">gsf_off_t</link> size);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>buf</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>size</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
