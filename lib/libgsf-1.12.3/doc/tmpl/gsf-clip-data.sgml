<!-- ##### SECTION Title ##### -->
GsfClipData

<!-- ##### SECTION Short_Description ##### -->
Object to hold clipboard data from a VT_CF section

<!-- ##### SECTION Long_Description ##### -->
  <para>
    OLE2 files may contain clipboard data in the
    <literal>VT_CF</literal> property of the metadata in a
    <literal>SummaryInfo</literal> section.  This data is used, among
    other things, to represent a thumbnail or pre-rendered version of
    the data in the file.  <classname>GsfClipData</classname> is an
    object that holds such clipboard data.
  </para>

  <para>
    You can get a <classname>GsfClipData</classname> object from the
    #GValue returned by gsf_doc_prop_get_val(), after you have done
    <literal>gsf_doc_meta_data_lookup (meta_data,
    GSF_META_NAME_THUMBNAIL)</literal>.  The resulting #GsfClipData
    object, if it exists, contains the thumbnail data.  In turn, the
    thumbnail data may be in different formats, as specified by the
    #GsfClipFormat enumeration.
  </para>

  <para>
    Internally, #GsfClipData stores the thumbnail data plus any extra
    information in a #GsfBlob object.  #GsfClipData provides a
    convenience function, gsf_clip_data_peek_real_data(), to extract
    the thumbnail data directly.  If you need to use the raw binary
    data instead of the data specific to the thumbnail, you can use
    gsf_clip_data_get_data_blob() to get the #GsfBlob object and
    handle it yourself.
  </para>

<!-- ##### SECTION See_Also ##### -->
  <para>
    #GsfBlob, #GsfDocMetaData
  </para>

<!-- ##### SECTION Stability_Level ##### -->


<!-- ##### ENUM GsfClipFormat ##### -->
  <para>
    A #GsfClipData stores all its thumbnail data and associated
    information in an internal #GsfBlob object.  The
    <type>GsfClipFormat</type> enumeration represents the possible
    formats for this data blob.
  </para>

@GSF_CLIP_FORMAT_WINDOWS_CLIPBOARD: The thumbnail data is stored in
  Windows clipboard format.  The particular sub-format can be in any of
  the values in the #GsfClipFormatWindows enumeration.  When a
  #GsfClipData is in @GSF_CLIP_FORMAT_WINDOWS_CLIPBOARD, you can use
  gsf_clip_data_get_windows_clipboard_format() to get the sub-format
  in which the data is actually stored.
@GSF_CLIP_FORMAT_MACINTOSH_CLIPBOARD: The thumbnail data is stored in
  Macintosh clipboard format, usually PICT.
@GSF_CLIP_FORMAT_GUID: The thumbnail data contains a GUID specifying
  the OLE component which can be used to render it.  Please refer to
  the OLE2 format documentation for details.
@GSF_CLIP_FORMAT_NO_DATA: There is no thumbnail data.
@GSF_CLIP_FORMAT_CLIPBOARD_FORMAT_NAME: The thumbnail data contains a
  null-terminated string with a Windows clipboard format name.  Please refer to
  the OLE2 format documentation for details.
@GSF_CLIP_FORMAT_UNKNOWN: The thumbnail data is in an unknown format,
  but is nevertheless stored in a #GsfBlob.

<!-- ##### ENUM GsfClipFormatWindows ##### -->
  <para>
    When a #GsfClipData is in GSF_CLIP_FORMAT_WINDOWS_CLIPBOARD
    format, it can be in any of the subformats specified by the
    <type>GsfClipFormatWindows</type> enumeration.  Use
    gsf_clip_data_get_windows_clipboard_format() to determine this
    sub-format.
  </para>

  <para>
    For all of these values, the gsf_clip_data_peek_real_data()
    function lets you access the data directly.
  </para>

@GSF_CLIP_FORMAT_WINDOWS_ERROR: The OLE file is probably corrupt.
@GSF_CLIP_FORMAT_WINDOWS_UNKNOWN: The specific clipboard format is
  unknown to libgsf.
@GSF_CLIP_FORMAT_WINDOWS_METAFILE: The data is in Windows Metafile
  format.  While OLE files store extra header data in this case, the
  gsf_clip_data_peek_real_data() function will let you access the WMF
  data directly, and it will ignore the extra header bytes.
@GSF_CLIP_FORMAT_WINDOWS_DIB: The data is in Windows
  Device-Independent Bitmap format.
@GSF_CLIP_FORMAT_WINDOWS_ENHANCED_METAFILE: The data is in Windows
  Enhanced Metaflie format.

<!-- ##### STRUCT GsfClipData ##### -->
  <para>
    Object used to represent a VT_CF property in the OLE stream.
  </para>

@object: 
@priv: 

<!-- ##### STRUCT GsfClipDataClass ##### -->
<para>

</para>

@parent_class: 

<!-- ##### FUNCTION gsf_clip_data_new ##### -->
<para>

</para>

@format: 
@data_blob: 
@Returns: 


<!-- ##### FUNCTION gsf_clip_data_get_format ##### -->
<para>

</para>

@clip_data: 
@Returns: 


<!-- ##### FUNCTION gsf_clip_data_get_data_blob ##### -->
<para>

</para>

@clip_data: 
@Returns: 


<!-- ##### FUNCTION gsf_clip_data_get_windows_clipboard_format ##### -->
<para>

</para>

@clip_data: 
@error: 
@Returns: 


<!-- ##### FUNCTION gsf_clip_data_peek_real_data ##### -->
<para>

</para>

@clip_data: 
@ret_size: 
@error: 
@Returns: 



<!--
Local variables:
mode: sgml
sgml-parent-document: ("../gsf-docs.sgml" "book" "refsect1")
End:
-->


