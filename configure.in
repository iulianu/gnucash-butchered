AC_INIT(src/motif/main.c)

# *******************************************
# * figure out the configure options:
CFLAGS="${CFLAGS} -O2 -Wall"

# some plything option lists
#        CFLAGS="-g -Wall -ansi -pedantic -Wwrite-strings -Wid-clash-31 -Wpointer-arith -Wcast-qual -Wcast-align -Wtraditional -Wstrict-prototypes -Wmissing-prototypes -Wnested-externs -Wshadow -Woverloaded-virtual -Winline -felide-constructors -fnonnull-objects"
#       CFLAGS="-g -Wall -ansi -pedantic -Wwrite-strings -Wtraditional  -Wstrict-prototypes -Wmissing-prototypes -Wnested-externs -Wshadow -Winline" 
#       CFLAGS="-g -Wall -ansi -pedantic"

AC_ARG_ENABLE( debug,
       [  --enable-debug          compile with debugging flags set],
       CFLAGS="${CFLAGS} -g -Wall"
       LDFLAGS="${LDFLAGS} -g -Wall"
       AC_DEFINE(DEBUG_MEMORY,1) AC_DEFINE(USE_DEBUG,1),
       AC_DEFINE(DEBUG_MEMORY,0) AC_DEFINE(USE_DEBUG,0) )

AC_ARG_ENABLE( warnings,
       [  --enable-warnings         compile with lots of warnings generated],
       CFLAGS="${CFLAGS} -g -Wall -ansi -pedantic -Wwrite-strings -Wid-clash-31 -Wpointer-arith -Wcast-qual -Wcast-align -Wtraditional -Wstrict-prototypes -Wmissing-prototypes -Wnested-externs -Wshadow -Woverloaded-virtual -Winline -felide-constructors -fnonnull-objects"
       LDFLAGS="${LDFLAGS} -g -Wall"
       AC_DEFINE(DEBUG_MEMORY,1) AC_DEFINE(USE_DEBUG,1) )


# USE_QUICKFILL:
AC_DEFINE(USE_QUICKFILL,1)

# Should we uses color (red/black) balances?
AC_ARG_ENABLE( color,
       [  --disable-color         don't use color (red/black) balances],
       AC_DEFINE(USE_NO_COLOR,1),
       AC_DEFINE(USE_NO_COLOR,0) )

# Let the user specify motif paths:
AC_ARG_WITH( motif, 
       [  --with-motif=PATH       specify where to look for motif includes and libs],
       X_LIBS="${X_LIBS} -L$with_motif/lib" X_CFLAGS="$X_CFLAGS -I$with_motif/include" )

AC_ARG_WITH( motif-includes, 
       [  --with-motif-includes=DIR    specify where to look for motif includes],
       X_CFLAGS="${X_CFLAGS} -I$with_motif_includes" )

AC_ARG_WITH( motif-libraries, 
       [  --with-motif-libraries=DIR   specify where to look for motif libs],
       X_LIBS="${X_LIBS} -L$with_motif_libraries" )

# Let the user specify gnome paths:
# -I...libgnomesupport is to fix bug in gnome-1.3 release
AC_ARG_WITH( gnome, 
       [  --with-gnome=PATH       specify where to look for gnome includes and libs],
       X_LIBS="${X_LIBS} -L$with_gnome/lib" X_CFLAGS="$X_CFLAGS -I$with_gnome/include -I$with_gnome/lib/gnome-libs/include" )

AC_ARG_WITH( gnome-includes, 
       [  --with-gnome-includes=DIR    specify where to look for gnome includes],
       X_CFLAGS="${X_CFLAGS} -I$with_gnome_includes -I$with_gnome_includes/libgnomesupport" )

AC_ARG_WITH( gnome-libraries, 
       [  --with-gnome-libraries=DIR   specify where to look for gnome libs],
       X_LIBS="${X_LIBS} -L$with_gnome_libraries" )

AC_ARG_WITH(package, help-string [, action-if-given [, action-if-not-given]])

# *******************************************
# check for various programs, and stuff:
AC_PROG_INSTALL
AC_PROG_RANLIB
AC_PROG_CC
AC_ISC_POSIX
AC_C_BIGENDIAN
AC_PROG_MAKE_SET

# *******************************************
# check for UI libs:
AC_PATH_X
AC_PATH_XTRA

LIBS="-lm"
# the XmHTML widget needs libz, libjpeg, libpng and libm
# it also uses #ifdef's not #if's so DONT #def to zero.
AC_CHECK_LIB(z, deflateEnd,
        AC_DEFINE(HAVE_ZLIB,1) LIBS="-lz $LIBS")
AC_CHECK_LIB(jpeg, jpeg_read_scanlines,
        AC_DEFINE(HAVE_JPEG,1) LIBS="-ljpeg $LIBS")
AC_CHECK_LIB(png, png_read_image,
        AC_DEFINE(HAVE_PNG,1) LIBS="-lpng $LIBS")

# This should be done in the OTHER_LIBRARIES argument to AC_CHECK_LIB
# if it's actually needed and Makefile.in's should be using
# X_PRE_LIBS, X_LIBS, and X_EXTRA_LIBS, rather than relying on LIBS.
# LIBS="-lXmu -lXt -lXext $X_PRE_LIBS -lX11 $X_LIBS $X_EXTRA_LIBS $LIBS"

AC_CHECK_LIB(Xpm, XpmReadFileToXpmImage,
        AC_DEFINE(HAVE_XPM,1) X_LIBS="-lXpm $X_LIBS",
        AC_DEFINE(HAVE_XPM,0), -L $x_libraries -lX11)

# *******************************************
AC_CONFIG_HEADER(config.h)

AC_OUTPUT(xacc Makefile src/Makefile src/engine/Makefile src/guile/Makefile src/gnome/Makefile src/motif/Makefile src/qt/Makefile src/register/Makefile lib/Makefile lib/XmHTML-1.1.0/Makefile lib/XmHTML-1.1.0/src/Makefile lib/Xbae-4.6.2-linas/Makefile lib/Xbae-4.6.2-linas/src/Makefile lib/ComboBox-1.33/Makefile)

chmod +x xacc
