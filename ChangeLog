2000-08-21  Dave Peticolas  <dave@krondo.com>

	* src/gnome/reconcile-list.c (gnc_reconcile_list_fill): fix
	a memory leak. xaccTransGetDateStr returns a malloc'd string.

	* src/engine/: Move transaction date routines from date.c to
	Transaction.c. Move definition of Timespec from Transaction.h
	to date.h. Some code cleanup in date.c.

	* src/register/QuickFill.c (qfInsertTextRec): When inserting new
	strings, don't replace older strings that are prefixes of the new
	string.

	* src/engine/gnc-common.h: remove gncBoolean type and constants.
	Replace all uses with glib versions.

2000-08-12  Dave Peticolas  <dave@krondo.com>

	* src/engine/Transaction.c (xaccSplitSetBaseValue): don't adjust
	the price when the base currency is the security of the account.

2000-08-10  Dave Peticolas  <dave@krondo.com>

	* src/register/table-allgui.c (gnc_table_physical_cell_valid): bug
	fix -- get the virtual cell of the target location before getting
	the cellblock.

2000-08-09  Dave Peticolas  <dave@krondo.com>

	* src/gnome/dialog-utils.c: remove unused code

	* src/gnome/dialog-account.c: new file implementing the
	consolidated account add and account edit windows using glade.

2000-08-07  Dave Peticolas  <dave@krondo.com>

	* src/register/*.c: Use glib memory allocation routines.

	* src/register/cellblock.c: fix memory leaks and use glib memory
	allocation routines.

	* src/register/table-allgui.c: reimplement the Table code using
	glib's dynamic arrays. Clean up the code and homogenize the
	function naming convention.

2000-08-04  Dave Peticolas  <dave@krondo.com>

	* src/register/table-gnome.h: remove unused data members

	* src/register/basiccell.h: remove the pixel_width argument
	to the realize callback, it is no longer used.

	* src/register/table-allgui.c: remove the gnc_table_column_width
	call.

2000-08-07  Rob Browning  <rlb@cs.utexas.edu>

	* src/scm/tip-of-the-day.scm: don't initialize at startup.

	* src/scm/main.scm (gnc:*batch-mode-forms-to-evaluate*): new
	global to hold forms added by --evaluate for execution after
	startup.
	(gnc:main): support --evalutate properly.

	* src/scm/engine-utilities.scm (gnc:transaction-map-splits): moved here.
	(gnc:group-map-accounts): moved here.

	* src/scm/command-line.scm (gnc:*arg-defs*): add --evaluate
	option.  This should be considered beta, and it's not documented
	yet, but it's useful for me right now, we need something like it,
	and I'd like others to see what they think.  Also, this will only
	work right when I finish fixing up tip-of-the-day to not
	initialize when the file loads.

	* src/pixmaps/Makefile.am: minor typo.

	* src/guile/option-util.c: include string.h

	* src/guile/guile-util.c: include string.h

	* src/guile/gfec.c: include string.h

	* doc/gnucash.1: change filename extension in example to .gnc

	* configure.in: always report missing templates as an error.

	* README: updates (also change = to # for section seps (helps CVS))

2000-07-22  Dave Peticolas  <dave@krondo.com>

	* src/gnome/window-reconcile.c: After reconciliation, if the
	account is a credit card account, automatically pop up a transfer
	window with the appropriate amount and accounts.

2000-07-21  Dave Peticolas  <dave@krondo.com>

	* src/calculation/fin.c: Some cleanup and renaming of function
	names to be longer and more descriptive.

	* src/gnome/dialog-transfer.c: Add Num field to the transfer
	dialog. Add APIs to change the amount, the description, and the
	accounts. Fix a bug in the default sense of the show/hide buttons.

2000-07-20  Dave Peticolas  <dave@krondo.com>

	* src/gnome/top-level.c (gnc_ui_destroy_all_subwindows): destroy
	open transfer windows.

	* src/Destroy.c: remove notes window functions.

	* src/AccWindow.h: remove notes window functions.

	* src/gnome/dialog-transfer.c: Make transfer dialog modeless.

2000-07-19  Dave Peticolas  <dave@krondo.com>

	* src/gnome/account-tree.c: Use income_expense instead of
	category for names.

2000-07-12  Dave Peticolas  <dave@krondo.com>

	* src/SplitLedger.c (LedgerAutoCompletion): simplify, and fix a
	bug with split auto-completion.

	* src/scm/bootstrap.scm.in: add HOME/.gnucash to scm search path.

2000-07-04  Dave Peticolas  <dave@krondo.com>

	* src/scm/bootstrap.scm.in: bump up the stack limit

	* src/engine/date.c (xaccValidateDate): move this function from
	src/register/datecell.c to here, so it can be used elsewhere.

	* src/gnome/gnc-dateedit.c: make the widget respond to the same
	accelerators as the register date cell.

2000-07-03  Robert Graham Merkel  <rgmerk@mira.net>

	* src/scm/c-interface.scm: Added scheme definition for
	pointer-token-null? if not already defined by g-wrap. Fixes bug
	when compiling with g-wrap >= 0.9.4.

2000-06-28  Dave Peticolas  <dave@krondo.com>

	* src/gnome/dialog-budget.c (entry_down_button_clicked): bug fix.

	* src/gnome/dialog-options.c: implement font options.

	* src/scm/prefs.scm: add options for the register fonts.

	* src/gnome/top-level.c: configure the register fonts from
	callbacks.

	* src/register/gnome/gnucash-style.c: make the register font and
	hint fonts configurable outside the register.

2000-06-28  Robert Graham Merkel  <rgmerk@mira.net>

	* src/gnome/dialog-totd.c: If somebody tries to open a second
	tip of the day window, just raise the original.  Fixes a crash
	when somebody tried to do this before.

2000-06-27  Robert Graham Merkel  <rgmerk@mira.net>

	* src/gnome/dialog-totd.c: Added code to make "Tip of the day"
	dialog modeless

2000-06-27  Dave Peticolas  <dave@krondo.com>

	* src/gnome/top-level.c (gnucash_ui_init): set the reconciled cell
	string getter to the dialog-utils function for i18ning the reconcile
	flag value.

	* src/engine/Transaction.c (xaccSplitSetReconcile): make sure the
	reconciled flag given is good.

	* src/register/splitreg.c: modify for the changes in the reconcile
	cell.

	* src/SplitLedger.c: modify for the changes in the reconcile cell.

	* src/register/recncell.c: make the reconcile cell a real object,
	not just a BasicCell with some extra functions. Add functionality
	for distinguishing between the flag value and the displayed value.

2000-06-26  Dave Peticolas  <dave@krondo.com>

	* src/gnome/dialog-utils.c (gnc_get_reconcile_str): new function.
	Return i18n'd string for reconciled flag.

	* src/gnome/reconcile-list.c: use i18n'd reconciled flag string.

	* src/scm/tip-of-the-day.scm: put the check for whether tips
	should be shown or not inside the hook. We can't do the check
	here because the options haven't been loaded yet.

	* src/scm/options.scm: fix bug in writing options. Use 'write'
	to output section and option names for proper escaping.

2000-06-27  Robert Graham Merkel  <rgmerk@mira.net>

	* src/scm/date-utilities.scm: Added date-granularity timepair
	comparison functions. Removed direct access functions to the time
	structures in various functions (Dave also worked on this).

	* src/scm/report/transaction-report.scm: Changed to use date
	comparison functions in date-utilities.scm.

2000-06-26  Robert Graham Merkel  <rgmerk@mira.net>

	* src/guile/global-options.[ch] (gnc_option_refresh_ui_by_name):
	New function to make refreshing the GUI options possible from C as
	well as scheme.
	(gnc_set_boolean_option): C function to set boolean options from
	outside the options dialog.

	* src/gnome/dialog-totd.[ch]: New files containing the GUI
	functions for doing tips of the day.

	* src/guile/tip-of-the-day.[ch]: New files with a C interface for
	the scheme tip of the day engine.

	* src/guile/option-util.[ch] (gnc_option_db_set_boolean_option):
	New function to set a boolean option.
	
	* src/scm/tip-of-the-day.scm: New file: an interface for reading
	in and passing tips to the gui in text form.

	* src/scm/tip-list.scm: A list of tips as a Scheme list.  File
	should probably be shifted somewhere else.

	* src/scm/startup.scm: Loads tip-of-the-day.scm

	* src/scm/prefs.scm: Add an option for displaying tips of the day
	at startup.  Also added gnc:support line.

	* src/gnome/window-main.c (gnc_ui_totd_cb): Added menu entries and
	callbacks to add "tips of the day" to help menu.

2000-06-23  Dave Peticolas  <dave@krondo.com>

	* src/gnome/dialog-utils.c (gnc_window_adjust_for_screen): new
	function. if the window size is bigger than the screen, adjust
	it down. Use this for the account add and edit, reconcile, and
	register windows.

	* doc/html/C/projects.html: update last version info

	* doc/html/C/xacc-about.html: update last version info

	* src/guile/gnucash.c.in: update last version info

2000-06-21  Dave Peticolas  <dave@krondo.com>

	* src/register/splitreg.h: break out the register type and the
	register style into two separate struct members, instead of using
	bitmasks. This is much, much simpler.

	* src/optional/swig/Makefile.am (gnucash-engine-perl5_wrap.c):
	remove the -stat argument, it's no longer support in later swig
	versions.

	* src/register/Makefile.am: don't compile table-html.c, it is
	not needed for linking.

	* src/gnome/window-register.c: remove include of table-html.c

	* src/engine/gnc-common.h: use 'gboolean' to typedef gncBoolean.
	We should probably just phase out the use of gncBoolean.

2000-06-20  Dave Peticolas  <dave@krondo.com>

	* src/engine/util.c (xaccParseAmount): accept 8 decimal places
	instead of 6, and trucate if more than 8.

	* src/gnome/dialog-add.c: make this window modeless.
	(gnc_ui_accWindow_ok_cb): don't let the user add an account with
	the same fully-qualified name as another account.

	* src/gnome/top-level.c (gnc_ui_destroy_all_subwindows): destroy
	all the account add windows, too.

	* src/gnome/window-main.c (gnc_refresh_main_window_title): new
	function to put the current filename in the main window title.
	(gnc_refresh_main_window): use the above when refreshing.

	* src/FileDialog.c (gncFileSaveAs): refresh the main window after
	'saving as' to update the filename in the main window.

2000-06-19  Dave Peticolas  <dave@krondo.com>

	* src/guile/gnc.gwp: take out GUIDs for Groups.

	* src/engine/Group.c: take out GUIDs for Groups. Groups are really
	just lists with no additional structure, and giving them GUIDs
	complicates matters without adding any utility. You can always use
	the parent account GUID instead.

	* src/gnome/top-level.c: configure list auto-popping from here.

	* src/register/gnome/combocell-gnome.c: determine whether or not
	to auto-pop lists based on a class variable, and not by looking
	up the guile function. This removes a src/guile dependency from
	src/register/gnome.

2000-06-14  Dave Peticolas  <dave@krondo.com>

	* src/register/gnome/gnucash-item-edit.c (item_edit_show_list):
	make sure the current selected item is visible and, before doing
	so, process all pending events to make sure the list is shown and
	sized first.

2000-06-13  Dave Peticolas  <dave@krondo.com>

	* src/SplitLedger.c: refresh the main window before refreshing the
	register. This makes sure balances are recomputed first.

	* src/engine/Transaction.c (xaccSplitSetBaseValue): mark the split
	as having changed.

	* src/gnome/gnc-currency-edit.c: loosen the restrictions on what
	can be typed in. The 'currency' could potentially be a stock
	symbol.

2000-06-12  Dave Peticolas  <dave@krondo.com>

	* src/gnome/dialog-transfer.c: don't use 'Categories', it's a
	confusing term.

	* src/SplitLedger.c (LedgerAutoCompletion): open transaction
	without deferring rebalancing.

2000-06-09  Robert Graham Merkel  <rgmerk@mira.net>

	* src/scm/report/transaction-report.scm (): commented out
	"merged" style because of conflict with double-column amounts.

2000-06-08  Robert Graham Merkel  <rgmerk@mira.net>

	* src/scm/report/average-balance.scm (average-balance-renderer): 
	added a condition to catch incorrectly entered dates without crashing.

2000-06-07  Dave Peticolas  <dave@krondo.com>

	* src/engine/Query.c: fixed a "dave is an idiot" bug in cropping
	the split list.

	* src/gnome/window-register.c (gnc_register_create_menu_bar): don't
	use stock close menu -- it's for closing files not closing windows.

	* src/gnome/dialog-add.c (gnc_ui_accWindow_create_account): don't
	make an opening balance transaction.

	* src/SplitLedger.c: use value, not share amount, for debit/credit
	cells in equity registers.

	* src/gnome/dialog-utils.c (gnc_ui_install_field_strings): set the
	code even if it's blank. Auto-coding doesn't work right now.

2000-06-06  Dave Peticolas  <dave@krondo.com>

	* src/SplitLedger.c (LedgerTraverse): use correct argument for
	exact_cell to gnc_table_find_valid_cell_horiz.
	(LedgerMoveCursor): ditto.

	* src/register/splitreg.c (xaccInitSplitRegister): Don't blank
	zeros in the price cell.

	* src/guile/gfec.c: fix bugs in usage of internal guile functions.
	more cleanup.

2000-06-05  Dave Peticolas  <dave@krondo.com>

	* src/register/splitreg.c (xaccInitSplitRegister): use higher
	precision for stock prices.

	* src/<lots>: moved gui-dependent definitions from
	src/engine/gnc-common.h to src/engine/gnc-ui-common.h.
	Use guint32 instead of home-grown typedef. This touched
	many files.

	* src/guile/guile-util.c (gnc_get_debit_string): make sure to
	return a malloc'd string.

	* src/register/splitreg.c (configLabels): check for NULL strings
	from the label getters.

	* src/gnome/window-register.c (gnc_register_date_window): if 'show
	all transactions' is not set in the preferences, limit it to
	30. Temporary fix for 1.4, this should be configurable.

	* configure.in: changed '! test' to 'test !'.

	* src/engine: removed *Consolidate* functions. These were cruft
	used by the old QIFIO routines.

2000-06-04  Dave Peticolas  <dave@krondo.com>

	* src/engine/util.c: add log level modification functions.

	* src/scm/command-line.scm: add a --loglevel argument to set the
	logging level.

2000-06-04  Rob Browning  <rlb@cs.utexas.edu>

	* */Makefile.am and others: fix up make dist to build a full-blown
	tarfile.

2000-06-04  Dave Peticolas  <dave@krondo.com>

	* src/engine/Session.c (xaccSessionSave): record file writing errors
	in the session error code.

	* src/FileDialog.c (gncFileSave): print an error message in a dialog
	on file-writing errors.

	* src/register/quickfillcell.c (quick_modify): before updating the
	original copy, make sure it's still the same as the old value,
	modulo case.

2000-06-03  Dave Peticolas  <dave@krondo.com>

	* src/engine/FileIO.c: John Goerzen's patch for 64-bit
	architectures.

2000-06-02  Dave Peticolas  <dave@krondo.com>

	* src/register/splitreg.c: added functions for getting cell types
	and getting the locations for cell types.

	* src/SplitLedger.c: add functionality for auto-completion

2000-06-02  Rob Browning  <rlb@cs.utexas.edu>

	* quite a few bugfixes to the automake stuff.

	* guid-md5.* -> md5.* - Dave liked this better, and I did too.

	* src/register/gnome/* - restored ... for now.

2000-06-01  Rob Browning  <rlb@cs.utexas.edu>

	* README: many mods to accomodate new changes, but still unfinished.

	* configure.in: --with-opt-style-install changed to
	--enable-opt-style-install

2000-05-31  Rob Browning  <rlb@cs.utexas.edu>

	* Giant automake switchover.
	doc/html/*/pix/ -> doc/html/*/image/
	intl/* - new directory/contents (filled via gettextize).
	src/doc - new directory to collect src docs.
	src/experimental - new directory.
	src/gg -> src/experimental/gg
	src/cbb -> src/experimental/cbb
	src/optional - new directory for configure --with and --enable bits.
	src/swig -> src/optional/swig - preparation for new quoting system.
	src/swig/perl5 deleted - swig is now just in a single directory.
	src/reports/File.c -> src/guile/File.c
	src/register/gnome/* -> src/register/* - automake wants flat lib dirs. 
	src/qt deleted - docs indicate how to get it if you want it.
	src/motif deleted - docs indicate how to get it if you want it.
	src/g-wrap merged into src/guile.
	src/engine/guid/* -> src/engine - automake wants flat lib dirs.
	man/* -> doc/
	lib/* deleted - nothing needed right now; see lib/README.
	gnucash.gdb-cmds -> doc/
	gnucash.desktop -> src/gnome/
	gnucash deleted - see doc/README.build-system
	etc/config -> src/guile/config
	doc/html/logos/ -> doc/html/C/logos - this should handle intl better.
	doc/build-system -> doc/README.build-system
	doc/aix.txt -> doc/build-aix.txt
	doc/SuSE-6.3.txt -> doc/build-suse.txt
	doc/solaris.txt -> doc/build-solaris.txt
	doc/README -> README - as per GNU coding/automake standards.
	doc/INSTALL -> INSTALL - as per GNU coding/automake standards.
	Makefile.init.in deleted - not needed with automake.
	Makefile.common deleted - not needed with automake.
	Configure-uw7 -> doc/Configure-uw7
	Configure-osr5 doc/Configure-osr5
	ABOUT-NLS - new file.
	AUTHORS - as per GNU coding/automake standards.
	*/Makefile.am - new automake files.
	acconfig.h - aclocal.m4 is now autogenerated, so use this instead.
	Various libtool files automagically added by libtool.
	src/examples/xacc-shell.c -> old/xacc-shell.c

	* src/scm/startup.scm: load depend.scm here.

	* src/scm/report/average-balance.scm: handle new possible #f
	return from gnc:group-get-account-list.

	* src/scm/engine-utilities.scm (gnc:group-get-account-list):
	moved here and reworked to build result in order, no reverse.
	Change to return #f on error so it can be distinguished from an
	empty list.

	* src/scm/engine-utilities.scm: new file.

2000-05-31  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/register/splitreg.c (configLabels): label the straight xfer
	and xfer to cells as 'Account', label the mirrored xfer as just
	'Transfer'.

	* src/register/gnome/gnucash-header.c
	(gnucash_header_reconfigure): also redraw if the style changes.

2000-05-30  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/register/quickfillcell.c: if a quickfill attempt fails,
	replace the string with the original case string.

2000-05-29  Robert Graham Merkel  <rgmerk@mira.net>

	* src/scm/report/transaction-report-2.scm (make-account-subheading): 
	added the ability to display balances at start-of-report date
	when sorting by accounts.  Also replaced gnc:split-get-amount
	(which doesn't exist) with gnc:split-get-value for amount sorting.

	* doc/guile-hackers.txt: Added pointers to g-wrap now that it's
	not part of the main gnucash distribution.

2000-05-24  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/SplitLedger.c: some simplification, some additional
	complexity :) Fixed a crash-bug with traversing out of the
	pending transaction and rolling it back. Fixed traversal out
	of the blank line of a multi-split transaction that has been
	edited.

2000-05-23  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/engine: removed QIF routines from the engine.

	* src/scm/options.scm: add a currency option type.

	* src/gnome/dialog-options.c: add support for currency options.

	* src/gnome/dialog-utils.c (gnc_ui_account_field_box_create): used
	the new currency editor widget.

	* src/gnome/gnc-currency-edit.c: new widget for picking currencies.

2000-05-22  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/guile/guile-util.c (gnc_depend): new function to access the
	gnc:depend guile function.

2000-05-21  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/window-reconcile.c: use share balances when
	reconciling stock, mutual fund, and currency accounts.

2000-05-20  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/engine/Account.c (xaccAccountRecomputeBalance): added share,
	cleared share, and reconciled share balance tracking, along with
	api calls for getting them.

	* src/engine/Transaction.c: add calls to get share cleared and
	reconciled balance.

	* src/engine/Query.c: use g_list_prepend and then reverse when
	gathering splits. When pruning the list, prune from the beginning,
	not the end, per the original semantics. Handle the case when
	q->max_splits is 0.

	* src/gnome/dialog-add.c (accWindow): if the window is closed as a
	result of a gnome_dialog_close, don't save the size or destroy the
	window, it's already gone.

	* configure.in: remove check for readline. guile-config should
	return the right values. Also, change LOCALE_DIR definition to
	$datadir/locale. This seems to be more correct.

	* src/swig/perl5/Makefile.in: use -fPIC because it's needed on
	sparcs and doesn't seem to hurt for others.

	* src/gnome/window-register.c (gnc_register_sort): just sort by the
	given key and then by the standard order.

	* src/gnome/window-reconcile.c: add menus to change the sort order
	of the debits and credits list.

	* src/engine/Query.c: allow the sort order to be set as increasing
	or decreasing.

2000-05-19  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/register/gnome/gnucash-style.c (gnucash_style_init): use
	default style's font. Unfortunately, there doesn't seem to be a
	way to get a default italic font, so use the regular one for now.

	* src/gnome/reconcile-list.c: use Queries to get the splits so
	we can do sorting. Add an api call to change the sort order.

	* src/engine/Query.c (xaccAmountMatchPredicate): debits are
	positive, credits are negative.

	* Makefile.in: install files and directories one at a time. If the
	user does not have an install script, the one supplied in the
	gnucash distribution can only handle one file at a time.

	* src/engine/util.c (xaccParseAmount): allow negative sign to be
	at the front or back of the amount.

2000-05-18  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/window-reconcile.c: make the finish button sensitivity
	depend on whether the reconciliation is balanced.

	* src/register/gnome/gnucash-sheet.c
	(gnucash_sheet_activate_cursor_cell): if the callback changes the
	value, redraw.

2000-05-17  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/engine/Query.c: allow sorting by reconciled date and
	reconcile status.

	* src/gnome/window-reconcile.c: add a 'statement date' to the
	reconciliation date. This date is used to set all the reconcile
	dates of the splits that get reconciled.

	* src/engine/Transaction.c (xaccSplitSetReconcile): don't change
	the reconcile date when the reconcile status is changed.

2000-05-18  Robert Graham Merkel  <rgmerk@mira.net>

	* src/scm/report/transaction-report-2.scm: Fixed *some* of the
	bugs with two-column balance displays.

2000-05-17  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/window-reconcile.c (gnc_recn_create_tool_bar): add a
	'Finish' reconcile button to the toolbar.

	* src/register/splitreg.c (configLabels): use callbacks to get
	debit/credit headings.

	* src/guile/guile-util.c: new functions to access guile
	debit/credit synonyms by account type.

	* src/scm/prefs.scm: added debit/credit synonym configuration.

2000-05-16  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/engine/guid/guid.h: change the GUID struct to a union with
	an integer to force 32-bit alignment on systems that need it.

	* src/register/splitreg.c (xaccInitSplitRegister): in a currency
	register, set the is_currency flag on the price cell.

	* src/register/pricecell.c (xaccSetPriceCellIsCurrency): function
	to set printing of currency prices in price cells.

	* src/engine/util.c (xaccSPrintAmount): added a PRTCUR flag for
	printing currency prices. Changed flags type from short to unsigned
	int with a typedef of GNCPrintAmountFlags. Changed other files to
	reflect this.

	* src/scm/report/balance-and-pnl.scm: fix html error (fix from
	Martin Schwenke).

	* src/guile/guile-util.c: many bug fixes.

	* src/scm/engine-interface.scm: fix list-ref arg order bug.

	* src/SplitLedger.c (xaccSRCountRows): fix a bug when a two or
	more splits from the same transaction are in the same account. Fix
	other bugs including not accessing deleted splits/transactions.
	Improve the refresh strategy. Could this code get any more
	complicated? Yes...

2000-05-15  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/register/splitreg.c (xaccSplitRegisterGetCursorTypeRowCol):
	new function, get cursor type by virt row/col.

	* src/scm/report/transaction-report.scm: debits on left, credits
	on right.

	* src/engine/guid/md5.c (md5_process_bytes): fix 32-bit alignment
	bug.

2000-05-14  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/guile/guile-util.c: added several interface functions to
	src/scm/engine-interface.scm.

	* src/Refresh.c (gnc_account_glist_ui_refresh): added a refresh
	function that takes glib lists. Much more convenient.

	* src/SplitLedger.c: add functionality for transaction
	cut/copy/paste.

	* src/MultiLedger.c (ledgerIsMember): always return true
	for SEARCH_LEDGERS. Simple, but safe.

2000-05-12  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* Makefile.in: add -follow arguments to find commands

	* Makefile.common (CFLAGS): removed hard-coded profiling option

	* configure.in: add a profiling argument.

	* src/guile/gnucash.c: use putenv, not setenv. putenv is POSIX,
	seems to be more common.

2000-05-10  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* many: removed use of SCM registry in favor of scm_protect_object
	and scm_unprotect_object.

	* src/engine/GNCId.c (xaccRemoveEntity): don't allow the NULL id
	to be removed.

	* src/scm: remove some old, unused files.

	* src/register/splitreg.c (configLayout): swap mirrored xfer from
	and xfer to field in the transaction line of the ledgers.

2000-05-09  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/dialog-add.c (gnc_ui_accWindow_create_account): insert
	the account *after* setting the account values so the sort order
	is correct.

	* src/engine/Account.c (xaccAccountInsertSplit): check the currency
	before inserting.

2000-05-08  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/engine/GNCId.c (xaccGUIDNew): new function to generate
	IDs for gnucash. Use this, not guid_new. Also modified other
	engine files to use this function.

	* src/register/pricecell.c (COLORIZE): check for being close to
	zero before colorizing red.

	* src/scm/main.scm (gnc:main): if no filename was specified, open
	the most recent file in the history.

	* src/gnome/file-history.c (gnc_history_get_last): new function to
	return the last filename the user opened.

2000-05-08  Rob Browning  <rlb@cs.utexas.edu>

	* make-gnucash-patch.in: change gnucash.h to gnucash.c in ignores.
	Delete src/messages_i18n.h from ignores.
	Remove g-wrap files from ignores.

	* src/guile/gnucash.c.in: new file (now auto-generated)
	This and the following change fix a mutual dependency problem.

	* src/guile/gnucash.h: new file (no longer auto-generated).

	* src/Makefile.in (CLEAN_SUBDIRS): add quotes.
	(all targets): build g-wrap before guile. 

	* Makefile.init.in (VERSION): Added to fix problems with rpm spec,
	etc.

2000-05-08  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/register/pricecell.c: allow the cell to be blanked directly.

	* src/SplitLedger.c (xaccSRLoadRegEntry): explicitly blank the
	balance cell for the blank split.

	* src/register/splitreg.c (xaccInitSplitRegister): don't blank zeros
	on the balance cell by default.

	* src/gnome/window-main.c (gnc_main_create_menus): rename the
	'Help' menu item to 'Manual'.

2000-05-07  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/guile/i18n.h.in: always include locale.h

	* src/messages_i18n.h: no longer needs to be configured.

	* configure.in: don't bother checking for locale.h, we have
	to have it anyway.

	* aclocal.m4: always include locale.h

	* src/gnome/window-register.c (deleteCB): use g_strdup_printf
	instead of asprintf.

2000-05-06  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/engine/Query.c: g_list_sort *returns* the new first node.

	* src/engine/Group.c
	(xaccAccountsBeginStagedTransactionTraversals): bug fix -- used wrong
	pointer type.
	(xaccSplitsBeginStagedTransactionTraversals): bug fix -- used wrong
	pointer type.

	* src/gnome/reconcile-list.c (gnc_reconcile_list_fill): print the
	amount using the account's currency.

	* src/gnome/dialog-transfer.c (gnc_xfer_dialog_create): remove the
	currency symobl from the dialog and use the account currency, if
	available, in printing amounts.

	* src/gnome/window-adjust.c: remove the currency symbol from the
	dialog and use the account currency in printing amounts.

2000-05-05  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/SplitLedger.c (xaccSRSaveRegEntry): set the date entered
	time of the blank split transaction.

	* src/gnome/window-reconcile.c: print different currencies
	correctly. Print reconciled balance so far.

2000-05-04  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/window-main.c (gnc_main_create_toolbar): removed the
	'open file' item from the toolbar, to lessen conflict with the
	'open account' item.

2000-05-03  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/window-register.c: add a gui option for sorting by
	date entered.

	* src/engine/Query.c: add a BY_DATE_ENTERED sorting option.

	* src/scm/prefs.scm: convert the gui options to internal options.

	* src/scm/options.scm: add an interal option type with no frills.

	* src/engine/util.c (xaccSPrintAmount): add a space after the
	currency code to make the currency symbol.
	(gnc_lconv_set_char): check for the lconv default value using
	CHAR_MAX, not 127.

2000-05-02  Rob Browning  <rlb@cs.utexas.edu>

	* Makefile.in: switch to sed to handle non-makefile generation.

	* Makefile.init.in: kill PATH mangling.
	Add DIFF GUILE and g-wrap command handling.
	
	* configure.in: Many changes related to the great g-wrap exodus
        and the change to handle non-makefile with sed.
	Kill recursive var expansion.
	Kill prefix pre-expansion.
        Remove fancy guile handling - presume newer guile (which is required).
        Remove non-makefiles from AC_OUTPUT (except the locale stuff for now).

	* doc/build-system: Document configure handling of non-makefiles.

	* lib/Makefile.in: expunge g-wrap.

	* make-gnucash-patch.in: use sed @--@ handling for expansions.
	Be strict.
	Add ignore for src/messages_i18n.h

	* po/Makefile.in.in: handle extract-macros.perl.in vars with sed.

	* po/extract-macros.perl.in: handle vars with sed.

	* rpm/Makefile.in: new file.  Handle gnucash.spec.in with sed.

	* rpm/gnucash.spec.in: use @--@ vars.

	* src/Makefile.in: handle src/quotes in the build process.
	Re-order src/guile to build before src/g-wrap.
	
	* src/g-wrap/Makefile.in: handle new version of g-wrap.

	* src/gnome/Makefile.in: fix compile var handling for g-wrap, etc.

	* src/guile/Makefile.in: fix compile var handling for g-wrap, etc.
	Add sed handling for gnucash.h.in.

	* src/guile/gnucash.h.in: handle g-wrap changes.
	Handle removal of EXPANDED vars.
	Switch to sed @--@ vars.

	* src/qt/Makefile.in: fix compile var handling for g-wrap, etc.

	* src/quotes/Makefile.in: new file.
	Handle gnc-prices.in with sed.

	* src/quotes/gnc-prices.in: Switch to sed @--@ vars.

	* src/scm/Makefile.in: Handle bootstrap.scm.in with sed.

	* src/scm/bootstrap.scm.in: Switch to sed @--@ vars.

2000-05-02  Robert Graham Merkel  <rgmerk@mira.net>

	* man/gnc-prices.1: fixed typo.

	* src/scm/report/transaction-report-2.scm: fixed typo for debit string
	and reversed displayed sign in debit column.

2000-05-01  Robert Graham Merkel  <rgmerk@mira.net>

	* src/scm/report/transaction-report-2.scm : Added i18n and
	optional two-columns printout to the new transaction report.

2000-04-30  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/engine/Queue.c (xaccQueueGetShares): computation should start
	at the tail split, not at split 0.
	(xaccQueueGetValue): ditto.

	* src/scm/report/average-balance.scm: track stock account balances,
	i.e. value, not cost.

2000-04-29  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/register/splitreg.c: add a flag determining whether to use
	regular labels or only debit/credit.

	* src/gnome/top-level.c: implement the debit/credit label option

	* src/scm/prefs.scm: added option to only use debit/credit labels
	in the register.

	* src/MultiLedger.h: remove the MAX_SPLITS constants

	* src/gnome/window-main.c (gnc_ui_refresh_statusbar): no need to
	reverse quantities.

	* src/gnome/top-level.c (gnc_configure_reverse_balance): take out
	debit sign-reversal type.

	* src/scm/prefs.scm: take out debit sign-reversal type

	* src/SplitLedger.c: debit/credit reversal.

	* src/register/pricecell.c: debit/credit reversal.

	* src/register/splitreg.c: switch the column labels for the
	debit/credit reversal.

	* src/gnome/window-reconcile.c: fix up the dialog for the
	debit/credit reversal. Also, fix the calculations so the user
	can change sign-reversal modes while the dialog is open.

	* src/gnome/window-main.c (gnc_ui_delete_account): refresh the
	main window fully.

	* src/gnome/reconcile-list.c (gnc_reconcile_list_fill): debits are
	positive, credits are negative.

2000-04-28  Robert Graham Merkel  <rgmerk@mira.net>

 	* src/scm/html-generator.scm (html-table-do-entry): Bryan Larsen's
	fix for null (#f) generators.

2000-04-28  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/option-util.c: redid the option database storage as
	a hash table, so databases have the same handle throughout their
	lifetime.

	* src/engine/Transaction.c (xaccTransOrder): only compare nums if
	they are non-blank.

2000-04-27  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/window-main.c (gnc_ui_refresh_statusbar): use ASSET
	type to determine sign reversal for assets quantity.

2000-04-25  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/engine/guid/guid.c (guid_init): add hostname and domainname
 	to the mix.

	* src/engine/AccInfo.c (xaccAccountTypesCompatible): relax the
 	restrictions on account types. Go to three groups: asset &
 	liability, income & expense, equity.

	* src/engine/FileIO.c: no need to free NULL pointers.

2000-04-24  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/scm/report/average-balance.scm: the min and max columns
	were swapped. Also, the last average balance entry wasn't being
	calculated correctly.

	* src/gnome/dialog-options.c: modified to use gnc-dateedit.

	* src/gnome/window-adjust.c: modified to use gnc-dateedit.

	* src/gnome/window-register.c: modified to use gnc-dateedit.

	* src/gnome/dialog-transfer.c: modified to use gnc-dateedit.

	* src/gnome/gnc-dateedit.c: new file. gnome date editor modified
 	to use gnucash date printing and parsing routines. I plan on
 	extending this with additional features, too.

	* src/engine/Group.c (xaccMallocAccountGroup): loop until we
	get a unique id. This is just paranoia code. Ditto for Account.c
	and Transaction.c.

	* src/engine/Account.c: add some 'const' keywords to string
	arguments. This affected many other files.

	* src/engine/Scrub.c: i18n strings used to make new accounts.

2000-04-22  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/dialog-options.c: use the default section, if present,
	when building the dialog.

	* src/scm/options.scm: option databases can have default sections.

	* src/scm/report/transaction-report-2.scm: make the default option
	section "Report Options". Change "x Display" section to "Display".
	Add title of report to string database.

2000-04-21  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/scm/report/average-balance.scm: comment out query function.
	This needs to be fixed when the new query api gets g-wrapped.

	* src/engine/Query.c: (xaccFreeQuery): free the split list
	(xaccQueryGetSplits) handle a null account group

	* src/gnome/dialog-edit.c: figure out all the accounts affected
	by a currency/security/type change and ask the user whether the
	needed changes should be made.

	* src/gnome/dialog-utils.c (gnc_fill_menu_with_data): also recurse
	for GNOME_APP_UI_SUBTREE_STOCK.

	* src/gnome/top-level.c (gnc_configure_reverse_balance): change
	asset-expense to all debit accounts.

	* src/register/numcell.c: include <limits.h> per Eric Hanchrow's
	fix.

2000-04-16  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/g-wrap/gnc.gwp: wrap functions for getting account guids and
	looking up accounts by guids.

	* src/g-wrap/gnc-helpers.c: add helper functions for using guids.

	* src/scm/prefs.scm: add an assets-expense choice to which kinds of
	accounts are sign-reversed.

	* src/gnome/top-level.c (gnc_configure_reverse_balance): handle the
	asset-expense choice.

2000-04-15  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/register/gnome/gnucash-style.c (gnucash_style_layout_init):
 	added a missing 'break' statement.

2000-04-14  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/engine/AccInfo.c: allow the price source to be set to NULL.

	* lots of build system files: changes for the global id stuff.

	* src/engine/GNCId.c: engine globally unique id api implementation.

	* src/engine/guid/md5.c: taken from GNU textutils.

	* src/engine/guid/guid.c: new file with routines for generating
	globally unique ids.

2000-04-10  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* doc/README: only the environment variable LANG needs to
	be set to change the locale.

2000-04-09  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/scm/srfi/srfi-1.r5rs.scm: renamed 'list-index' to
 	'list-index-pred'. guile-1.3.4 defines a list-index with
	different api and semantics.

	* configure.in: make gnucash.spec configured

	* rpm/gnucash.spec.in: new file, same as old gnucash.spec, but
	with @VERSION@ instead of a hard-coded version number. Removed
	gnucash.spec.

	* src/scm/prefs.scm: make the default field types be description
 	and total

	* src/gnome/window-main.c (gnc_configure_account_tree): set the
	state of the total field

	* src/gnome/account-tree.c: add in the new total field

	* src/gnome/dialog-utils.c: add the new account field key
 	ACCOUNT_TOTAL. This key refers to the account's balance plus the
 	balances of all children. The ACCOUNT_BALANCE key now refers to
 	the balance of the account itself, without children.

2000-04-08  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/scm/report/balance-and-pnl.scm: remove the report description.
	It just looked weird!

	* src/scm/command-line.scm (gnc:prefs-show-version): use the
	configured version instead of hard-coding it.

	* src/scm/bootstrap.scm.in (gnc:version): configure this guile
	variable with the gnucash version info.

	* src/SplitLedger.c (xaccLoadXferCell): == not = Doh!!!

2000-04-07  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/engine/Query.c (PROLOG): move declaration of da and db
	locals into the macros that actually use them. This gets rid
	of some annoying warnings.

	* src/register/numcell.c: added method to set the last number
 	entered.  The next number entered is now the last number + 1.

	* Makefile.in: changed [ -e filename ] to [ -f filename ]

	* src/scm/report.scm: Changed the report format to be a record.

2000-04-05  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* configure.in: removed check for eperl

	* src/reports: removed pathconfig.h.in and Sheet.? (eperl stuff)

	* src/gnome/window-help.c: took out gncReport call (eperl)

	* lib/Makefile.in: took out make dist hack

	* src/register/table-allgui.c: more error checking

	* src/SplitLedger.c: more cleanup. Fix a bug in refreshing a register
	in auto-mode where the current transaction has been deleted.

	* src/scm/report/balance-and-pnl.scm: put sub-accouts below their
	parent accounts and indent their names. Align the columns better.
	Print fully-qualified names.

2000-04-04  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/register/gnome/gnucash-style.c: update the styles
 	appropriately for the changes below.

	* src/register/splitreg.c: configure the ledger style register
	with a xfer to field in all modes.

	* src/SplitLedger.c (xaccSRLoadRegister): remove stock price hack.
	many code cleanups throughout file.

2000-04-03  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/window-register.c: changed menu definitions to be
	statically allocated.
	* src/gnome/window-main.c: ditto

	* src/SplitLedger.c: added extra checks for boundary conditions.
	When refreshing, try to go to the same cell offset as before.

2000-04-01  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/SplitLedger.c: more generalizations needed for general
 	ledger operation.

	* src/register/splitreg.c (configLayout): add the xto cell into
	the transaction cursor.

2000-03-31  Rob Browning  <rlb@cs.utexas.edu>

 	* src/scm/Makefile.in: set top_srcdir and include Makefile.init

 	* src/reports/pathconfig.h.in: use new GNC_EXPANDED_ vars.

 	* src/quotes/gnc-prices.in: new file.

 	* src/quotes/gnc-prices: deleted.

 	* src/guile/gnucash.h.in: use new GNC_EXPANDED_ vars.

 	* src/guile/i18n.h.in: use new GNC_EXPANDED_ vars.

 	* src/guile/Makefile.in (top_srcdir): set.

 	* src/Makefile.in: minor cleanups and safety code.

 	* make-gnucash-patch.in: new file.

 	* make-gnucash-patch: deleted.

 	* lib/Makefile.in: re-configure g-wrap after every distclean and
 	rebuild/install it on every build.

 	* gnucash: fix the doc-path to match the new structure.  This
 	fixes things back the way they were, but now we need to add
 	runtime locale detection.

 	* doc/build-system: new file - should eventually cover
 	build-system info and justifications.

 	* configure.in: changes to accomodate the new GNC_EXPANDED_*
 	vars.  See doc/build-system for a summary.

 	* Makefile.init.in (ABSOLUTE_TOP_SRCDIR): set
 	(top_srcdir): don't set (it has to be set in each separate Makefile.in)

 	* Makefile.config.finish: deleted.

 	* Makefile.in: minor cleanup -- some safety checks.

 	* Makefile.common: Clear all the .SUFFIXES rules.  They were
 	causing weird behaviors when I was trying to create some new
 	implicit rules.

 	* src/scm/printing/number-to-words.scm: scope gnc:depend and
 	gnc:support calls. 

 	* src/scm/printing/print-check.scm: scope gnc:depend and
 	gnc:support calls. 

 	* src/scm/qif-import/qif-dialog-utils.scm: scope gnc:depend and
 	gnc:support calls. 

 	* src/scm/qif-import/qif-file.scm: scope gnc:depend and
 	gnc:support calls. 

 	* src/scm/qif-import/qif-guess-map.scm: scope gnc:depend and
 	gnc:support calls. 

 	* src/scm/qif-import/qif-import.scm: scope gnc:depend and
 	gnc:support calls. 

 	* src/scm/qif-import/qif-objects.scm: scope gnc:depend and
 	gnc:support calls. 

 	* src/scm/qif-import/qif-parse.scm: scope gnc:depend and
 	gnc:support calls. 

 	* src/scm/qif-import/qif-to-gnc.scm: scope gnc:depend and
 	gnc:support calls. 

 	* src/scm/qif-import/qif-utils.scm: scope gnc:depend and
 	gnc:support calls. 

 	* src/scm/qif-import/simple-obj.scm: scope gnc:depend and
 	gnc:support calls. 

 	* src/scm/main.scm: fix load-path problems.

2000-03-31  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/window-register.c (gnc_transaction_delete_query): ok, we
	can't destroy the dialog on close, because we need the widgets to be
	there afterwards. gtk_widget_destroy() the dialog instead.

	* src/register/splitreg.c: add a SEARCH_LEDGER register type. Don't
	include the balance field in 'ledger' style registers.

	* src/register/gnome/gnucash-style.c (gnucash_style_layout_init):
 	new layouts for ledgers -- they don't have a balance field. We'll
 	probably need to redo them if we add a xto field. Broke out the
	actual layout construction into separate functions.

2000-03-30  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/SplitLedger.c (xaccSRSaveRegEntry): remove the 'special
 	case' for setting the price. It is no longer needed.

	* src/gnome/window-register.c (gnc_reg_set_window_name): set the
 	name regardless of whether there is a leader.

	* src/SplitLedger.c (xaccSRLoadRegister): fixed a possible memory
 	leak in destroying the buffer

2000-03-29  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/scm/report/transaction-report.scm: bug fixes and speed
 	improvements

	* src/engine/Group.c: added some new transaction traversal code

	* src/scm/report/folio.scm: implement the old eperl report

2000-03-28  Robert Graham Merkel  <rgmerk@mira.net>

 	* man/gnc-prices.1: new file.  Man page for gnc-prices. Somebody
 	please add installation from makefile!

2000-03-27  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/scm/report/budget-report.scm: removed use of transaction
 	report function. This was generating a value that was not
 	subsequently used.

2000-03-26  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/scm/report/transaction-report.scm: i18n the report

	* src/gnome/window-register.c (gnc_transaction_delete_query):
 	destroy on close, don't hide.

	* src/register/splitreg.c: several new functions for saving and
	restore the contents of the cursor.

	* src/SplitLedger.c (xaccSRRedrawRegEntry): always redraw, caller
 	knows best!
	(LedgerMoveCursor): if we are leaving the pending transaction,
 	commit it.
	(xaccSRLoadRegister): save and restore changed cursor values.
	(xaccSRSaveRegEntry): clear the register change flags.

2000-03-24  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/register/gnome/quickfillcell-gnome.c (QuickFillDirect): if
 	the cursor is in the selection, move it to the start of the
 	selection.

	* Makefile.common: add the value of DEFS to the compile flags

	* Makefile.init.in: get the value for DEFS.

	* src/register/numcell.c: new cell for entering numbers. Handles
	accelerators for increasing/decreasing the number and remembers
	the largest number for auto-filling.

2000-03-23  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/scm/report/average-balance.scm: fixed many things and i18n'd
	the report.

	* src/engine/util.c (PrintAmt): always use '.' as the decimal point
	coming from sprintf.

2000-03-22  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/scm/prefs.scm: set the default currency code using the
	wrapped C function in util.c below.

	* src/engine/util.c (xaccSPrintAmount): add a PRTNMN flag for
 	printing non-monetary values.
	(gnc_locale_default_currency): return the currency code for the
 	current locale.

	* src/register/splitreg.c (xaccInitSplitRegister): update for
 	changes to the price cell api.

	* src/engine/util.c (xaccSPrintAmount): set the precision based on
 	the locale.

	* src/register/pricecell.c: remove some unneeded api calls and
	add one for specifying that the cell contains a share quantity.

2000-03-19  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/dialog-options.c (gnc_option_set_ui_widget): request
	a reasonable size for the number-range widget.

	* src/FileDialog.c (gncFileQuerySave): return a boolean value
 	indicating whether the user wants to proceed or cancel. The uses
 	of this function have been updated to respond appropriately.

2000-03-18  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/engine/Query.c (xaccInitQuery): make the standard engine
 	order the default sort order.

	* src/gnome/window-adjust.c (adjBRefresh): update the title

	* src/Refresh.c (gnc_account_ui_refresh): refresh the edit account
	and adjust balance windows too.

	* src/gnome/dialog-edit.c: add gui for changed the account type.

	* src/engine/Account.c (xaccAccountSetType): allow account types
 	to be changed.

2000-03-15  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/scm/extensions.scm (gnc:new-menu-namer): register and
 	translate the names correctly.

	* src/scm/report.scm (gnc:report-menu-setup win): make sure the
 	report title gets registered and translated.

	* src/scm/report/hello-world.scm: i18n'd this report.

2000-03-14  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/register/gnome/gnucash-sheet.c
 	(gnucash_register_key_press_cb): generate activate event on a
 	keypad enter as well as the return key.

	* Docs/C/xacc-ticker.html: updated for Yahoo Europe information.

2000-03-13  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/dialog-utils.c: added Yahoo Europe to the quote source
 	menu.

	* src/quotes/Quote.pm: added method for getting Yahoo European
 	quotes. Also, fixed the parsing of csv data.

	* src/quotes/gnc-prices: cleanup the code, less wordy output.

	* src/quotes/Quote.pm (yahoo): updates from latest YahooQuote.pm

2000-03-12  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/scm/c-interface.scm (gnc:error->string tag args): print a
 	stack backtrace.

	* src/gnome/cursors.c: when given a NULL argument, the set and
	unset busy cursor function change all top-level window cursors.
	This breaks the motif side though, in that the cursor will no
	longer get set there. Oh well.

	* src/gnome/window-register.c (duplicateCB): new callback for
 	duplicating the current transaction/split.

	* src/SplitLedger.c (xaccSRDuplicateCurrent): new function to
 	duplicate the current split or transaction.

	* src/gnome/window-report.c (gnc_run_report): set the busy cursor
	while running the report generator.

2000-03-10  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/window-main.c (gnc_ui_refresh_statusbar): revise the
 	profit and asset calculation.

	* src/MultiLedger.c (xaccLedgerDisplayRefresh): don't reverse the
 	balances ever -- let the GUI do it.

	* src/motif/RegWindow.c (regRefresh): reverse the balances
	for INCOME and expense.

2000-03-09  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/window-register.c (regRefresh): print
 	reversed-balanced account balances appropriately.

2000-03-07  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/scm/report/transaction-report.scm: a few bug fixes.

	* src/gnome/window-main.c (gnc_ui_delete_account): destroy the
 	windows *then* remove the account from the tree. Sometimes,
 	destroying the window can result in a refresh, which will do
 	strange things if we have already removed the account from the
 	tree.

2000-03-06  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/window-reconcile.c (recnRefresh): resize the window

	* src/FileDialog.c (gncPostFileOpen): set the busy cursor while
 	reading the file.
	(gncFileSave): ditto.

	* src/register/gnome/gnucash-sheet.c
 	(gnucash_sheet_update_adjustments): set the step increment.

2000-03-06  Heath Martin  <martinh@pegasus.cc.ucf.edu>

	* src/register/gnome/gnucash-style.c
 	(gnucash_sheet_style_set_col_width): Adjust the overall style
 	width, too.

	* src/register/gnome/gnucash-header.c
 	(gnucash_header_auto_resize_column): Resize the window to fit the
 	register.
	(gnucash_header_event): ditto on a column resize.

2000-03-05  Rob Browning  <rlb@cs.utexas.edu>

	* src/scm/report/transaction-report.scm: add support for depend
	mechanism.

	* src/scm/report/hello-world.scm: add support for depend
	mechanism.

	* src/scm/report/folio.scm: add support for depend mechanism.

	* src/scm/report/balance-and-pnl.scm: add support for depend
	mechanism.

	* src/scm/report/average-balance.scm: add support for depend
	mechanism.

	* src/scm/report.scm (gnc:report-menu-setup): fixed minor
	non-r5rsism (defines must be at the beginning of a <body>).

	* src/scm/report/report-list.scm: new file.  This is where all of
	the reports that should be loaded at startup should be listed.

	* src/scm/main.scm (gnc:startup): don't autoscan/load from the
	report dir anymore.  Use the depend mechanism instead.  This isn't
	as convenient, but it's safer.

	* src/scm/hooks.scm (gnc:hook-run-danglers): added a little
	debugging code.

	* src/scm/extensions.scm (gnc:extensions-menu-setup): fixed minor
	non-r5rsism (nested defines must be at the beginning of a <body>).

	* make-gnucash-patch: allow the user to override the default
	locations with environment variables.

2000-03-04  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/guile/gnucash.c (main): load the locale from the environment
 	with setlocale. This is needed so that guile can find the locale.

	* Docs/: reorganized the Docs directory. Then english language
 	stuff moved to the "C" directory. The french stuff goes under
 	"fr". The "En" and "Fr" directories are gone. The standard for
 	country codes uses lower-cases letters, so we should stick to
 	that. The graphics files go under "pix" directories under their
 	respective language directories.

	* src/scm/path.scm: create documentation search paths based on the
 	current locale. The default "C" locale is always searched last.

	* src/reports/File.c (gncFindFile): take out dead code.

2000-03-04  Heath Martin  <martinh@pegasus.cc.ucf.edu>

	* src/register/gnome/gnucash-style.c (set_dimensions_pass_one):
 	Only set the dimensions based on percentages if the dimensions
 	have not been set before.  This gets rid of some strange behavior
 	where styles change width by a few pixels when window size was
 	changed.
	(gnucash_sheet_style_set_dimensions): Add a width argument; now we
 	compute dimensions to fit "width" as best as possible.  Most of
 	the time width should be the allocation width of the sheet, except
 	that when the style is first compiled, the allocation width may be
 	unavailable.
	(style_recompute_layout_dimensions): Set dimensions->width
 	properly.
	(gnucash_style_default_width): Nuke this function, since we can
 	now use dimensions->width.
	(gnucash_sheet_style_compile): Use a default width to set
 	dimensions.

	* src/register/gnome/gnucash-sheet.c (gnucash_sheet_set_top_row):
 	Update the canvas before the scroll.  This helps eliminate some of
 	the flashing when the register scrolls.  Still not perfect,
 	though.

2000-03-03  Heath Martin  <martinh@pegasus.cc.ucf.edu>

	* src/register/gnome/gnucash-sheet.c
 	(gnucash_sheet_size_allocate): Keep track of the allocation and
 	update everything only if the allocation changes.  This is needed
 	because gnome canvas widget items always do a gtk_widget_set_usize
 	(), which in turn forces a reconfigure of the parent widgets.  So
 	we were getting size_allocate events even when the size of the
 	window was not changing.
	(gnucash_sheet_set_top_row): Scroll the sheet by setting the
 	adjustment values rather than calling gnome_canvas_scroll_to ().

	* src/register/gnome/gnucash-header.c
 	(gnucash_header_reconfigure): Set the sheet width from the header.

	* src/register/gnome/gnucash-sheet.c
 	(gnucash_sheet_block_set_from_table): Check to see if the style
 	has changed before we reallocate all the entries and colors.
	(gnucash_sheet_block_set_entries): Don't strdup the entries from
 	the table.
	(gnucash_sheet_block_clear_entries): Don't free the text in the
 	entries, since now the table owns this.
	(gnucash_sheet_set_scroll_region): New function; sets the scroll
 	region on the register canvas.
	(gnucash_sheet_update_adjustments): This was being done
 	incorrectly.  The layout widget on which the gnome canvas is based
 	takes care of the adjustments, and we've just connected to these
 	adjustments in the smooth-scroll case.  Now that the scroll region
 	is set correctly, just let the layout manage the adjustments.
	

2000-03-03  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/register/pricecell.c (PriceMV): accept thousands separators.

	* src/scm/c-interface.scm: new functionality for registering
 	translatable strings and saving them to a file in a suitable
 	format for po creation. This touched a bunch of other .scm
	files as well.

2000-03-02  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/dialog-options.c: use gettext to translate the strings
	used to make the gui components.

	* src/gnome/window-reconcile.c
 	(gnc_reconcile_window_create_list_frame): always show vertical
 	scrollbars, the columns widths work out better that way.

	* src/gnome/reconcile-list.c
 	(gnc_reconcile_list_get_needed_height): better estimate of needed
 	height than just multiplying row height times rows.

	* src/register/gnome/gnucash-item-list.c (gnc_item_list_autosize):
 	new function to autosize the list. For some reason, have the list
 	autosize for each new insertion wasn't working for very large
 	registers.

	* src/register/gnome/gnucash-sheet.c (gnucash_sheet_new): bump up
 	the scroll region for very large registers.

	* src/gnome/window-main.c (gnc_main_create_toolbar): removed the
 	C-a and C-d shortcuts for adding and deleting accounts.

	* src/gnome/reconcile-list.c (gnc_reconcile_list_init): print
 	selected 'y' reconcile flags in yellow for better contrast.
	(gnc_reconcile_list_unselect_row): don't unselect the row if we
 	are toggling the current row.

	* src/gnome/window-reconcile.c (recnRecalculateBalance): reverse the
	balance if appropriate.

2000-03-01  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/window-adjust.c (gnc_ui_AdjBWindow_ok_cb): reverse the
 	balance if appropriate.

	* src/scm/extensions.scm: add the extensions menu if  debugging.

	* src/scm/bootstrap.scm: new function to check debugging status.

	* src/FileDialog.c (gncFileQIFImport): set the busy cursor when
	reading and processing the qif.

	* src/SplitLedger.c: added a sign-reversal callback.

	* src/gnome/dialog-utils.c (gnc_ui_get_account_full_balance): used
 	the sign-reversal option in computation.

	* src/gnome/top-level.c: implement the sign-reversal configuration
	and callbacks.

	* src/gnome/window-main.c (gnc_ui_refresh_statusbar): used
 	sign-reversal option in computation.

	* src/scm/prefs.scm: add an option to choose how accounts
	are sign-reversed.

2000-02-29  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/cursors.c (gnc_ui_set_cursor): let the gtk main loop
 	catch up before we exit. This makes sure the cursor gets changed
	before we return.

	* src/gnome/dialog-filebox.c: hide the window before exiting
	the gtk main loop.

	* src/scm/prefs.scm: added a new option for expanding parent
	accounts with double-clicks instead of opening them.

	* src/gnome/window-main.c (gnc_account_tree_activate_cb): use
 	expansion option to decide whether to open or expand.

	* src/SplitLedger.c: check for common currency when saving a
 	register entry. If there is none, don't perform the split
 	insertion; instead show a warning dialog.

	* src/scm/prefs.scm: converted account type and account field
 	options to list options.

	* src/register/gnome/combocell-gnome.c (leaveCombo): if a new
 	value is returned, also set the same value as the cell value.

	* Makefile.in: added 'unfinished' to qt compile target info.

2000-02-28  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/scm/options.scm: added a list option

	* src/scm/report/hello-world.scm: added a demo list option

	* src/gnome/dialog-options.c: added implementation of list options.

	* src/engine/QIFIO.c (xaccParseQIFDate): fix for 4-digit dates.
	(xaccParseQIFDate): fix for x/x' 00 dates, which are an old
	format for 2000 dates.

	* src/scm/report/average-balance.scm: fix report to work when
 	there are no accounts.

	* src/scm/report/transaction-report.scm: initialize the inflow and
 	outflow variables to zero each time the report is run.

2000-02-27  Heath Martin  <martinh@pegasus.cc.ucf.edu>

	* src/gnome/top-level.c (gnc_configure_register_borders): Add
 	options for setting cell borders.

	* src/scm/prefs.scm: ditto

	* src/register/gnome/gnucash-style.c
 	(gnucash_style_set_cell_borders):
	(gnucash_style_set_register_borders):
	(gnucash_style_set_borders):
	(gnucash_sheet_set_borders): Functions to interactively set cell
 	borders.

2000-02-26  Heath Martin  <martinh@pegasus.cc.ucf.edu>

	* src/register/gnome/gnucash-style.c
 	(gnucash_sheet_style_compile): Support for turning horizontal and
 	vertical borders on and off.
	(gnucash_sheet_style_recompile): Ditto

	* src/register/gnome/gnucash-grid.c (draw_cell): ditto

	* src/register/gnome/gnucash-header.c
 	(gnucash_header_reconfigure): Fix a bug in how the scroll region
 	was set.  Remove some outdated code.

2000-02-27  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/dialog-transfer.c (gnc_xfer_dialog_create): use
 	gnc_localconv to get the currency symbol.

	* src/gnome/window-adjust.c (adjBWindow): put colons after label.
  	Use gnc_localeconv to get the currency symbol.

2000-02-26  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/window-adjust.c (gnc_adjust_update_cb): only update if
 	the new string is different from the old. ditto for the reconcile
	and transfer windows.

2000-02-25  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/register/pricecell.c (PriceHelp): print out full number for
 	help value.

	* src/register/table-allgui.c (makePassive): implement alternative
 	passive colors.

	* src/register/splitreg.h (struct _SplitRegisterColors): add color
 	for odd rows in single mode, and boolean argument determining
 	whether to alterative virtual or physical rows in double mode.

2000-02-25  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/register/gnome/gnucash-sheet.c (gnucash_sheet_check_grab):
 	see if we need to release the grab.

	* src/register/splitreg.c (xaccInitSplitRegister): configure the
	mxfer cell with an ignore string (SPLIT_STR) and a help string
	explaining multi-line transactions.

	* src/register/gnome/combocell-gnome.c: added help handler and
 	ignore string functions.

	* src/register/table-allgui.c (gnc_table_enter_update): don't set
 	changed flag if new string is identical.

2000-02-24  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/register/table-gnome.c (xaccRefreshTableGUI): redo the style
 	information so that new colors (and other info) get refreshed.

	* src/register/gnome/gnucash-header.c (gnucash_header_draw): use
 	header style color to draw header background.

	* src/gnome/option-util.c: new functions to support color options.

	* src/gnome/dialog-options.c: gui implementation of color options.

	* src/scm/report/hello-world.scm: used the new color option.

	* src/scm/options.scm: added a new color option.

2000-02-23  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/scm/extensions.scm (gnc:new-menu-namer): new object that
 	automatically picks accelerator keys for a group of menu items.

2000-02-22  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/register/gnome/gnucash-sheet.c (gnucash_sheet_delete_cb):
 	don't bother with the callback if the ending position of the
 	deleted section is <= to the starting position. This can happen.

	* include/messages_i18n.h.in: added menu item strings with
	underscore accelerators. Changed several gnome files to use
	these strings.

2000-02-21  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/register/gnome/gnucash-header.c
 	(gnucash_header_reconfigure): scroll region width should be the
 	style width, not the allocation width.

2000-02-20  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/guile/gfec.c (gfec_catcher): use a guile function for
 	printing the error instead of the C interfaces. This removes
	a dependency on guile 1.3.4.

	* src/scm/c-interface.scm: add function for return an error string.
	Used by the C-side error catcher in gfec.c.

2000-02-19  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/scm/report/hello-world.scm: added a 'crash the report'
 	option for testing the reports code.

	* src/register/gnome/gnucash-header.c (gnucash_header_event):
 	modify per changes to pointer_on_resize_line. Allow the user to
 	resize by double-clicking anywhere in a column heading.
	(pointer_on_resize_line): set the column with a pointer argument.
  	return true if on a resize line, false otherwise.
	(gnucash_header_init): initialize normal_cursor to NULL, which
	selects the default gdk cursor.

2000-02-18  Heath Martin  <martinh@pegasus.cc.ucf.edu>

	* src/register/gnome/gnucash-style.c (gnucash_style_layout_init):
 	Make only the description cell a FILL cell.

2000-02-18  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/engine/util.c (gnc_localeconv): Diane Trout's patch to set
	the default values with a function.

	* src/register/datecell.c (DateMV): validate change values longer
 	than a single character. Also, update the date value after a
 	non-accelerator change.

	* src/register/pricecell.c (PriceMV): validate change values
 	longer than a single character.

	* src/engine/util.c (gnc_localeconv): add in default values for
	the sign and currency positions if their values are out of range.

	* src/gnome/window-reconcile.c (recnRecalculateBalance): colorize
	the negative values in the summary frame.

2000-02-17  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/window-register.c (gnc_register_create_menu_bar):
 	added an edit menu with cut/copy/paste.
	(gnc_register_create_menu_bar): use 'blank' instead of 'new' to
 	describe the command to jump to the blank split. Use a new tooltip
 	too. Ditto for the popup menu and the toolbar.

	* Makefile.in: reversed order of gnucash linking so gnucash.gnome
	gets linked last, so it overides the motif version. Also, install
	the gnucash.desktop entry so gnucash appears in the gnome panel.

	* src/register/splitreg.c: right-align the xfer cells

	* src/register/gnome/gnucash-item-edit.c: handle selections the
 	gtk way with the gtk_selection_ routines. Grabbed this stuff from
 	gtkeditable and gtkentry.

	* src/register/gnome/gnucash-sheet.c: use the new selection handling
	code in the item editor to do cutting and pasting.

2000-02-16  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/register/gnome/gnucash-item-edit.c: added code to support
	real gtk selection handling. Adapted this from the gtk editable
	widget.

2000-02-15  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/dialog-transfer.c (gnc_xfer_dialog_create): allow the
 	user to resize the window

	* src/gnome/window-register.c: save and restore window size

	* src/gnome/window-main.c: save and restore window size

	* src/gnome/dialog-edit.c: save and restore window size

2000-02-14  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/dialog-add.c (accWindow): save and restore window size

	* many files: use the configured account separator

	* src/gnome/dialog-utils.c (gnc_get_account_separator): new function
	to get the account separator

	* src/scm/prefs.scm: new option for the account separator

2000-02-13  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/register/splitreg.c (configLayout): swap the xfer and desc
	cells. Add the debit and credit cells to the transaction cursor
	so we get totals.

	* src/register/quickfillcell.h: add a GUI-specific initializer.
	The motif version does nothing. The gnome version add a direct
	callback to handle auto-completion keystrokes.

	* src/register/table-allgui.c (gnc_table_direct_update): new
 	function for passing direct gui input to the table, and then the
 	cells.

	* src/register/basiccell.h: added a direct_update callback for
 	responding to raw gui input.

	* src/register/gnome/combocell-gnome.c (ComboDirect): add complete
 	to char and complete as far as possible functionality.

2000-02-12  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/window-register.c: add new account menu item

	* src/engine/Transaction.c (xaccTransCommitEdit): always check the
	split ordering on a commit. Only checking the transaction date won't
	work, because other fields in the transaction and the split affect
	the order.

	* src/engine/Account.c (xaccCheckDateOrder): use
 	xaccSplitDateOrder, the same routine as xaccAccountInsertSplit to
 	do the ordering.

	* src/register/table-allgui.c (gnc_table_modify_update): new
 	function, a direct gui callback.

2000-02-11  Robert Graham Merkel  <rgmerk@mira.net>

	* src/scm/report/transaction-report.scm
 	((gnc:tr-report-get-first-acc-name split-scm)): Fixed crash when
 	it's a lone split, and somebody's not using proper double-entry
 	accounting!

	* Doc: Extensive clean-up and documentation of new features,
 	including several new images.

2000-02-11  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/register/splitreg.c (xaccInitSplitRegister): change memo
 	cell to be a quickfill cell.

	* src/gnome/window-main.c (gnc_refresh_main_window): refresh all
	account trees.
	(gnc_ui_delete_account): remove account from all trees.

	* src/gnome/account-tree.c: added a global list of account trees.
  	added functions for refreshing all trees and deleting an account
 	from all trees.

	* src/register/basiccell.h: (and lots more files) added a cell
 	callback for getting the 'help' string of a cell. This uses a
	default which uses the value of the cell, if its not blank, and
	a "blank help" otherwise. The blank help string can be set on a
	per-cell basis.

	The date cell replaces the help callback with one that prints the
	date out in full, according to the current locale.

	The split register initialization sets a few of the cells with
	blank help values.

	Finally, the gnome register uses the help strings to set the
	status of the statusbar.

2000-02-10  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/engine/util.c (loglevel): print warnings and errors in
	all modules.

	* src/gnome/window-main.c: change the sensitivity of menu and
 	toolbar items that need a selected account.

	* src/gnome/dialog-edit.c (editAccWindow): allow dialog to be
 	resized

	* src/scm/extensions.scm: add code for a more flexible menu
 	definition process under guile. Comment out extensions menu
	stuff -- it's not complete.

	* src/register/gnome/gnucash-sheet.c (gnucash_button_press_event):
 	after moving, get the cursor position again before setting the
 	item editor cursor position because the cursor position may have
 	changed due to auto-mode rearrangement.

	* src/scm/prefs.scm:comment out locale-based date parsing

	* src/gnome/window-main.c (gnc_main_create_menus): modify the
 	names and order of the items per gnome standards.

	* src/scm/options.scm: Only save options that have been changed
	from their default values.

	* include/messages_i18n.h.in: removed periods from end of tooltips
	(gnome standard).

2000-02-09  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/window-reconcile.c (recnFinishCB): rewrote to be more
 	like the other top-level windows.

	* src/gnome/dialog-transfer.c (gnc_xfer_dialog): have the amount
 	entry grab focus.

2000-02-08  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/scm/options.scm: add a number-range option

	* src/scm/prefs.scm: add an option of number of register rows.

	* src/gnome/option-util.c: add utility functions for number
	range options.

	* src/gnome/dialog-options.c: implement number range options

	* src/scm/prefs.scm: added a register 'show all transactions'
 	option.

	* src/gnome/window-register.c (gnc_register_date_window): lookup
	guile 'show all' option to determine how to set the date range.

	* src/register/splitreg.c (xaccInitSplitRegister): Set the minimum
 	trailing zeros for share quantities to 0. All price cells are now
 	monetary values.

	* src/register/pricecell.c: modify to use integer arg for trailing
 	zeros. Add function for changing blank_zero option.

	* src/engine/util.c (PrintAmt): change the trailing zeros argument
	to an integer indicating the minimum number of trailing zeros to
	print.

	* src/register/gnome/gnucash-item-list.c: handle mouse wheel
 	scrolling from the clist.

2000-02-07  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/window-main.c (gnc_ui_refresh_statusbar): set the
 	color of deficit values to red in the main window status bar.

	* src/gnome/account-tree.c (gnc_account_tree_insert_row): only set
 	values as red if they are less than but not extremely close to
 	zero.

	* src/gnome/window-main.c (mainWindow): separate profit and asset
	labels in the status bar.

2000-02-07  Robert Graham Merkel  <rgmerk@mira.net>

	* src/gnome/global-options.c (gnc_options_dialog_help_cb): pops
	up a help window.

	* src/gnome/dialog-edit.c (gnc_ui_EditAccWindow_help_cb): callback
	now displays help page instead of placeholder dialog.

	* Docs/En/xacc-accountedit.html: New file explaining account edit
	dialog.

	* Docs/En/xacc-globalprefs.html: New file explaining preferences.

	* Docs/En/xacc-main.html: Added pointers to new help pages for
	account-edit and preferences dialog boxes.

	* src/top-level.h: Added new HH_* macros for new help pages for
	dialog boxes

2000-02-06  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/SplitLedger.c (xaccSRSaveRegEntry): don't refresh if the
	transfer account hasn't really changed.

	* src/gnome/window-adjust.c (gnc_ui_AdjBWindow_ok_cb): parse
 	amount with xaccParseAmount.  When the amount entry goes out of
 	focus, reformat the value with separators.

	* src/gnome/dialog-transfer.c: parse amount with xaccParseAmount.
	When the amount entry goes out of focus, reformat the value with
	separators.

	* src/gnome/reconcile-list.c (gnc_reconcile_list_fill): print the
 	amount with xaccPrintAmount, with separators.

	* src/gnome/window-reconcile.c (startRecnWindow): print the amount
 	with separators and parse it with xaccParseAmount. When the amount
 	entry goes out of focus, parse it and reformat it.

	* src/register/splitreg.c (xaccInitSplitRegister): set the stock
 	register cell options appropriately.

	* src/register/pricecell.c: add functions for setting the precision
	and trailing zeros option. removed the 'shares' option.

	* src/engine/util.c (xaccSPrintAmountGeneral): add a generalized
 	amount printing function.

	* src/gnome/window-register.c (gnc_register_date_window): add a
 	button to the date range window for setting the date range when
 	the user changes a date without 'enter' or 'double-click'.

	* src/engine/Account.c (xaccAccountGetFullName): moved this function
	from gnome to here to make it gui independent. Returns a malloc'd
	string with the fully-qualified name of the account using the given
	separator char.

2000-02-06  Heath Martin  <martinh@pegasus.cc.ucf.edu>

	* src/register/gnome/gnucash-header.c
 	(gnucash_header_auto_resize_column): Support for auto sizing.
	(gnucash_header_event): Double clicks on the resize lines will
 	auto resize the column to fit the text.

	* src/register/gnome/gnucash-sheet.c (compute_optimal_width): Use
 	the style layout to compute a good width for the sheet.

	* src/register/gnome/gnucash-header.c (gnucash_header_draw): Draw
 	the big rectangle correctly.
	(gnucash_header_reconfigure): Set the scroll region and header
 	width based on the size of the sheet, not the current style.

2000-02-05  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/register/splitreg.c (xaccInitSplitRegister): flag the share
 	quantities as such.
	(xaccInitSplitRegister): initialize the physical column to 0.

	* src/register/pricecell.c: get rid of the format string, add an
 	option for printing share quantities.

	* src/engine/Session.c (MakeHomeDir): just because ~/.gnucash
 	exists doens't mean ~/.gnucash/data exists.

	* src/scm/report/hello-world.scm: renamed from dummy.scm. Added
	documentation to the source code and additional help text in the
	report. This is intended to be an example for how to write reports.

	* src/gnome/window-report.c (reportAnchorCB): use gnome_url_show
	to display the anchors.

	* src/gnome/window-help.c (helpAnchorCB): use gnome_url_show to
	display the other anchor types.

	* src/gnome/dialog-utils.c: removed tooltip setting function. I was
	using tooltips the wrong way. Instead of having one tooltips object
	for each tip, you use one tooltips object for each logical group of
	tips, i.e., all the tips on a dialog. Also, changed the dialogs to
	use this method.

	* src/gnome/dialog-transfer.c: use labels with colons.

2000-02-04  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/scm/extensions.scm: removed cruft functions

	* src/register/gnome/gnucash-item-list.c (gnc_item_list_select):
 	set the focus row to the selected row.

	* src/register/gnome/combocell-gnome.c (ComboMV): auto-pop the
 	list on input, according to the option value below.

	* src/scm/prefs.scm: added option to auto-raise register list on
 	input.

2000-02-03  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/register/gnome/combocell-gnome.c (enterCombo): sort the list
 	before popping up.

	* src/engine/Query.c: do num sorting using numerical values where
 	possible.

	* src/register/gnome/gnucash-item-edit.c: added new functions for
	cutting, copying, and pasting the clipboard. We have to do this
	manually instead of relying in the gtk_entry, as it screws up the
	selection handling.

	* src/register/gnome/gnucash-sheet.c (gnucash_sheet_insert_cb):
 	fixed bug where new text was being copied incorrectly for
 	insertions longer than a character.

2000-02-02  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/register/gnome/gnucash-sheet.c (compute_optimal_width):
 	return optimal width if possible

	* src/register/gnome/gnucash-style.c
 	(gnucash_style_default_width): new function, compute optimal sheet
 	width

	* src/gnome/option-util.c: interfaced with the guile option callback
	mechanism.

	* Changed all existing callbacks to use guile callbacks. Touched
	many files.

	* src/scm/options.scm: added an option change callback mechanism.

2000-02-01  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/scm/options.scm: new file. Moved the general options code
	here. Modularized the options code.

2000-01-31  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/SplitLedger.c: use the last date entered in the blank split
	for the date of the new blank split.

	* src/scm/prefs.scm: use hash for storing options

2000-01-30  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/scm/bootstrap.scm.in: deleted hash-for-each. This is defined
	in slib2c6, which we are requiring anyway. Not the thunk for this
	should accept two args: the key and the value.

	* src/register/QuickFill.c: add sorting option to choose between
	LIFO and alphabetic orders.

2000-01-29  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/scm/bootstrap.scm.in: Used Matt Martin's guile error catching
	code to print errors from gnc:load.

2000-01-28  Heath Martin  <martinh@pegasus.cc.ucf.edu>

	* src/register/gnome/gnucash-header.c (pointer_on_resize_line): Fix a
	problem with the limits.  Now the last column is resizable.
	(gnucash_header_event): Check for which button is pressed/released.

2000-01-27  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/register/splitreg.c (xaccInitSplitRegister): set format of
 	price cell in stock registers to 4 decimal places.

	* src/register/gnome/gnucash-sheet.c (gnucash_sheet_scroll_event):
 	new function. Do mouse wheel scrolling in gnome register.

	* src/register/gnome/gnucash-style.c (gnucash_style_layout_init):
 	use printDate to find a date width using the current date style.
	(gnucash_style_layout_init): use i18n'd string to set transfer
	from field width.

	* Removed uses of nana and dependencies on nana.

	* src/scm/report/transaction-report.scm: change to handle new
 	reports.

	* src/scm/report/dummy.scm: change to handle new reports.

	* src/scm/report.scm: Change reports so that they have a function
 	which generates a new set of options. Change the report running
 	functions to accomodate this.

	* src/FileDialog.c: avoid showing multiple error dialogs.

	* src/guile/gfec.c (gfec_catcher): new file with functions for
 	running scheme code with error handlers. Grabbed this off the
 	guile faq and made a few mods.

	* src/gnome/window-report.c: modify to use the new gfec routines.

2000-01-27  Robert Graham Merkel  <rgmerk@mira.net>

	* src/scm/report/transaction-report.scm
	(tr-report-primary-key-op),(tr-report-primary-order-op)
	(tr-report-secondary-key-op),(tr-report-secondary-order-op):
	new options controlling sorting order for transaction report
	display.
	(gnc:tr-report-get-first-acc-name): get the name of the first
	"other" account" of a split's transaction
	(gnc:sort-predicate-component): return a predicate for comparing
	two split-scm's on a certain component
	(gnc:tr-report-make-sort-predicate): process sorting options,
	return a corresponding sorting predicate
	"Account Transactions" report: added sorting.

2000-01-25  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/window-register.c (regRefresh): refresh the window name

	* src/gnome/dialog-edit.c: Rob Merkel's patch to reparent accounts.

	* src/engine/Account.c (xaccAccountHasAncestor): new function to
	determine whether an account has another as an ancestor.

	* src/gnome/account-tree.c (gnc_account_tree_set_filter): add a
 	filter function to an account tree to select a subset of accounts.

	* src/engine/Query.c: some new functions for setting the date
 	ranges.

	* src/gnome/window-register.c: add 'show earliest' and 'show
 	latest' options to the date range window.

2000-01-25  Heath Martin  <martinh@pegasus.cc.ucf.edu>

	* src/register/gnome/gnucash-grid.c (gnucash_grid_init):
 	Initialize the fonts here.

	* src/register/gnome/gnucash-style.c
 	(gnucash_sheet_style_compile): Use sheet->grid->normal_font for
 	all the computations.  style->fonts[][] is now only used for
 	drawing in gnucash-grid, etc. when it's non-NULL.

2000-01-24  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/register/splitreg.c (xaccInitSplitRegister): make the action
	cell accept strings not in the list.

	* src/register/gnome/combocell-gnome.c (xaccComboCellSetStrict):
	new function that determines whether the combo accepts strings
	not in the list. Defaults to 'does not accept'.


2000-01-23  Heath Martin  <martinh@pegasus.cc.ucf.edu>

	* src/register/gnome/gnucash-style.c: Many functions touched.
  	Fairly extensive changes to how the layouts and dimensions are
 	handled.  We now lump together cursors which should have same
 	dimensions (e.g. all the single line cursors have the same layout
 	and dimension data).

2000-01-21  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/register/gnome/gnucash-sheet.c
 	(gnucash_sheet_key_press_event): oh, what a hack! The extra stuff
 	is to make sure the selection is changed appropriately according
 	to the key that is pressed. Some of the logic is extracted from
 	gtkentry.c so the behavior is similar. We have to do this because
 	the entry widget is not realized and thus does not change its
 	selection as usual. However, we can't realize it, see the
 	explanation below.

	* src/register/gnome/combocell-gnome.c: added quickfilling

	* src/register/quickfillcell.c (quick_modify): new code for gnome,
	old code for motif. motif doesn't support the cursor position and
	selection args.

	* src/register/gnome/gnucash-sheet.c (gnucash_sheet_new): ok,
 	*don't* put the entry in a widget. We can't have it realized
 	because it screws up the selection changes during the insert/
 	delete callbacks. We're going to have to fake the other
 	functionality.

	* src/register/QuickFill.c: make quickfill work on non-alphabet
	characters.
	(xaccGetQuickFillStr): new function search for a prefix match on
	more than one character at a time.

	* src/register/gnome/gnucash-sheet.c
 	(gnucash_button_release_event): new function to track button
 	release for dragging purposes.
	(gnucash_motion_event): new function for tracking mouse movement
 	and updating the selection region.
	(gnucash_sheet_init): initialize top_block_offset
	(gnucash_sheet_set_top_row): adjust the new top row to show as many
	rows as possible.
	(gnucash_sheet_vadjustment_value_changed): compute visible range
	after adjusting top block in smooth scrolling.
	(gnucash_sheet_compute_visible_range): start at the top_block_offset
	(gnucash_sheet_update_adjustments): scroll faster

2000-01-20  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/register/gnome/gnucash-sheet.c (gnucash_button_press_event):
 	if we're mousing in the current cell, don't bother going through
 	modify_update and all that jazz, but only if we are currently
 	editing. This makes sure the reconcile cell still gets its enters.

	* src/register/gnome/gnucash-item-edit.c
 	(item_edit_set_cursor_pos): add option to extend selection.

2000-01-20  Robert Graham Merkel  <rgmerk@mira.net>

	* src/scm/report/transaction-report.scm: Fixed date bug, ensuring
	"to" date is treated as a <= rather than a <.

2000-01-20  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/register/gnome/gnucash-sheet.c (gnucash_sheet_new): put the
	editing entry into a canvas item so it will get realized. It needs
	to be realized for full functionality.
	(gnucash_sheet_modify_current_cell): add new args to modify update.
	(gnucash_sheet_insert_cb): new args for modify update
	(gnucash_sheet_delete_cb): new args for modify update

	* src/register/gnome/gnucash-item-edit.c (item_edit_destroy): only
 	disconnect if the editor hasn't been destroyed.

	* src/register/gnome/gnucash-sheet.c
 	(gnucash_sheet_activate_cursor_cell): added new args for enter
 	update. change entry widget appropriately.

	* src/register/table-allgui.c (gnc_table_enter_update): added args
 	to set cursor position and highlited selection.

	* src/scm/prefs.scm (gnc:save-options): truncate the options file
 	when opening.

	* src/register/gnome/gnucash-item-edit.c (item_edit_draw_info):
 	calc regions for the highlited portion of the text.
	(item_edit_draw): draw the hightlited portion of the text.

2000-01-19  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/guile/gnucash.c (gnucash_lowlev_app_init): use DEBUG and PERR
	instead of print(stderr, ...);

	* src/scm/prefs.scm: new technique for saving options. Easier
	to generalize to other option databases.

	* src/gnome/window-html.c (gnc_html_load): set button states at
	the beginning, in case report doesn't work.

	* src/scm/report.scm: catch exceptions in executing the report

	* src/gnome/window-report.c (reportJumpCB): report errors that occur
	in executing the report.

	* src/register/table-allgui.c (gnc_table_traverse_update): use the
	return value consistently to indicate no move.

	* src/scm/path.scm (gnc:make-home-dir): new function. creates gnc dir

	* src/scm/main.scm: don't abort if user config file fails

	* src/scm/prefs.scm: make options save to ~/.gnucash/config.auto

	* src/gnome/dialog-options.c (gnc_option_create_account_widget):
 	if not multiple selection, use browse mode so user has to select
 	an account.
	(gnc_option_set_ui_widget): when making account list widget, connect
	the signals after the value has been set so the dialog isn't already
	in a changed state.

2000-01-17  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/scm/bootstrap.scm.in: add a test for slib >= 2c6.

2000-01-16  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/dialog-add.c (gnc_ui_accWindow_list_box_create): Put
 	the account types in a scrolled window.
	(gnc_ui_accWindow_tree_select): scroll the list types when a new
 	type is selected.
	(accWindow): remember window size and recreate it.

	* src/engine/util.c (xaccParseQIFAmount): rename this from
	xaccParseUSAmount to explictly reflect its only usage. Modify
	the parsing to guess what symbol is used as a decimal point.

2000-01-15  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/window-report.c (gnc_report_export): add error checking
	and i18n messages.

	* src/gnome/window-html.c (gnc_html_load): set toolbar button
	states at end.

2000-01-15  Robert Graham Merkel  <rgmerk@mira.net>

	* src/gnome/window-report.c (gnc_report_export): new function to
 	allow generated HTML reports to be exported to a file.
	(reportWindow): added a button to the toolbar for exporting HTML

2000-01-15  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* Makefile.config.finish: Get rid of xemacs mode comments.

	* configure.in: Move the commands at the end of configure.in into
 	the EXTRA-CMDS section of AC_OUTPUT so that config.status will
 	redo them. Don't bother defining GNC_RUNTIME_* vars as they are
	not substituted using AC_OUTPUT.

2000-01-15  Heath Martin  <martinh@pegasus.cc.ucf.edu>

	* src/register/gnome/gnucash-style.c (struct   _CellLayoutInfo):
	Add new flags for attributes the user can change interactively.


	* src/register/gnome/gnucash-style.c (compute_cell_origins_[xy]):
	Precompute these since they stay fixed until dimensions change.

	* src/register/gnome/gnucash-header.c (gnucash_header_draw):
	Be sure rect.width is non-negative.  Also, we draw all the
	rows in the header now.
	(gnucash_header_set_arg): Remove the ARG_ROW argument.
	For ARG_CURSOR_TYPE, only reconfigure the header
	when the type changes.  This optimizes the drawing a bit.
	(gnucash_header_reconfigure): We're drawing all rows now, so
	use the proper height.  
	(gnucash_header_event): Implement resizing of columns.  This is
	a bit rough in places, because we have to take cell alignments
	into account.  Need to work more on the styles.
	(gnucash_header_draw): Support dynamic resizing in the header,
	to give the user feedback during the resize.

	* src/register/gnome/gnucash-grid.c (gnucash_grid_draw): Optimize
	so it draws only the needed cells, not the entire row.

	* src/register/gnome/gnucash-sheet.c (gnucash_sheet_init): Add a
 	compile time option for smooth vertical scrolling.  Later we can
 	add user selectable scrolling if we decide it's worth it.
	(gnucash_sheet_make_cell_visible): support smooth scrolling.
	(gnucash_sheet_update_adjustments): ditto
	(gnucash_sheet_vadjustment_value_changed): ditto
	(gnucash_sheet_create): ditto
	(gnucash_sheet_y_pixel_to_block): New function.  Convert a canvas
 	y-coordinate to a virtual row.

2000-01-14  Robert Graham Merkel  <rgmerk@mira.net>

	* src/scm/report/transaction-report.scm: Added initial balance
	and summary displays.

2000-01-12  Robert Graham Merkel  <rgmerk@mira.net>

	* src/scm/report/transaction-report.scm: Added balance field,
	running totals, patched for empty-second-split case, fixed
	other bugs, added documentation.

2000-01-10  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* Apply Jan Schrage's doc patch.

	* src/gnome/window-reconcile.c (recnWindow): tighter arrangement
	of the buttons.

	* src/g-wrap/gnc.gwp: removed wrap of private engine function.

	* src/engine/util.c (gnc_localeconv): new function to get a lconv
	structure for locale info.
	(PrintAmt): add argument which determines whether amounts are
	monetary or not. Use locale information to get separators.
	(xaccSPrintAmount): first cut at printing i18n'd amounts.
	(xaccParseAmount): new function for parsing i18n'd amounts,
	both monetary and non-monetary.

	* src/register/splitreg.c (xaccInitSplitRegister): let the price
 	cell format be the default monetary format. Set the shares cell
 	and, for stock registers, the credit and debit cells to
 	non-monetary cells.

	* src/register/pricecell.c (xaccSetPriceCellMonetary): new
 	function for setting 'monetary' member.

	* src/register/pricecell.h: add a 'monetary' boolean member
	of price cells which indicate whether the value should be
	parsed as money or not.

2000-01-09  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/register/splitreg.c: print price cells in a monetary format,
 	not 4 place decimal notation.

	* src/gnome/window-register.c (regRefresh): print separators in
 	the amounts at the bottom of the register window.

	* Applied Ken Yamaguchi's QIF import patch.

	* src/scm/prefs.scm: modified the account list option so
	that it returns the default-getter value until explicitly
	set.

2000-01-09  Robert Graham Merkel  <rgmerk@mira.net>

	* src/scm/report/transaction-report.scm: Added a pile of stuff,
	should now produce a HTML formatted report containing basic info.
	Unfortunately, crashes gtk-xmhtml at this stage.

2000-01-08  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/scm/bootstrap.scm.in: Added a check for slib.

2000-01-07  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* make-gnucash-patch: changed aclocal.m4 to lib/g-wrap/aclocal.m4
 	in the exclude list, so people can patch the main aclocal.m4 file.

2000-01-07  Jan Schrage <jan.schrage@urz.uni-heidelberg.de>

	* configure.in: for --opt-style-install add $prefix/include
	and $prefix/lib to $CPPFLAGS and $CFLAGS respectively to fix
	broken check for nana.

2000-01-06  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* various and sundry: apply Laurent P{'e}lecq's i18n with gettext
 	patch. Move raw strings from gnome code into message database.

	* src/gnome/window-report.c: modify for changes to window-html.
	Make sure properties dialog callback only changes the window if
	we are on that page.

	* src/gnome/window-help.c: modify for the changes to window-html

	* src/gnome/window-html.c: enhance window. Titles and buttons
	are now associated with each history item, not the whole window.

	* src/gnome/dialog-options.c: added support for account list
	guile options.

2000-01-05  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/option-util.c: new functions for sending and receiving
 	lists of accounts to guile.

	* src/gnome/account-tree.c: modified this widget so that
	it keeps track of a list of selected accounts. Normal mode
	is still single selection.

2000-01-04  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/dialog-add.c (gnc_ui_accWindow_list_select_cb):
 	prevent user from selecting illegal account types.

2000-01-02  Peter Pointner  <peter@wuzel.m.isar.de>

	* configure.in: disable qt build by default. --enable-qt enables it.

	* Makefile.in: new targets qt.static and qt.disable

	* make-gnucash-patch: exclude *.moc

	* src/g-wrap/gnc.gwp (current-gnc-compile-flavor): add flavor qt.static

	* src/qt/* and src/register/*-qt.*: assorted changes to make the
	  qt version compile. 

2000-01-02  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/window-register.c: redid this window. Put style, sort
 	order, and date range into menu bar. Put toolbar under menu.
	Added status bar at bottom.

	* src/register/table-allgui.c (xaccVerifyCursorPosition): return
 	boolean indicating whether cursor was repositioned.
	(wrapVerifyCursorPosition): use return value from above in
 	deciding whether to refresh UI.

	* src/SplitLedger.c (xaccSRCancelCursorSplitChanges): move off of
 	an EXACT_ONLY cell, if on one.

2000-01-01  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/register/splitreg.h: uses ints, not shorts for values.

	* src/SplitLedger.c (xaccSRLoadRegister): use the function below
 	to find the cell where to land on.
	(xaccSRLoadRegister): fix a bug with auto mode to single/double
 	mode transition.

	* src/register/table-allgui.c (gnc_table_find_valid_cell_horiz):
	new function. Find a valid cell in the row, starting at the
	given coordinates and fanning out.

	* src/register/basiccell.h: add a new kind of io_flag.
	XACC_CELL_ALLOW_EXACT_ONLY means a cell can only be entered
	when the user specifically indicates that cell. Right now,
	this means only a mouse pointer clicked on that cell. This
	is used to prevent the reconcile cell from acting strangely.

	* src/register/table-allgui.c (gnc_table_traverse_update): do left
 	traversals a little better.

	* src/gnome/window-html.c (htmlKeyCB): handle keyboard horizontal
 	scrolling.

1999-12-31  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* Code cleanup with -Wall. Deleted unused variables. Added missing
 	#include's and missing function declarations.

	* src/engine/QIFIO.c (FavorDateType): Christopher Browne's QIF
 	import patch.

	* configure.in: Albert Chin-A-Young's patch to configure.in for
 	perl config.

	* src/MultiLedger.c: nix xaccRegisterCountHack.
	It is no longer needed.

	* Docs/En/xacc-about.html: added contributors.

	* make-gnucash-patch: new script. Make a patch for submission.

	* README: added contributors. Added sections on gnucash
	development and submitting patches.

1999-12-30  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/SplitLedger.c (xaccSRGetCurrentTrans): Fix error messages.

1999-12-29  Peter Pointner  <peter@wuzel.m.isar.de>

	* src/motif/FileBox.c (closeBoxCB): reset fileName only if !done.
	  This fixes the FileBox problems with lesstiff 0.89.1, at least
	  for me.

	* configure.in: change CPPFLAGS used to search for gtk-xmhtml  

1999-12-26  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/window-report.c (reportWindow): Add a properties
 	button to the html window icon bar to allow the report parameters
 	dialog to be brought up.
	(reportWindow): Add a title to the properties dialog.

	* src/gnome/window-html.c (htmlWindow): Add arguments to allow the
 	caller to add its own icons to the window.

1999-12-25  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/global-options.c (gnc_show_options_dialog): Added
 	title.

	* src/gnome/window-main.c: removed eperl reports menu items

	* src/gnome/window-report.c: new file. Report-specific gnome
	gui code will reside here.

1999-12-24  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/window-html.c: take out help and report specific code.

	* src/gnome/dialog-options.c: removed global options code.
	These routines now with with arbitrary options databases.

	* src/gnome/global-options.c: new function. global options are
 	implemented here. This uses dialog-options and option-util
 	functions.

	* src/gnome/option-util.c: removed global options code.

	* src/gnome/window-register.c (gnc_build_ledger_style_menu): set
 	the style menu to the default on creation.

1999-12-23  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/account-tree.c (gnc_account_tree_refresh): thaw after
 	all changes.

1999-12-22  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/option-util.c: many new functions. Rewrote this to
	add the concept of option databases, a data structure which holds
	a collection of options and allows access to them. This will be
	used to hold, e.g., options for a report window. The old functions
	now just call the new ones with the 'global' configuation option
	database as the database argument.

	* src/gnome/dialog-report.c: Rename dialog-trans-report.? to
	dialog-report.?. This will construct a generic report dialog.

1999-12-21  Robert Graham Merkel  <rgmerk@mira.net>

	* src/gnome/dialog-trans-report.c: New file.  GNOME code for
 	creating a dialog box for information on the transaction report.
  	At the moment only contains a stub for the actual dialog box code.

	* src/gnome/dialog-trans-report.h: New file.  Headers for 
	 the dialog box stuff, obviously!

	* src/gnome/Makefile.in: modified to compile dialog-trans-report.c

1999-12-21  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/window-reconcile.c: enhance this window with
	new, edit, and delete transaction buttons.

1999-12-20  Heath Martin  <martinh@pegasus.cc.ucf.edu>

	* src/register/gnome/gnucash-sheet.c
 	(gnucash_sheet_size_allocate): Configure the item_editor on a
 	resize.

	* src/register/gnome/gnucash-cursor.c
 	(gnucash_cursor_get_pixel_coords): Don't use the horizontal scroll
 	offset.

	* src/register/gnome/gnucash-item-edit.c
 	(item_edit_get_pixel_coords): Ditto.

	* src/register/gnome/gnucash-item-list.c (gnc_item_list_new): Set
 	the "x" coordinate on creation.

1999-12-20  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/window-register.c (regWindowLedger): get the default
	register type guile option to set the register style.
	(regRefresh): set the toolbar button display based on the guile
	option value.

1999-12-19  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/MultiLedger.c (xaccRegisterRefreshAllGUI): new function.
	call gui refresh on all registers.

	* src/MultiLedger.h: remove unecessary externs.

1999-12-19  Heath Martin  <martinh@pegasus.cc.ucf.edu>

	* src/register/gnome/gnucash-sheet.c
 	(gnucash_sheet_update_adjustments): Update the horizontal
 	adjustments, too.
	(gnucash_register_new): Attach the horizontal scrollbar to the
 	horizontal adjustment.

	* src/register/gnome/gnucash-header.c (gnucash_header_set_arg):
 	Hook up the hadjustment from the sheet so that they scroll
 	horizontally together.

1999-12-19  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/engine/util.c: applied Grant Likely's patch to the number
	formatting routines.

	* src/register/splitreg.c: applied Grant Likely's patch to make
 	stock register have 4 decimal places of accuracy.

	* Applied Christopher Brown's html and QIFIO.c patch.

1999-12-19  Robert Graham Merkel  <rgmerk@mira.net>

	* src/src/report/transaction-report.scm: New file. Will contain
 	code for doing a transaction report on an account. At this stage
 	all it does is display unformatted raw scheme lists.
 	
	* README.guile-hackers: Added general information about Scheme and
 	a pointer to net resources about it. Also explained a little
 	about g-wrap and gave a pointer to the documentation for it.

1999-12-18  Heath Martin  <martinh@pegasus.cc.ucf.edu>

	* src/register/gnome/gnucash-header.c
 	(gnucash_header_reconfigure): Don't set the width of the widget,
 	let it find it's own width.

	* src/register/gnome/gnucash-style.c
 	(gnucash_sheet_style_set_dimensions): Reworked extensively.  It
 	now tries very hard to fit the cursors in the register window.
  	Supports a number of layout options for the cursors, as detailed
 	in the source.

1999-12-18  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/window-register.c (gnc_register_create_tool_bar):
 	Don't cause a legister refresh.

1999-12-17  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/dialog-edit.c (gnc_ui_EditAccWindow_ok_cb): refresh
 	all the registers.

	* src/gnome/dialog-add.c (gnc_ui_accWindow_create_account):
 	refresh all the registers.

	* src/gnome/window-register.c (regRefresh): reload the transfer
 	cells.

	* src/SplitLedger.c (xaccSRLoadXferCells): new function. Load the
	transfer cells in a split register.

	* src/register/gnome/combocell-gnome.c (xaccClearComboCellMenu):
 	new function. clear all items in the combocell menu.

1999-12-16  Heath Martin  <martinh@pegasus.cc.ucf.edu>

	* src/register/table-allgui.c (gnc_table_traverse_update): Use the
	exit flags from the cellblock to decide how to set
	exit_register, and don't change entries in the traverse arrays
	to positive.

	* src/register/splitreg.c (configTraverse): Mark all the exit rows
	and columns, too.

	* src/register/cellblock.h: Add variables to the CellBlock struct
	that flag the exit cells.  We can't use negative entries in the
	traverse arrays anymore, since left traverses sometimes need
	valid negative directions.

1999-12-16  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/register/pricecell.c (xaccPriceCellPrintValue): new
 	function.  return a pointer to a static string buffer with the
	cell amount printed.
	(xaccSetPriceCellValue): simplify with above function.
	(PriceLeave): new leave callback for price cells. Pretty-prints
	cell value using xaccPriceCellPrintValue.

	* src/register/gnome/gnucash-sheet.c (gnucash_sheet_cursor_move):
 	have this function take physical instead of virtual coordinates.
  	This function now 'does the move' using wrapVerifyCursorPosition.
	It has smarts that were in the three functions below.
	It returns TRUE if the current cell changed.
	(gnucash_button_press_event): simplify
	(gnucash_sheet_key_press_event): simplify
	(gnucash_sheet_goto_virt_row_col): simplify

1999-12-15  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/register/table-allgui.c (gnc_table_traverse_update): take
 	out the reverify fields. These are unnecessary for the auto modes
 	(at least for gnome) and complicate the leave semantics.

	* src/SplitLedger.c (xaccSRGetCurrentTrans): use the register
 	physical row and not the table. needed for auto mode movement.

	* src/register/table-allgui.c (gnc_table_leave_update): do the
 	wrapverify after we check for changes. I'm not sure if wrapverify
 	could change the outcome of this, but doing the check after the
 	wrap verify makes no sense since the row and col values aren't
 	meaningful anymore.

	* src/register/gnome/gnucash-sheet.c
 	(gnucash_sheet_deactivate_cursor_cell): always call the leave
 	update, even for "bad" locations. We need the wrap verify that
 	happens in the gnc_table_leave_update.

1999-12-15  Robert Graham Merkel  <rgmerk@mira.net>

	* src/gnome/dialog-add.c (xaccSetDefaultNewaccountCurrency): Added
 	an interface to set the default currency for new accounts.

	* src/scm/prefs.scm (gnc:make-string-option) added a new option
 	generator for strings, used this to add a "default new account
 	currency" option

	* src/gnome/top-level.c (gnc_configure_newacc_currency_cb)
 	callback to update the default currency when options are changed
	(default_configure_newacc_currency) does the work of updating
	(gnucash_ui_init) registered the new callback

1999-12-14  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/register/table-allgui.c (gnc_table_traverse_update): a fix
 	for the auto modes.

	* src/SplitLedger.c (xaccSRCountRows): Look for the cursor
 	position using the transaction, as well as the split. Useful when
 	changing modes when you are on a blank split in multi-line.
	(xaccSRGetCurrentTrans): new function. Gets current transaction.
  	Works when you are on blank splits as well.
	(LedgerTraverse): save the old register values and then restore
 	them.

1999-12-13  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/register/gnome/gnucash-header.c
 	(gnucash_header_reconfigure): check for a valid header row before
 	proceeding.

1999-12-13  Heath Martin  <martinh@pegasus.cc.ucf.edu>

	* src/register/gnome/gnucash-cursor.c (gnucash_cursor_set): Set
 	the type and row arguments in the header.

	* src/register/gnome/gnucash-header.c (gnucash_header_draw): Tweak
 	the coords on the separator line a bit.  Draw the header based on
 	header->type and header->row.
	(gnucash_header_set_arg): Add two new arguments to support setting
 	the type of the header from the current cursor and the row within
 	the cursor to draw.

	* src/register/gnome/gnucash-style.c
 	(gnucash_sheet_style_compile): Set the header font.

1999-12-13  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/option-util.c (gnc_lookup_multichoice_option): Rob
 	Merkel's patch.

	* src/engine/date.c (printDate): Rob Merkel's patch to i18n date
 	formats.

	* src/gnome/top-level.c (gnc_configure_date_format): Rob Merkel's
	patch to i18n date formats.

1999-12-12  Heath Martin  <martinh@pegasus.cc.ucf.edu>

	* src/register/table-allgui.c (gnc_table_traverse_update): Put an
 	assert(0) in the default case, since now we handle all possible
 	cases.

	* src/register/gnome/gnucash-sheet.c
 	(gnucash_sheet_key_press_event): Remove hack to wrap around when
 	moving the cursor.  splitreg.c takes care of this, after a
 	fashion.

1999-12-12  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/register/gnome/combocell-gnome.c (disconnect_list_signals):
 	if the list has been destroyed, don't bother.
	(connect_list_signals): ditto.

1999-12-10  Heath Martin  <martinh@pegasus.cc.ucf.edu>

	* src/register/splitreg.c (configTraverse): Configure left
 	traverses, too.

	* src/register/cellblock.[c,h] (xaccInitCellBlock): Allocate left
 	traverse matrices.
 	(FreeCellBlockMem): Free left traverse matrices.
 	(xaccNextLeft): New function.

	* src/register/table-allgui.c (gnc_table_traverse_update): Add
 	support for left traverses.

1999-12-10  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/window-register.c (jump_cb): new callback. Used to
 	jump to 'other' account.

	* src/gnome/option-util.c: modify multichoice
 	functions. multichoice options are now a list of vectors,
	where each vector contains the value, name, and description.

	* src/gnome/dialog-options.c (gnc_option_set_ui_widget): Rob
 	Merkel's patch to add the option name to a multichoice option.

1999-12-09  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/dialog-utils.c (gnc_build_option_menu): change this
 	function so that the callback includes the index of the selection
 	as well as the user_data.

	* src/gnome/option-util.c
 	(gnc_option_value_num_permissible_values): new function. return #
 	of permissible values.
	(gnc_option_value_permissible_value_index): new function. search
 	for SCM value in permissible value list.
	(gnc_option_value_permissible_value_name): new function. return
 	name of indexth permissible value.
	(gnc_option_value_permissible_value_help): new function. return
 	help of indexth permissible value.

	* src/gnome/dialog-options.c (gnc_option_set_ui_value): add
 	multichoice option.
	(gnc_option_get_ui_value): add multichoice option.
	(gnc_option_multichoice_cb): new function. callback for
 	multichoice buttons. We use an object data with key
 	"gnc_multichoice_index" to store the index with the option menu.
	(gnc_option_create_multichoice_widget): new function. create the
 	widget for multichoice options.
	(gnc_option_set_ui_widget): add multichoice option.

	* src/register/gnome/gnucash-sheet.c
 	(gnucash_sheet_block_destroy): Don't free the entries and colors,
 	that is done by gnucash_sheet_block_clear_entries now.
	(gnucash_sheet_block_clear_entries): Set the freed pointers to
 	NULL for safety.

1999-12-09  Heath Martin  <martinh@pegasus.cc.ucf.edu>

	* src/register/gnome/gnucash-color.c (color_hash): The argument is
 	an argb, not a GdkColor. So we'll just use its value directly.
  	This fixes a bug in that we were getting lots of failed color
 	lookups in the hash table, and therefore lots of redundant
 	insertions.

	* src/register/gnome/gnucash-sheet.c
 	(gnucash_sheet_block_clear_entries): Free entries, fg_colors,
 	bg_colors here. We were leaking [fg,bg]_colors.


1999-12-09  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/window-register.c (regWindowLedger): set the window
	policy to allow shrinking and growing.

	* src/SplitLedger.c (xaccSRSaveRegEntry): change the memo
	before you create the 'other' split, so it gets the same memo.
	Also, if we are committing the blank split, insert it into the
	account before we create the 'other' split, so the other split
	can get a parent account, too.

1999-12-08  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/scm/main.scm (gnc:ui-finish): destroy the ui subwindows
	before doing a file-query-save. The register windows need to
	be closed before saving, in case there are edited transactions.

	* src/gnome/top-level.c (gnc_ui_destroy_all_subwindows): new
 	function.  used by guile to destroy all non-main windows.

	* src/gnome/window-help.c (gnc_ui_destroy_html_windows): new
 	function.  destroy any help or report windows open.

1999-12-08  Heath Martin  <martinh@pegasus.cc.ucf.edu>

	* src/register/gnome/gnucash-cursor.c (gnucash_item_cursor_draw):
 	Draw an inner rectangle in the cell cursor.  This balances the
 	cursor top/bottom versus sides, and fixes some ugliness especially
 	in double line mode.

1999-12-08  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/SplitLedger.c (xaccSRLoadRegister): restore original
 	position a bit more accurately.

1999-12-07  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/scm/text-export.scm (gnc:account-transactions-export-as-text):
	return #f as value so the traversal keeps going. (See Group.h).

	* src/g-wrap/gnc-helpers.c: use gh_long2scm instead of the
	long long version. This is incorrect for very large values,
	but longlong doesn't seem to be working right now.

	* src/engine/LedgerUtils.c (accListHasAccount): new function.
	search for account in list.

	* src/MultiLedger.c: Only add the leader if it wasn't in the list.

	* src/gnome/window-register.c (gnc_register_create_menu_bar):
	Added an option to scrub the account. Changed Register menu
	to Account menu.

	* src/engine/Transaction.c (MARK_SPLIT): mark the account group
	as not saved. Ensures we get a "do you want to save" dialog.

	* src/register/gnome/gnucash-sheet.c (compute_optimal_height):
	request height for DEFAULT_REGISTER_ROWS rows.

	* src/gnome/window-register.c (deleteCB): fancy deletes.

1999-12-06  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/SplitLedger.c (xaccSRSaveRegEntry): Insert the blank split
 	into the account when it is committed, not when it is created.
  	Otherwise, the blank split gets saved to a file if you save with
 	an open register. Also, it gets stuck in the reconcile window if
 	you open that with an open register.

	* src/register/pricecell.c (xaccSetDebCredCellValue): simplify
	and fix value setting bug.

	* src/SplitLedger.c (xaccSRCancelCursorTransChanges): new
 	function. Cancel the changes to the current transaction.

	* src/motif/RegWindow.c (cancelCB): use SR functions instead.

	* src/g-wrap/gnc.gwp: add wrapper for xaccGroupGetBalance

	* src/gnome/window-register.c (regWindowLedger): take out the size
 	code altogether.

1999-12-06  Heath Martin  <martinh@pegasus.cc.ucf.edu>

	* src/register/gnome/gnucash-sheet.c (DEFAULT_REGISTER_WIDTH):
 	Increase this a little, so at least a checking account register is
 	drawn correctly.  This is a hack for now anyway until the
 	computations in gnucash-style.c are reworked.

	* src/gnome/window-register.c (regWindowLedger): Comment out the
 	call to gtk_widget_set_usize (), so the register window finds it's
 	own natural size.

	* src/register/gnome/gnucash-header.c
 	(gnucash_header_reconfigure): Compute w, h correctly.

1999-12-05  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/window-register.c (closeCB): Query the user as to
 	whether or not to save a changed transaction.

	* src/MultiLedger.c (xaccLedgerDisplayClose): Only refresh
	if there were really changes.

	* src/SplitLedger.c (LedgerDestroy): Paranoia checks.

	* src/gnome/window-register.c (regWindowLedger): catch the register
	"activate_cursor" signal. Upon receipt, record the transaction and
	move to the next virtual row.

	* src/register/gnome/gnucash-sheet.c
 	(gnucash_register_goto_next_virt_row): new function. Cause the
	register cursor to advance to the next virtual row.

	* src/register/gnome/gnucash-sheet.h: Add a "activate_cursor"
 	callback to the register that is emitted when the user pressed
 	return.

1999-12-04  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/window-main.c (gnc_ui_mainWindow_scrub): new function.
  	Scrub the current account.
	(gnc_ui_mainWindow_toolbar_open_subs): new function.
	Open subaccounts.

	* src/gnome/window-register.c (gnc_register_raise): new function.
	Cause the given register window to be raised to the top.

	* src/gnome/scripts_menu.c (gnc_extensions_menu_add_item): We have
 	to register the scheme scripts to make sure they aren't
 	garbage-collected.
	(gnc_extensions_shutdown): New function. Call when shutting down
	to free memory structures and unregister scheme scripts.

	* src/gnome/window-register.c (gnc_register_create_popup_menu): new
	function. Create a popup menu for the register.
	(regWindowLedger): Add the popup menu to the register.

	* src/register/gnome/gnucash-sheet.c (gnucash_button_press_event):
	return FALSE for unused events so they are passed up the hierarchy.

	* src/gnome/window-adjust.c (adjBWindow): use fully qualified
	account name in window title.

	* src/gnome/window-register.c (regWindowLedger): use fully
 	qualified name in the title of the window.

	* src/gnome/dialog-utils.c (gnc_ui_get_account_full_name): new
 	function. Construct the fully-qualified account name using the
	given separator string.

	* src/engine/Account.c (xaccAccountGetParentAccount): new function.
	Return the parent account of an account.

	* src/engine/Group.c (xaccGroupGetParentAccount): new function.
	Return the parent account of a group.

	* src/register/gnome/gnucash-sheet.c (gnucash_sheet_key_press_event):
	respond to keypad directional keys.

1999-12-03  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/SplitLedger.c (xaccSRLoadRegister): When we refresh, look
 	for the pending transaction. If we don't find it, clear the
 	pending transaction to prevent it being committed later.

	* src/g-wrap/gnc.gwp: added binding for reportWindowDirect

	* src/gnome/window-register.c (helpCB): help window should not
	be parented.

	* src/gnome/window-main.c (gnc_ui_help_cb): help window should
	not be parented.
	(gnc_ui_reports_cb): reports window should not be parented.

	* src/engine/Transaction.c (xaccTransBeginEdit): Check for an
 	already open transaction.
	(xaccTransIsOpen): new function. returns true if transaction
	is open for editing.

	* src/gnome/window-register.c (regWindowLedger): Use a gnome dock
 	to hold the window contents. This is more flexible.
	(gnc_register_create_tool_bar): use graphical buttons. Also, don't
 	create the handle box, the gnome dock item will handle that.
	(gnc_register_create_menu_bar): don't create the handle box.

	* src/reports/Sheet.c: Rob Merkel's patch for locating eperl

	* src/gnome/account-tree.c (gnc_account_tree_refresh): tighter
 	bounds on adjustment value. Prevents quirks when refreshing to
	a smaller number of accounts.

	* configure.in: Rob Merkel's eperl and gtkxmhtml build patches

	* Makefile.in: Rob Merkel's patch to enforce gtkxmhtml requirement

	* src/gnome/window-register.c (deleteCB): use
 	xaccSRDeleteCurrentSplit to delete the split.

1999-12-02  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/register/gnome/combocell-gnome.c (moveCombo): disconnect
	the list signals.

	* src/SplitLedger.c (LedgerMoveCursor): update cursor_phys_row and
 	cursor_virt_row in the SplitRegiter.
	(xaccSRDeleteCurrentSplit): new function. delete the current split
 	in the register.
	(xaccSRCountRows): don't move the saved physical and virtual rows
	if the current split was NULL.

	* Makefile.in: Added Tyson Dowd's rules to rerun autoconf
	and configure when needed.

1999-12-01  Rob Browning  <rlb@cs.utexas.edu>

	* src/scm/txn-create.scm: remove trailing garbage.

	* src/scm/srfi: new directory containing source for various Scheme
	Requests for Implementation.  We now have srfi-8 and srfi-1.
	These are very useful.  Docs are available at
	http://srfi.schemers.org/.

	* src/scm/report/folio.scm: new file implementing
	Reports/report-folio.phtml.  Not finished, but not loaded either.

	* src/scm/report/dummy.scm: new file to test the report system.
	Shows the current date.

	* src/scm/report/balance-and-pnl.scm: new file to generate balance
	sheet and profit and loss reports.  Implements
	Reports/report-baln.phtml and Reports/report-pnl.phtml.  The code
	in here could be better, but it's not awful.  It's mostly a
	straight eperl port.

	* src/scm/report.scm: new file implementing the initial
	scheme-based report system.

	* src/scm/main.scm: use the new depend mechanism and load the new
	srfis

	* src/scm/extensions.scm: reformat so all the code doesn't go off
	the right side of a normal screen (with tabs set to 8, etc).
	Linas might veto this, but I thought it was worthwhile.

	* src/scm/depend.scm: new file adding a support/depend mechanism.
	Modify other files to start using it.

1999-11-30  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/window-help.c: extensive rewrite. Revamped look to use
	dockable toolbar. Handle motion keys. Escape key closes window.
	Graphics are now loaded.

1999-11-28  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/register/table-allgui.c (doMoveCursor): don't scroll when we
	update the cursor after the the callback.

	* src/register/table-gnome.c (doRefreshCursorGUI): same as below

	* src/register/table-motif.c (doRefreshCursorGUI): same as below

	* src/register/table-allgui.c (xaccRefreshCursorGUI): add a
 	do_scroll argument to determine whether the gui should scroll to
 	make the cursor visible. This lets us cut down on flashing.

	* src/register/gnome/gnucash-sheet.c (gnucash_sheet_table_load):
 	try to avoid scrolling
	(gnucash_sheet_cursor_set_from_table): remove redundant call to
 	update adjustments.

	* src/gnome/window-register.c (cancelCB): use
 	xaccSplitRegisterClearChangeFlag.
	(gnc_register_create_tool_bar): right-align the displayed balances

	* src/register/splitreg.c (xaccSplitRegisterClearChangeFlag): new
 	function. Clear the change flags of the register.

	* src/SplitLedger.c (xaccSRCancelCursorChanges): new
 	function. Cancel the changes made to the current cursor.

1999-11-27  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/window-register.c (regWindowLedger): set default sort
	order to the standard order.
	(gnc_build_ledger_sort_order_menu): add the standard order to the
	list of options.
	(gnc_ledger_sort_cb): handle the standard order

	* src/engine/Query.c (xaccQuerySetSortOrder): added BY_STANDARD and
 	BY_NONE sort orders.

	* src/register/splitreg.c (configLayout): configure the single
 	cursor last so the header is the most reasonable. This is a
 	hack. Eventually, we should probably switch headers dyamically.

	* src/register/gnome/gnucash-sheet.c
 	(gnucash_register_goto_virt_row_col): replaces and generalizes
 	gnucash_sheet_go_to_last_row.

	* src/gnome/window-register.c (gnc_register_jump_to_blank): new
 	function to jump to the blank split.
	(new_trans_cb): use gnc_register_jump_to_blank
	(regWindowLedger): jump to the blank split with above function
 	before returning

	* src/SplitLedger.c (xaccSRGetSplitRowCol): new function
	(xaccSRGetBlankSplit): new function

	* src/register/splitreg.c (configLabels): apply Rob Walker's patch
	to fix the labels.

	* src/gnome/window-register.c (gnc_register_date_cb): set start
 	date to the first second of the day selected and the end date to
 	the last second of the day selected.

	* src/engine/Query.c (xaccQueryGetSplits): fixed a problem to
 	prevent returning one split too many. We need to check for the
	max date before we add the split.

1999-11-23  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/register/gnome/gnucash-sheet.c (gnucash_sheet_go_to_last_row): 
	jump to the last row in the sheet. This will be the blank split.

	* src/gnome/window-register.c (gnc_register_create_menu_bar): add
	a menu item for moving to the blank split
	(regWindowLedger): jump to the last row, i.e., the blank split,
	before you return.

	* src/register/gnome/gnucash-style.c (gnucash_style_layout_init):
 	make the reconcile cell visible in mult-line mode. It's not
 	active, but it looks better.

	* src/SplitLedger.c (LedgerMoveCursor): tell xaccSRSaveRegEntry
 	which transaction we are moving to.
	(xaccSRSaveRegEntry): add an argument to indicate which
 	transaction will be current after the save. This allows us to
 	commit right away if we are changing transactions and keeps the
 	register gui in sync with the engine.

	* src/register/table-allgui.c (doMoveCursor): refresh the gui
 	cursor after the second makePassive if we are moving the gui.
  	This fixes a refresh bug that happens if the splits get reordered.

	* configure.in and src/gnome/Makefile.in: Rob Merkel's patch
	to check for gtkxmhtml
	
	* src/scm: applied Rob Walker's patch to add a version argument
	
	* src/gnome/account-tree.c (gnc_account_tree_init): auto resize
	the first column

	* src/gnome/window-main.c (mainWindow): give focus to the
	account tree before we exit

1999-11-22  Rob Browning  <rlb@cs.utexas.edu>

	* src/register/table-motif.c (modifyCB): *trivial* modification to
	support modify_verify cursor_position arg.  I'm not in a position
	to easily deal with the XmBae callback complexity.  This should
	just leave the status-quo.

	* src/motif/RegWindow.c (dateChangeCB): ditto.

	* src/register/table-allgui.[hc]: quickfill fixes, support the new
	modify_verify cursor_position arg.

	* src/register/gnome/gnucash-sheet.c: quickfill fixes, use the new
	modify_verify cursor_position arg.

	* ChangeLog: merge all the src/register/gnome/ChangeLog entries
	into this file and delete that file to finish up what Dave started
	on 1999-11-20.  Aside from being cleaner, it also makes emacs (and
	I suspect other editors) automatically find the right file when
	you do a "C-x 4 a" (changelog-add-entry).

	* src/register/*cell.h: added position (int *) parameter to
	all cell MV calls.  This allows the callback to reposition the
	cursor within the text if needed.  This was required by the
	quickfill fix, but is probably useful elsewhere.

	* src/register/quickfillcell.c (quick_modify): fixed so that
	cursor tracks as you type along with some other important bugs
	(quickfill divergences now cause the remainder of the stale fill
	to be deleted, etc.)

1999-11-21  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/window-register.c: (recordCB): when when record
	a new or existing transaction, make sure it will be in the
	date range we are viewing.

	* src/register/table-allgui.c: (gnc_table_traverse_update): handle
 	pointer traversals a bit more intelligently.

	* src/register/gnome/gnucash-item-edit.c: (item_edit_set_cursor_pos)
	fix for when you enter a cell that's right-aligned.
	
1999-11-20  Dave Peticolas  <peticola@cs.ucdavis.edu>

        * src/register/gnome/ChangeLog: we're going to stop using this
	changlog file and put all changes in the top-level ChangLog file.

	* src/gnome/reconcile-list.[ch]: Use a hash table to remember
	reconcile flags after a refresh. Also remember scroll position.
	Change row styles so active row isn't highlited.

	* src/register/gnome/gnucash-sheet.c:
 	(gnucash_button_press_event): For now, we need to enter the cell,
 	even if we're already there. The reconcile cell, for instance,
 	depends on this behavior. But, if we're entering the cell where we
 	already are, we remember the cursor position and try to go back to
 	it. Also, when we're entering a new cell it's drawn as if we're at
 	cursor position 0, so tell item_edit_set_cursor.

	* src/register/gnome/gnucash-item-edit.c (item_edit_draw_info):
 	new function to calculate drawing parameters for the item
 	editor. This is used both in drawing and in calculating the place
 	to move the cursor to for mouse traversals.
	(item_edit_draw): use item_edit_draw_info
	(item_edit_set_cursor_pos): use item_edit_draw_info

1999-11-19  Heath Martin  <martinh@pegasus.cc.ucf.edu>

	* gnucash-cursor.c (gnucash_item_cursor_draw): Use light gray for
 	the cell cursor; experimental to see if we like it.
	(gnucash_item_cursor_draw): Draw the inside rectangle slightly
 	inside.
	(gnucash_cursor_request_redraw): Tighten up the bounds now that we
 	don't have the outside rectangle.

	* gnucash-sheet.c (gnucash_button_press_event): Only move the cursor
	if the button press moves us to a new cell.  Set the editing cursor.

	* gnucash-item-edit.c (item_edit_draw): Take justification into
 	account here.  Use CELL_HPADDING, CELL_VPADDING instead of magic
 	constants to set the clip rectangle and the offsets.
	(item_edit_set_cursor_pos): New function.
	(item_edit_update): Adjust the positioning of the list now that we
 	don't have the outer rectangle.

1999-11-19  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/account-tree.c: remember expansion state and
	scroll position after a refresh.

	* src/gnome/query-user.[ch]: add parented versions of the
	query dialogs.

	* src/gnome/: modify dialogs to use parented dialogs

	* src/register/gnome/gnucash-cursor.c: (gnucash_item_cursor_draw):
	Heath's mod which removes the outer rectangle.

	* src/register/gnome/gnucash-item-edit.c: (item_edit_update):
	Heath's mod to make the combo list draw correctly

1999-11-18  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/engine/util.c: (PrtAmtComma): fixed
	rounding error when remainder is close to 1.

1999-11-17  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/register/gnome/gnucash-header.[ch]: removed type
	variable. The header should always be type GNUCASH_CURSOR_HEADER

	* src/register/gnome/gnucash-style.c:
	(gnucash_sheet_style_compile): use the cell labels for the header
	style labels
	
	* src/register/gnome/gnucash-item-edit.[ch]: Added a toggle button
	for popping the combo list.

	* src/register/gnome/gnucash-style.c: (gnucash_style_layout_init)
	make the width of the 'num' column of the split cursor the same as
	the others.

1999-11-15  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/register/gnome/gnucash-sheet.c: (gnucash_sheet_delete_cb)
	and
	(gnucash_sheet_insert_cb): use malloc/free instead of glib
	routines for newval. newval may be free()d by routines in the
	register code. You can't mix-n-match.

	* src/register/gnome/gnucash-sheet.c (gnucash_sheet_destroy) and
	(gnucash_sheet_new): sink the entry and unref it after the item
	editor is destroyed. This fixes a memory leak, the entry was not
	being finalized.

	* src/register/gnome/gnucash-sheet.c add
	(gnucash_sheet_key_press): allow outside entities to pass
	keystrokes to the sheet. Used by the combocell.

	* src/register/gnome/combocell-gnome-c: extensive modifications to
	support the new list item.

	* src/register/gnome/gnucash-item-edit.[ch]: ditto

1999-11-12  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/engine/util.c: (xaccSPrintAmount): print values
	very close to 0 as 0 without negative sign.

	* lib/README: updated to indicate obsolete packages.

	* lib/Makefile.in: don't build g-wrap if g-wrap-install
	directory exists

	* src/guile-util.c: (gnc_register_c_side_scheme_ptr):
	modified to return SCM handle, which is used with
	(gnc_unregister_c_side_scheme_ptr) to unregister.

	* src/gnome/option-util.c: added (gnc_options_init)
	and (gnc_options_shutdown).

	* src/gnome/top-level.c: call above functions at
	appropriate times.

	* src/gnome/account-tree.c: (gnc_account_tree_select_account):
	scroll to make sure account is visible.

	* src/register/gnome/gnucash-item-edit.c: (item_edit_draw): make
	the cursor larger and allow it to be seen even when it's at the
	end of a too-long-to-fit-in-cell string.

	* src/register/gnome/gnucash-item-list.[ch]: new code to support
	the combo cell.
	
1999-11-10  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/gnome/dialog-filebox.c: Use GtkFileSelection instead
	of GtkFileSelection2.

	* build: Changed configure.in/Makefile.in's to remove dependencies
	on gtkfilel2.

	* build: automatically rebuild gnc.[ch] when gnc.gwp changes *or*
	if you switch from motif to gnome build or vice versa.

	* src/gnome/window-main.: added Save As menu item.

	* src/register/gnome/combocell-gnome.c: reformatted to be
	idiomatic

	* src/register/gnome/gnucash-sheet.c:
	(gnucash_sheet_key_press_event): Added support for pageup/down and
	home/end keypressed.

1999-11-07  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/Refresh.c: Added this code for refreshing account-related
 	windows when accounts change. Right now, this is registers and
 	reconcile windows.

	* src/gnome/window-register.c: fixed deleting of blank split
	
	* src/register/gnome/gnucash-sheet.c
	(gnucash_sheet_activate_cursor_cell): handle enter updates when
	new_text is non-null by updating the cell from the table and *not*
	src/register/gnome/starting the editing widget.

	* gnucash-grid.c (draw_cell): used CELL_HPADDING for right justify
	adjustment on x value instead of CELL_VPADDING.

1999-11-05  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* src/register/gnome/gnucash-grid.c (gnucash_grid_draw): use
	g_return_if_fail for error checks.

	* src/register/gnome/gnucash-grid.c (gnucash_grid_unrealize):
	Sanity checks before unrefing the gc's.

	* src/register/gnome/gnucash-header.c (gnucash_header_unrealize):
	sanity checks

	* src/register/gnome/gnucash-currsor.c (gnucash_cursor_unrealize):
	sanity checks

	* src/register/gnome/gnucash-sheet.h (GnucashRegisterClass):
	parent class should be GtkTableClass

	* src/register/gnome/gnucash-sheet.c
	(gnucash_sheet_update_adjustments): update page_increment, so
	clicking on the rest of the scrollbar scrolls one page

	* src/register/gnome/gnucash-sheet.c
	(gnucash_sheet_key_press_event): call gnc_table_traverse_update on
	up/down motion.

1999-11-04  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* Add this changelog entry which I should have done a long
	time ago.

	* Rework most of the src/gnome stuff to be compliant with
	gnome-standards.

	* Add QIF fixes.

	* Add Transfer and Adjust Balance windows.

	* Add gnome<->guile options interface.

	* Add c-side SCM registry, courtesy of Rob.

	* Add Alexandru's register window enhancements.

	* Add Heath's gnome register enhancements.

	* Remove dependencies on gtksheet. Hooray!

	* src/register/gnome Various: a few fixes here and there to make
	everything compile cleanly under -Wall. Mainly removing unused
	local variables, and changing g_return_if_fail to
	g_return_val_if_fail for functions which return a value. Added a
	few prototypes that were missing. Cleaned up #includes.

	* src/register/gnome/gnucash-sheet.c (gnucash_register_new): Make
	the vertical scrollbar flush with the top of the register.

	* src/register/gnome/Makefile.in: removed motif and qt
	targets. Made gnome target the default.

1999-08-30  Heath Martin  <martinh@pegasus.cc.ucf.edu>

	* src/register/gnome/gnucash-sheet.c
	(gnucash_sheet_key_press_event): Be sure to set new_p_row in the
	case GDK_Tab, since the function gnc_table_traverse_update checks
	the proposed new row/col, so we need to initialize properly.

1999-08-28  Heath Martin  <martinh@pegasus.cc.ucf.edu>

	* TODO: New file.

	* src/register/gnome/gnucash-style.c (gnucash_style_init): Removed
	the dependency on gnome-print for now.  We may want to use the
	gnome-print library in the future.

	* Makefile.in (LIBS): Ditto

1999-08-25  Rob Browning  <rlb@cs.utexas.edu>

	* Add ./README.gnome-hackers.

	* Add ./README.guile-hackers.

	* Add this file (./ChangeLog).  I'm planning to add change
	information here, and I invite others to do the same.  For those
	that use emacs, 'C-x 4 a' adds a new entry.  If people don't like
	this idea, we can drop it.

	* Add new scheme function gnc:choose-item-from-list-dialog.  There
	is C side code, but it's only meant to be called from scheme.
	This function is quite flexible in handles selections.  Eventually
	we might want to generalize this even more, but there are some GC
	issues to consider.  See src/gnome/query-user.c and gnc.gwp for
	details, and see src/scm/extensions.scm for an example usage.

	* IMPORTANT: queryBox signature has changed.  See the docs in
	src/gnome/query-user.c and in gnc.gwp for details.

	* Remove queryBox stubs from Motif side.  Motif doesn't support it
	(yet), and with gnc.gwp conditional inclusion we can just ignore
	it on the motif side.

	* Add function (current-gnc-compile-flavor) to gnc.gwp so that we
	can have conditional blocks.  Possible return values are 'gnome
	and 'motif.

1999-08-23  Heath Martin  <martinh@pegasus.cc.ucf.edu>

	* src/register/gnome/gnucash-header.c (gnucash_header_draw): Added
	a separator line between the header and the register entries.

	* src/register/gnome/gnucash-item-edit.c (item_edit_new): Attempt
	to implement the comboboxes.  For some reason, I can't get combos
	to work, something related to how the widget size is computed.
	Comment this out for now.

	* src/register/gnome/gnucash-item-edit.c (item_edit_set_arg):
	Ditto

1999-08-20  Heath Martin  <martinh@pegasus.cc.ucf.edu>

	* src/register/gnome/gnucash-grid.c (draw_cell): Set the
	background/foreground color on a per cell basis.  This obsoletes
	the bg/fg colors in the styles for now.

	* src/register/gnome/gnucash-sheet.c
	(gnucash_sheet_block_clear_entries): Fixed a big memory leak here.
	(gnucash_sheet_block_set_entries): Support for background and
	foreground colors for the cells.  Set these from the table.

1999-08-19  Heath Martin  <martinh@pegasus.cc.ucf.edu>

	* src/register/gnome/gnucash-style.c (gnucash_style_layout_init):
	Layout the stock registers.

1999-08-18  Heath Martin  <martinh@pegasus.cc.ucf.edu>

	* src/register/gnome/gnucash-grid.c (gnucash_grid_draw): When the
	block is active, if a cell doesn't have a user-entered string,
	then draw the label for that cell type as a hint for what should
	be entered.  TODO: Don't draw the label if the cell isn't an
	input/output cell, or whatever.

	* src/register/gnome/gnucash-style.c
	(gnucash_sheet_style_compile): Initialize the labels[][] array in
	the style.

1999-08-17  Heath Martin  <martinh@pegasus.cc.ucf.edu>

	* src/register/gnome/gnucash-cursor.c (configure_bounds): Do this
	the right way.

	* src/register/gnome/gnucash-item-edit.c (item_edit_draw): Added
	the clip rectangle, and made it so the text scrolls to keep the
	cursor in view.

	* src/register/gnome/gnucash-grid.c (gnucash_grid_draw): Added the
	clip rectangle.

1999-08-14  Heath Martin  <martinh@pegasus.cc.ucf.edu>

	* src/register/gnome/gnucash-cursor.c
	(gnucash_cursor_get_pixel_coords): Take into account the alignment
	offsets.

	* src/register/gnome/gnucash-item-edit.c
	(item_edit_get_pixel_coords): Take into account the alignment
	offsets.

	* src/register/gnome/gnucash-grid.c
	(gnucash_grid_find_block_origin_by_pixel): Fixed an off-by-one
	mistake.

	* src/register/gnome/gnucash-sheet.c
	(gnucash_sheet_make_cell_visible): New function
	(gnucash_sheet_cursor_move): Make the cell visible.
	(gnucash_sheet_set_top_row): Added support for aligning on the top
	or bottom row.
	(gnucash_sheet_update_adjustments): Fixed this so the sheet can't
	scroll past the bottom row.

1999-08-12  Heath Martin  <martinh@pegasus.cc.ucf.edu>

	* src/register/gnome/gnucash-sheet.c
	(gnucash_sheet_activate_cursor_cell): With Alexandru's patches, we
	seem to need to grab the focus.  We'll probably need this
	elsewhere.

1999-08-11  Heath Martin  <martinh@pegasus.cc.ucf.edu>

	* src/register/gnome/gnucash-sheet.c (gnucash_button_press_event):
	New function.

	* src/register/gnome/gnucash-grid.c
	(gnucash_grid_find_block_origin_by_pixel): Add a return value.
	(gnucash_grid_find_cell_origin_by_pixel): New function.

1999-08-10  Heath Martin  <martinh@pegasus.cc.ucf.edu>

	* src/register/gnome/gnucash-sheet.c
	(gnucash_sheet_key_press_event): Added up/down movement.
	(gnucash_sheet_style_set_dimensions): Change the way we set
	dimensions.
	(gnucash_sheet_size_allocate): Recompute style dimensions.

	* src/register/gnome/gnucash-item-edit.c
	(item_edit_get_pixel_coords): We need to compute pixels relative
	to the canvas origin, not the window origin.  Duh.  (Note that
	canvas sends coordinates to a draw function relative to the canvas
	origin.)

	* src/register/gnome/gnucash-cursor.c
	(gnucash_cursor_get_pixel_coords): Ditto.

	* src/register/gnome/gnucash-sheet.c
	(gnucash_sheet_deactivate_cursor_cell): New function.
	(gnucash_sheet_activate_cursor_cell):
	(gnucash_sheet_cursor_move):
	(gnucash_sheet_start_editing_at_cursor):
	(gnucash_sheet_stop_editing):

1999-08-09  Heath Martin  <martinh@pegasus.cc.ucf.edu>

	* src/register/gnome/combocell-gnome.c: New file, everything is a
	no-op for now, we just need the stubs.

	* src/register/gnome/gnucash-item-edit.[ch]: New file.  Implements
	an entry for the sheet.

1999-08-08  Heath Martin  <martinh@pegasus.cc.ucf.edu>

	* src/register/gnome/gnucash-cursor.[ch] : New file.  Implements a
	block/cell cursor.

	* src/register/gnome/gnucash-sheet.c
	(gnucash_sheet_style_get_cell_pixel_rel_coords): New function.

1999-08-06  Heath Martin  <martinh@pegasus.cc.ucf.edu>

	* src/register/gnome/gnucash-grid.c (gnucash_grid_draw): Updated
	to reflect the changes below.
	(gnucash_grid_find_block_origin_by_pixel): Bug fix (off by one).

	* src/register/gnome/gnucash-sheet.c (gnucash_sheet_table_load):
	Another overhaul of the structure.  We need to keep a local copy
	of the table, to keep what we need to redraw from changing
	underneath us.  So we needed some memory management and some minor
	API adjustments.
	(gnucash_sheet_resize):
	(gnucash_sheet_resize_row):
	(gnucash_sheet_destroy_row):
	(gnucash_sheet_block_new_row):
	(gnucash_sheet_block_set_from_table):
	(gnucash_sheet_block_set_entries):
	(gnucash_sheet_block_clear_entries):
	(gnucash_sheet_insert_block_row):
	(gnucash_sheet_get_block):

1999-08-04  Heath Martin  <martinh@pegasus.cc.ucf.edu>

	* src/register/gnome/gnucash-sheet.c
	(gnucash_sheet_compute_visible_range): New

	* src/register/gnome/gnucash-grid.c (gnucash_grid_draw): Basic
	support for drawing the text of a cell.
	(gnucash_grid_draw): Added support for justifications.

1999-08-03  Heath Martin  <martinh@pegasus.cc.ucf.edu>

	* src/register/gnome/gnucash-sheet.c (gnucash_register_new): Make
	register into an independent widget.

	* src/register/gnome/gnucash-sheet.c, gnucash-grid.c: Overhaul of
	the structure.  We don't need to keep a list of blocks, or a hash
	list of styles.  All the info we need is in the Table, and there
	are only five styles associated to a given table (from
	splitreg.h).  Many functions touched to reflect the change.  Also,
	keep track of the SplitRegister associated to this table.

1999-08-02  Heath Martin  <martinh@pegasus.cc.ucf.edu>

	* src/register/gnome/gnucash-color.c (gnucash_color_init): move
	the color allocation and hash table routines from table-gnome.c to
	here.

	* src/register/gnome/gnucash-sheet.c (gnucash_sheet_block_append):
	fixed a silly bug.
	(gnucash_sheet_block_style_new): Fix up the key.
	(gnucash_register_new): This is complex widget that already has
	the vertical/horizontal scrollbars attached.

	* src/register/gnome/gnucash-grid.c (gnucash_grid_find_block): Be
	sure we get a valid sheet_block.  Our register window may be
	larger than the number of blocks.

	* src/register/gnome/gnucash-sheet.c (gnucash_sheet_load): Initial
	load of the table into the register.

	* src/register/gnome/gnucash-color.[c,h]:  steal these files from gnumeric

1999-08-01  Heath Martin  <martinh@pegasus.cc.ucf.edu>

	* src/register/gnome/gnucash-sheet.c
	(gnucash_sheet_style_recompile): make height, width a member of
	the style, so we don't have to change every block when the style
	gets recompiled (on sheet allocation changes for example).

	* src/register/gnome/gnucash-grid.c (gnucash_grid_get_type): First
	hack at getting a grid going.
	(gnucash_grid_class_init): Ditto
	(gnucash_grid_set_arg):
	(gnucash_grid_init):
	(gnucash_grid_draw):
	(gnucash_grid_find_block):
	(gnucash_grid_update):
	(gnucash_grid_unrealize):
	(gnucash_grid_realize):

	* src/register/gnome/gnucash-sheet.c (gnucash_sheet_new): New
	(gnucash_sheet_get_type): New
	(gnucash_sheet_class_init): New
	(gnucash_sheet_create): New
	(gnucash_sheet_realize): New
	(gnucash_sheet_block_new): New
	(gnucash_sheet_block_destroy): New
	(gnucash_sheet_vadjustment_value_changed): New
	(gnucash_sheet_set_top_block): New
	(gnucash_sheet_block_get_pixels): New
	(gnucash_sheet_get_block): New
	(gnucash_sheet_style_init): etc, per block style handling
