1999-11-07  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* gnucash-sheet.c (gnucash_sheet_activate_cursor_cell): handle
	enter updates when new_text is non-null by updating the cell
	from the table and *not* starting the editing widget.

	* gnucash-grid.c (draw_cell): used CELL_HPADDING for right
	justify adjustment on x value instead of CELL_VPADDING.
	
1999-11-05  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* gnucash-grid.c (gnucash_grid_draw): use g_return_if_fail
	for error checks.

	* gnucash-grid.c (gnucash_grid_unrealize): Sanity checks before
	unrefing the gc's.

	* gnucash-header.c (gnucash_header_unrealize): sanity checks

	* gnucash-currsor.c (gnucash_cursor_unrealize): sanity checks

	* gnucash-sheet.h (GnucashRegisterClass): parent class should
	be GtkTableClass

	* gnucash-sheet.c (gnucash_sheet_update_adjustments): update
	page_increment, so clicking on the rest of the scrollbar scrolls
	one page

	* gnucash-sheet.c (gnucash_sheet_key_press_event): call
	gnc_table_traverse_update on up/down motion.
	
1999-11-04  Dave Peticolas  <peticola@cs.ucdavis.edu>

	* Various: a few fixes here and there to make everything
	compile cleanly under -Wall. Mainly removing unused local
	variables, and changing g_return_if_fail to g_return_val_if_fail
	for functions which return a value. Added a few prototypes that
	were missing. Cleaned up #includes.

	* gnucash-sheet.c (gnucash_register_new): Make the vertical
	scrollbar flush with the top of the register.

	* Makefile.in: removed motif and qt targets. Made gnome target
	the default.

1999-08-30  Heath Martin  <martinh@pegasus.cc.ucf.edu>

	* gnucash-sheet.c (gnucash_sheet_key_press_event): Be sure to set
	new_p_row in the case GDK_Tab, since the function
	gnc_table_traverse_update checks the proposed new
	row/col, so we need to initialize properly.

1999-08-28  Heath Martin  <martinh@pegasus.cc.ucf.edu>

	* TODO: New file.

	* gnucash-style.c (gnucash_style_init): Removed the dependency on gnome-print for now.
	We may want to use the gnome-print library in the future.

	* Makefile.in (LIBS): Ditto

1999-08-23  Heath Martin  <martinh@pegasus.cc.ucf.edu>

	* gnucash-header.c (gnucash_header_draw): Added a separator line between
	the header and the register entries.

	* gnucash-item-edit.c (item_edit_new): Attempt to implement the comboboxes.
	For some reason, I can't get combos to work, something related to
	how the widget size is computed.  Comment this out for now.

	* gnucash-item-edit.c (item_edit_set_arg): Ditto

1999-08-20  Heath Martin  <martinh@pegasus.cc.ucf.edu>

	* gnucash-grid.c (draw_cell): Set the background/foreground color
	on a per cell basis.  This obsoletes the bg/fg colors in the
	styles for now.

	* gnucash-sheet.c (gnucash_sheet_block_clear_entries): Fixed a big
	memory leak here.
	(gnucash_sheet_block_set_entries): Support for background and foreground
	colors for the cells.  Set these from the table.

1999-08-19  Heath Martin  <martinh@pegasus.cc.ucf.edu>

	* gnucash-style.c (gnucash_style_layout_init): Layout the stock
	registers.

1999-08-18  Heath Martin  <martinh@pegasus.cc.ucf.edu>

	* gnucash-grid.c (gnucash_grid_draw): When the block is active,
	if a cell doesn't have a user-entered string, then draw the
	label for that cell type as a hint for what should be entered.
	TODO:  Don't draw the label if the cell isn't an input/output
	cell, or whatever.

	* gnucash-style.c (gnucash_sheet_style_compile): Initialize the
	labels[][] array in the style.

1999-08-17  Heath Martin  <martinh@pegasus.cc.ucf.edu>

	* gnucash-cursor.c (configure_bounds): Do this the right way.

	* gnucash-item-edit.c (item_edit_draw): Added the clip rectangle,
	and made it so the text scrolls to keep the cursor in view.

	* gnucash-grid.c (gnucash_grid_draw): Added the clip rectangle.

1999-08-14  Heath Martin  <martinh@pegasus.cc.ucf.edu>
	* gnucash-cursor.c (gnucash_cursor_get_pixel_coords): Take
	into account the alignment offsets.

	* gnucash-item-edit.c (item_edit_get_pixel_coords): Take into
	account the alignment offsets.

	* gnucash-grid.c (gnucash_grid_find_block_origin_by_pixel): Fixed
	an off-by-one mistake.

	* gnucash-sheet.c (gnucash_sheet_make_cell_visible): New function
	(gnucash_sheet_cursor_move): Make the cell visible.
	(gnucash_sheet_set_top_row): Added support for aligning on
	the top or bottom row.
	(gnucash_sheet_update_adjustments): Fixed this so the sheet
	can't scroll past the bottom row.

1999-08-12  Heath Martin  <martinh@pegasus.cc.ucf.edu>

	* gnucash-sheet.c (gnucash_sheet_activate_cursor_cell): With Alexandru's
	patches, we seem to need to grab the focus.  We'll probably need this
	elsewhere.

1999-08-11  Heath Martin  <martinh@pegasus.cc.ucf.edu>

	* gnucash-sheet.c (gnucash_button_press_event): New function.

	* gnucash-grid.c (gnucash_grid_find_block_origin_by_pixel): Add a return
	value.
	(gnucash_grid_find_cell_origin_by_pixel): New function.

1999-08-10  Heath Martin  <martinh@pegasus.cc.ucf.edu>

	* gnucash-sheet.c (gnucash_sheet_key_press_event): Added up/down
	movement.
	(gnucash_sheet_style_set_dimensions): Change the way we set dimensions.
	(gnucash_sheet_size_allocate): Recompute style dimensions.

	* gnucash-item-edit.c (item_edit_get_pixel_coords): We need to
	compute pixels relative to the canvas origin, not the window
	origin.  Duh.  (Note that canvas sends coordinates to a draw
	function relative to the canvas origin.)

	* gnucash-cursor.c (gnucash_cursor_get_pixel_coords): Ditto.

	* gnucash-sheet.c (gnucash_sheet_deactivate_cursor_cell): New function.
	(gnucash_sheet_activate_cursor_cell): 
	(gnucash_sheet_cursor_move): 
	(gnucash_sheet_start_editing_at_cursor): 
	(gnucash_sheet_stop_editing): 

1999-08-09  Heath Martin  <martinh@pegasus.cc.ucf.edu>

	* combocell-gnome.c: New file, everything is a no-op for
	now, we just need the stubs.

	* gnucash-item-edit.[ch]: New file.  Implements an
	entry for the sheet.

1999-08-08  Heath Martin  <martinh@pegasus.cc.ucf.edu>

	* gnucash-cursor.[ch] : New file.  Implements a block/cell cursor.

	* gnucash-sheet.c (gnucash_sheet_style_get_cell_pixel_rel_coords):
	New function.

1999-08-06  Heath Martin  <martinh@pegasus.cc.ucf.edu>

	* gnucash-grid.c (gnucash_grid_draw): Updated to reflect
	the changes below.
	(gnucash_grid_find_block_origin_by_pixel): Bug fix (off by one).

	* gnucash-sheet.c (gnucash_sheet_table_load): Another overhaul
	of the structure.  We need to keep a local copy of the table, to
	keep what we need to redraw from changing underneath us.  So
	we needed some memory management and some minor API
	adjustments.
	(gnucash_sheet_resize): 
	(gnucash_sheet_resize_row): 
	(gnucash_sheet_destroy_row): 
	(gnucash_sheet_block_new_row):
	(gnucash_sheet_block_set_from_table): 
	(gnucash_sheet_block_set_entries): 
	(gnucash_sheet_block_clear_entries): 
	(gnucash_sheet_insert_block_row): 
	(gnucash_sheet_get_block): 

1999-08-04  Heath Martin  <martinh@pegasus.cc.ucf.edu>

	* gnucash-sheet.c (gnucash_sheet_compute_visible_range): New

	* gnucash-grid.c (gnucash_grid_draw): Basic support for drawing the text
	of a cell.  
	(gnucash_grid_draw): Added support for justifications.

1999-08-03  Heath Martin  <martinh@pegasus.cc.ucf.edu>

	* gnucash-sheet.c (gnucash_register_new): Make register into an
	independent widget.

	* gnucash-sheet.c, gnucash-grid.c:  Overhaul of the structure.  We
	don't need to keep a list of blocks, or a hash list of styles.  All
	the info we need is in the Table, and there are only five styles
	associated to a given table (from splitreg.h).  Many functions
	touched to reflect the change.  Also, keep track of the
	SplitRegister associated to this table.

1999-08-02  Heath Martin  <martinh@pegasus.cc.ucf.edu>

	* gnucash-color.c (gnucash_color_init): move the color allocation
	and hash table routines from table-gnome.c to here.

	* gnucash-sheet.c (gnucash_sheet_block_append): fixed a silly bug.
	(gnucash_sheet_block_style_new): Fix up the key.
	(gnucash_register_new): This is complex widget that already
	has the vertical/horizontal scrollbars attached.

	* gnucash-grid.c (gnucash_grid_find_block): Be sure we
	get a valid sheet_block.  Our register window may be larger
	than the number of blocks.

	* gnucash-sheet.c (gnucash_sheet_load): Initial load of the table
	into the register.

	* gnucash-color.[c,h]:  steal these files from gnumeric

1999-08-01  Heath Martin  <martinh@pegasus.cc.ucf.edu>

	* gnucash-sheet.c (gnucash_sheet_style_recompile): make height, width
	a member of the style, so we don't have to change every block
	when the style gets recompiled (on sheet allocation changes
	for example).

	* gnucash-grid.c (gnucash_grid_get_type): First hack at getting
	a grid going.
	(gnucash_grid_class_init): Ditto
	(gnucash_grid_set_arg): 
	(gnucash_grid_init): 
	(gnucash_grid_draw): 
	(gnucash_grid_find_block): 
	(gnucash_grid_update): 
	(gnucash_grid_unrealize): 
	(gnucash_grid_realize): 

	* gnucash-sheet.c (gnucash_sheet_new): New
	(gnucash_sheet_get_type): New
	(gnucash_sheet_class_init): New
	(gnucash_sheet_create): New
	(gnucash_sheet_realize): New
	(gnucash_sheet_block_new): New
	(gnucash_sheet_block_destroy): New
	(gnucash_sheet_vadjustment_value_changed): New
	(gnucash_sheet_set_top_block): New
	(gnucash_sheet_block_get_pixels): New
	(gnucash_sheet_get_block): New
	(gnucash_sheet_style_init): etc, per block style handling

